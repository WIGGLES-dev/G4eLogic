{
    "scheme": "gcs",
    "templates": {
        "character_element": {
            "reference": "reference",
            "notes": "notes",
            "categories": {
                "path": "categories",
                "load": "return new Set(data.categories || [])",
                "save": "return [...data.categories]"
            }
        },
        "list_item": {
            "features": {
                "path": "features",
                "load": "data.features.forEach(feature => target.addFeature().load(scheme, feature))",
                "save": "return [...data.features].map(feature => feature.save(scheme))"
            },
            "weapons": {
                "path": "weapons",
                "load": "data.weapons.forEach(weapon => target.addWeapon(data.type).load(scheme, weapon))",
                "save": "return [...target.weapons].map(weapon => weapon.save(scheme))"
            },
            "canContainChildren": {
                "load": "return (data.type || '').includes('container')"
            },
            "children": {
                "path": "children",
                "load": "data.children.forEach(child => target.ownedItems.add(new target.constructor().load(child).addAfter(target)))",
                "save": "return data.children.map(child => child.save(scheme))"
            }
        },
        "skill": {
            "name": "name",
            "difficulty": {
                "path": "difficulty",
                "load": "return data.difficulty.split('/')[1]",
                "save": "return `${data.signature}/${data.difficulty}`"
            },
            "points": "points",
            "specialization": "specialization",
            "mod": "mod",
            "signature": {
                "load": "return data.difficulty.split('/')[0]"
            },
            "hasTechLevel": {
                "load": "return Boolean(data.tech_level)"
            },
            "techLevel": "tech_level",
            "defaults": {
                "path": "defaults",
                "load": "data.defaults.forEach(Default => target.addDefault().load(scheme, Default))",
                "save": "return [...data.features].filter(feature => feature.constructor === 'Default').map(Default => Default.save(scheme))"
            },
            "defaultedFrom": null,
            "encumbrancePenaltyMultiple": "encumbrance_penalty_multiplier"
        },
        "default": {
            "type": "type",
            "modifier": "modifier",
            "specialization": "specialization",
            "name": "name"
        },
        "modifier": {
            "enabled": {
                "path": "disabled",
                "load": "return !Boolean(data.disabled)",
                "save": "return !data.enabled"
            },
            "name": "name",
            "cost": "cost"
        },
        "weapon": {
            "usage": "usage",
            "strength": "strength",
            "damage": {
                "load": "return data.damage.st || '' + `${data.damage.st ? ' + ' : ' '}` + data.damage.base || data.damage.type"
            },
            "damageStrength": "damage.st",
            "damageBase": "damage.base",
            "damageType": "damage.type",
            "defaults": {
                "path": "defaults",
                "load": "data.defaults.forEach(Default => target.addDefault().load(scheme, Default))",
                "save": "return [...data.features].filter(feature => feature.constructor === 'Default').map(Default => Default.save(scheme))"
            }
        }
    },
    "mappings": {
        "Equipment": {
            "type": {
                "path": "type",
                "save": "return data.canContainChildren === true ? 'equipment_container' : 'equipment'"
            },
            "equipped": "equipped",
            "version": {
                "path": "version",
                "save": "return 1"
            },
            "templates": [
                "character_element",
                "list_item"
            ],
            "name": "description",
            "techLevel": "tech_level",
            "legalityClass": "legality_class",
            "quantity": "quantity",
            "uses": "uses",
            "maxUses": "max_uses",
            "weight": {
                "path": "weight",
                "load": "return +(data.weight ? data.weight.split(' ')[0] : 0)",
                "save": "return `${data.weight} lb`"
            },
            "value": {
                "path": "value",
                "load": "return +data.value",
                "save": "return `${data.value}`"
            },
            "containedWeightReduction": {
                "load": "return null"
            },
            "applySkillEncumbrancePenalty": "ignore_weight_for_skills",
            "isAmmunition": "isAmmunition",
            "location": "location"
        },
        "Trait": {
            "type": {
                "path": "type",
                "save": "return data.canContainChildren === true ? 'advantage_container': 'advantage'"
            },
            "version": {
                "path": "version",
                "save": "return 1"
            },
            "templates": [
                "character_element",
                "list_item"
            ],
            "name": "name",
            "basePoints": "base_points",
            "hasLevels": {
                "load": "return +data.levels > -1"
            },
            "levels": {
                "path": "levels",
                "load": "return +data.levels",
                "save": "return data.hasLevels && data.levels ? data.levels.toString() : undefined"
            },
            "allowHalfLevels": null,
            "hasHalfLevel": "has_half_level",
            "roundDown": "round_down",
            "types": null,
            "disabled": "disabled",
            "pointsPerLevel": "points_per_level",
            "containerType": null,
            "modifiers": {
                "path": "modifiers",
                "load": "data.modifiers.forEach(modifier => target.addModifier().load(scheme, modifier))",
                "save": "data.modifiers"
            }
        },
        "Skill": {
            "type": {
                "save_only": true,
                "path": "type",
                "save": "return data.canContainChildren === true ? 'skill_container': 'skill'"
            },
            "version": {
                "save_only": true,
                "path": "version",
                "value": 1
            },
            "templates": [
                "skill",
                "character_element",
                "list_item"
            ]
        },
        "Technique": {
            "type": {
                "load": "return 1",
                "path": "type"
            },
            "version": {
                "path": "version",
                "load": "return 1"
            },
            "templates": [
                "skill",
                "character_element",
                "list_item"
            ],
            "difficulty": "difficulty",
            "limit": "limit",
            "default": {
                "path": "default",
                "load": "return target.default.load(scheme, data)",
                "save": "return data.save(scheme)"
            }
        },
        "Spell": {
            "type": {
                "save_only": true,
                "path": "type",
                "save": "return data.canContainChildren === true ? 'spell_container' : 'spell'"
            },
            "version": {
                "save_only": true,
                "path": "version",
                "value": 1
            },
            "templates": [
                "skill",
                "character_element",
                "list_item"
            ],
            "college": "college",
            "class": "class",
            "resist": "resist",
            "powerSource": "power_source",
            "spellClass": "spell_class",
            "castingCost": "casting_cost",
            "maintenanceCost": "maintenance_cost",
            "castingTime": "castingTime",
            "duration": "duration"
        },
        "Feature": {
            "type": {
                "path": "type",
                "load": "return this.loadFeature(target).load(scheme, data.type)",
                "save": ""
            },
            "leveled": "per_level",
            "amount": "amount",
            "core.attribute": "attribute",
            "core.location": "location",
            "core.selectionType": "selection_type",
            "core.nameCompareType": "name.compare",
            "core.name": "name.qualifier",
            "core.specializationCompareType": "specialization.compare",
            "core.specialization": "specialization.qualifier",
            "core.categoryCompareType": "category.compare",
            "core.category": "category.qualifier"
        },
        "RangedWeapon": {
            "templates": [
                "weapon"
            ],
            "type": {
                "path": "type",
                "save": "return 'ranged_weapon'"
            },
            "accuracy": "accuracy",
            "range": "range",
            "rateOfFire": "rate_of_fire",
            "shots": "shots",
            "bulk": "bulk"
        },
        "MeleeWeapon": {
            "templates": [
                "weapon"
            ],
            "type": {
                "path": "type",
                "save": "return 'melee_weapon'"
            },
            "reach": "reach",
            "parry": "parry",
            "block": "block"
        },
        "SkillDefault": {
            "templates": [
                "default"
            ]
        },
        "WeaponDefault": {
            "templates": [
                "default"
            ]
        },
        "EquipmentModifier": {
            "type": {
                "save_only": true,
                "path": "type",
                "value": "eqp_modifier"
            },
            "version": {
                "save_only": true,
                "path": "version",
                "value": 1
            },
            "templates": [
                "character_element",
                "modifier"
            ],
            "weight": "weight",
            "costType": "cost_type",
            "weightType": "weight_type"
        },
        "TraitModifier": {
            "type": {
                "save_only": true,
                "path": "type",
                "value": "modifier"
            },
            "version": {
                "save_only": true,
                "path": "version",
                "value": 1
            },
            "templates": [
                "character_element",
                "modifier"
            ],
            "costType": "cost_type",
            "affects": "affects",
            "levels": "levels"
        }
    },
    "root": {
        "totalPoints": "total_points",
        "settings": {
            "version": {
                "save": "return 1"
            },
            "default_length_units": "ft_in",
            "default_weight_units": "lb",
            "user_description_display": "tooltip",
            "modifiers_display": "inline",
            "notes_display": "inline_and_tooltip",
            "base_will_and_per_on_10": false,
            "use_multiplicative_modifiers": false,
            "use_modifying_dice_plus_adds": false,
            "use_know_your_own_strength": false,
            "use_reduced_swing": true,
            "use_thrust_equals_swing_minus_2": false,
            "use_simple_metric_conversions": true,
            "show_college_in_sheet_spells": false,
            "use_title_in_footer": false,
            "block_layout": [
                "reactions",
                "melee",
                "ranged",
                "advantages skills",
                "spells",
                "equipment",
                "other_equipment",
                "notes"
            ]
        }
    },
    "ST": {
        "save": "return data.attributeList.getAttribute('ST').level"
    },
    "DX": {
        "save": "return data.attributeList.getAttribute('DX').level"
    },
    "IQ": {
        "save": "return data.attributeList.getAttribute('DX').level"
    },
    "HT": {
        "load": "return data.attributeList.getAttribute('HT').level"
    },
    "advantages": {},
    "skills": {},
    "equipment": {},
    "other_equipment": {},
    "third_party": {}
}