{
    "$schema": {
        "tags": {
            "attributes": [
                "primary",
                "secondary",
                "optional",
                "derived",
                "tertiary",
                "sub-stat"
            ]
        }
    },
    "UI": {
        "rolling": true
    },
    "rulesets": {
        "use_multiplicative_modifiers": {
            "enabled": false,
            "implemented": false
        },
        "use_knowing_your_own_strength": {
            "enabled": false,
            "implemented": false
        },
        "use_reduced_swing_damage": {
            "enabled": false,
            "implemented": false
        },
        "use_no_school_grognard_reduced_swing_damage": {
            "enabled": false,
            "implemented": false
        }
    },
    "attributes": {
        "strength": {
            "signature": "ST",
            "abbreviation": "st",
            "name": "strength",
            "tooltip": "Strength ([costPerLevel] points per level), ref. BS14<br/>Modifies HP, Lifting ST, and Striking ST.<br/>Unmodified ([unmodifiedLevel])<br/>Cost is reduced by -10% per SM above 0 and -40% for any level of No Fine Manipulators (max -80%).<br/>",
            "cost_per_level": 10,
            "default_level": 10,
            "can_be_signature": true,
            "substats": [
                "HP",
                "SS",
                "LS"
            ],
            "tags": [
                "primary"
            ]
        },
        "striking_strength": {
            "signature": "SS",
            "abbreviation": "ss",
            "name": "striking strength",
            "tooltip": "Striking ST ([costPerLevel] points per level), ref. BS88<br/>Based off ST. Modifies Swing and Thrust damage.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "based_on": "return this.getAttribute('ST').calculateLevel()",
            "cost_per_level": 5,
            "tags": [
                "sub-stat"
            ]
        },
        "lifting_strength": {
            "signature": "LS",
            "abbreviation": "ls",
            "name": "lifting strength",
            "tooltip": "Striking ST ([costPerLevel] points per level), ref. BS65<br/>Based off ST. Modifies Basic Lift and situations of 'slow, steady pressure'.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "based_on": "return this.getAttribute('ST').calculateLevel()",
            "cost_per_level": 3,
            "tags": [
                "sub-stat"
            ]
        },
        "intelligence": {
            "signature": "IQ",
            "abbreviation": "iq",
            "name": "intelligence",
            "tooltip": "Intelligence ([costPerLevel] points per level), ref. BS15<br/>Modifies Perception, Will, and IQ-based skills.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 20,
            "default_level": 10,
            "can_be_signature": true,
            "tags": [
                "primary"
            ]
        },
        "perception": {
            "signature": "Per",
            "abbreviation": "per",
            "name": "perception",
            "tooltip": "Perception ([costPerLevel] points per level), ref. BS16<br/>Based off IQ. Modifies Perception-based skills and Perception checks.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 5,
            "based_on": "return this.getAttribute('IQ').calculateLevel()",
            "can_be_signature": true,
            "substats": [
                "Vision",
                "Hearing",
                "Smell",
                "Touch"
            ],
            "tags": [
                "derived",
                "secondary"
            ]
        },
        "vision": {
            "signature": "Vision",
            "abbreviation": "vis",
            "name": "vision",
            "tooltip": "Vision ([costPerLevel] points per level), ref. BS35<br/>Based off Perception. Modifies vision-based Perception skills and checks.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('Per').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "hearing": {
            "signature": "Hearing",
            "abbreviation": "hr'g",
            "name": "hearing",
            "tooltip": "Hearing ([costPerLevel] points per level), ref. BS35<br/>Based off Perception. Modifies hearing-based Perception skills and checks.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('Per').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "smell_taste": {
            "signature": "S&T",
            "abbreviation": "sml",
            "name": "smell and taste",
            "tooltip": "Smell and Taste ([costPerLevel] points per level), ref. BS35<br/>Based off Perception. Modifies smell/taste-based Perception skills and checks.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('Per').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "touch": {
            "signature": "Touch",
            "abbreviation": "tch",
            "name": "touch",
            "tooltip": "Touch ([costPerLevel] points per level), ref. BS35<br/>Based off Perception. Modifies touch-based Perception skills and checks.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('Per').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "will": {
            "signature": "Will",
            "abbreviation": "will",
            "name": "will",
            "tooltip": "Will ([costPerLevel] points per level), ref. BS16<br/>Based off IQ. Modifies Will-based skills and Will checks.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 5,
            "based_on": "return this.getAttribute('IQ').calculateLevel()",
            "can_be_signature": true,
            "tags": [
                "derived",
                "secondary"
            ]
        },
        "fright_check": {
            "signature": "FC",
            "abbreviation": "frgt",
            "name": "fright check",
            "tooltip": "Fright Check ([costPerLevel] points per level), ref. BS55 for Fearlessness, ref. BS136 for Fearfulness<br/>Based off Will. Modifies Fright checks, ref. BS360<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('Will').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "fright_threshold": {
            "signature": "FCT",
            "abbreviation": "FCT",
            "name": "fright threshold",
            "tooltip": "Fright Threshold, ref. BS360. Default value is 13; cannot normally be bought down.<br/> If final, modified Fright check exceeds 13, reduce it to 13. Any roll of 14 or more is a failure. Ref. BS360.<br/> Based off Will. Modifies Fright checks, ref. BS360<br/>Unmodified ([unmodifiedLevel])<br/>",
            "based_on": "return this.getAttribute('FC').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "dexterity": {
            "signature": "DX",
            "abbreviation": "dx",
            "name": "dexterity",
            "tooltip": "Dexterity ([costPerLevel] points per level), ref. BS16<br/>Modifies Basic Speed, DX checks, and DX-based skill rolls.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 20,
            "default_level": 10,
            "can_be_signature": true,
            "tags": [
                "primary"
            ]
        },
        "speed": {
            "signature": "Speed",
            "abbreviation": "spd",
            "name": "basic speed",
            "tooltip": "Basic Speed ([costPerLevel] points per level per 0.25), ref. BS17<br/>Based off (DX + HT) / 4. Modifies Basic Move, Dodge, and combat order.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 20,
            "increment": 0.25,
            "based_on": "return (this.getAttribute('DX').calculateLevel() + this.getAttribute('HT').calculateLevel()) / 4",
            "can_be_signature": true,
            "tags": [
                "derived",
                "tertiary"
            ]
        },
        "dodge": {
            "signature": "DG",
            "abbreviation": "dge",
            "name": "dodge",
            "tooltip": "Dodge ([costPerLevel] points per level per 0.25), ref. BS51 for Enhanced Defenses (Dodge).<br/>Based off Basic Speed. Modifies all Dodge-based defenses.<br/>Penalized by encumberance. See adjoining encumberance table.<br/>Halved if either HP or FP fall under 1/3. Ref. BS419, BS426, respectively.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 15,
            "based_on": "return Math.floor(this.getAttribute('Speed').calculateLevel())",
            "tags": [
                "derived",
                "tertiary"
            ]
        },
        "move": {
            "signature": "Move",
            "abbreviation": "move",
            "name": "move",
            "tooltip": "Basic Move ([costPerLevel] points per level), ref. BS17.<br/>Based off Basic Speed. Modifies maximum speed per turn.<br/>Penalized by encumberance. See adjoining encumberance table.<br/>Halved if either HP or FP fall under 1/3. Ref. BS419, BS426, respectively.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 5,
            "based_on": "return Math.floor(this.getAttribute('Speed').calculateLevel())",
            "tags": [
                "derived",
                "tertiary"
            ]
        },
        "health": {
            "signature": "HT",
            "abbreviation": "ht",
            "name": "health",
            "tooltip": "Health ([costPerLevel] points per level), ref. BS15.<br/>Modifies Basic Speed, FP, HT checks, and HT-based skill roll.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 10,
            "default_level": 10,
            "can_be_signature": true,
            "tags": [
                "primary"
            ]
        },
        "unstun": {
            "signature": "US",
            "abbreviation": "Unst",
            "name": "unstun",
            "tooltip": "Unstun Check, ref. BS420. Based on HT. Cannot normally be bought up directly.<br/>One turn after being stunned, you may roll this check to become unstunned.<br/>High Pain Threshold gives +3, Low Pain Threshold gives -4. Ref. BS59 and BS142, respectively.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "based_on": "return this.getAttribute('HT').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "kcockdown": {
            "signature": "KD",
            "abbreviation": "kdwn",
            "name": "knockdown",
            "tooltip": "Knockdown and Stunning Check, ref. BS420. Based on HT. Cannot normally be bought up directly.<br/>If you take a major wound, or are struck in the head or vitals for enough injury to take Shock, roll.<br/>You take a -5 for a major wound to the face, vitals, or groin, and a -10 for a major wound to the eyes or skull.<br/>High Pain Threshold gives +3, Low Pain Threshold gives -4. Ref. BS59 and BS142, respectively.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "based_on": "return this.getAttribute('HT').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "unconsciocsness": {
            "signature": "UC",
            "abbreviation": "unc",
            "name": "unconsciousness",
            "tooltip": "Unconsciousness Check, ref. BS380. Based on HT.<br/>If you are at 0 or less HP, roll every turn you take any action other than Do Nothing. Failure means you fall unconscious.<br/>You take a -1 per full multiple of HP below zero.<br/>Hard to Subdue gives +1/level. Ref. BS59. Fit gives +1, Very Fit gives +2. Ref. BS55.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 1,
            "based_on": "return this.getAttribute('HT').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "death": {
            "signature": "Death",
            "abbreviation": "dth",
            "name": "death",
            "tooltip": "Death Check, ref. BS380. Based on HT.<br/>Every time you hit a full multiple of your negative HP (-1x, -2x, -3x, -4x), roll. Failure means you die.<br/>You take a -1 per full multiple of HP below -1x.<br/>If you are at -5x HP, you automatically fail this check and die.<br/>Hard to Kill gives +1/level, Easy to Kill gives -1/level. Ref. BS58, BS134, respectively. Fit gives +1, Very Fit gives +2. Ref. BS55.<br/>Unmodified ([unmodifiedLevel])<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('HT').calculateLevel()",
            "tags": [
                "sub-stat"
            ]
        },
        "quintessence": {
            "signature": "QN",
            "abbreviation": "qn",
            "name": "quintessence",
            "tooltip": "Quintessence ([costPerLevel] points per level), ref. Pyramid #3/120, pg. 21.<br/>Modifies QN and all supernatural rolls.<br/>This trait is optional and not listed in Basic Set. See Pyramid #3/120 for more information.)<br/>Unmodified ([unmodifiedLevel]",
            "cost_per_level": 10,
            "default_level": 10,
            "can_be_signature": true,
            "tags": [
                "primary",
                "optional"
            ]
        },
        "hit_points": {
            "signature": "HP",
            "abbreviation": "hp",
            "name": "hit points",
            "tooltip": "HP ([costPerLevel] points per level), based on ST. ref. BS16<br/>Cost is reduced by -10% per SM above 0 (max -80%).<br/><strong><br/>Reeling:</strong> If current HP is below [[currentValue] / 3], you are reeling. Ref. BS419.<br/><BLOCKQUOTE>Halve your Basic Move and Basic Speed. This sheet automatically calculates this.</BLOCKQUOTE><br/><strong>Verge of Collapse:</strong> If current HP is at or below 0, you may fall unconscious.<br/><BLOCKQUOTE>If you take any action other than Do Nothing, roll vs. UNC. If you fail, you fall unconscious.<br/>Take an additional -1 for every multiple of -HP you are on:<br/>(-1 at [[displayLevel] * -1] HP, -2 at [[displayLevel] * -2] HP, -3 at [[displayLevel] * -3] HP, -4 at [[displayLevel] * -4] HP)<br/>If you have positive HP, you awake in 15 minutes. If your HP is between 0 and [[displayLevel] * -1], you may make an HT check every hour.<br/>If you have below [[displayLevel] * -1] HP, you can roll HT once after 12 hours to awaken. If you fail, see Ref. BS424; you may die.</BLOCKQUOTE><br/><strong>Verge of Death:<br/></strong> If current HP falls to or below [[displayLevel] * -1], you must roll to not die.<br/><BLOCKQUOTE>Roll vs. DTH once. If you fail by 1 or 2, you are mortally wounded, but do not die. Ref. BS423.<br/>On a failure, you immediately die.<br/>Roll again for every multiple of -HP you fall below:<br/>(-1 at [[displayLevel] * -1] HP, -2 at [[displayLevel] * -2] HP, -3 at [[displayLevel] * -3] HP, -4 at [[displayLevel] * -4] HP)</BLOCKQUOTE><br/><strong>Death:</strong> If current HP falls to or below [[displayLevel] * -5], you die.<br/><BLOCKQUOTE>If it falls below [[displayLevel] * -10], your body is destroyed. No ressurection is possible.</BLOCKQUOTE><br/>See Ref. BS424 for information about regaining HP.",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('ST').calculateLevel()",
            "color": "red",
            "tags": [
                "pool",
                "derived"
            ]
        },
        "fatige_points": {
            "signature": "FP",
            "abbreviation": "fp",
            "name": "fatigue",
            "tooltip": "FP ([costPerLevel] points per level), based on HT. ref. BS16<br/><strong>Tired:<br/></strong> If current FP is below [[currentValue] / 3], you are reeling. Ref. BS426.<br/><BLOCKQUOTE>Halve your Basic Move, Dodge, and ST (rounding up), but not HP or ST-based damage. This sheet automatically calculates this.</BLOCKQUOTE><br/><strong>Verge of Collapse:</strong> If current FP is at or below 0, you may fall unconscious.<br/><BLOCKQUOTE>If you take additional FP damage, you additionally take one corresponding point of HP damage.<br/>If you do anything but rest, talk, or perform a Do Nothing, roll a Will roll. If you fail, you fall unconscious. <br/>If you critically fail, roll vs. HT. If you fail that roll, you have a heart attack. Ref. BS429.<br/>If you take any action other than Do Nothing, roll vs. UNC. If you fail, you fall unconscious.</BLOCKQUOTE><br/><strong>Unconscious</strong> If current FP falls to or below [[displayLevel] * -1], you fall unconscious.<br/><BLOCKQUOTE>FP cannot fall below this level, but you still take HP damage if you lose further FP damage.<br/>You regain consciousness once you hit 0 FP.</BLOCKQUOTE><br/>FP lost through exertion is typically regained at 1 point per 10 minutes of rest. Ref. BS427.<br/>If you have Fit, you regain lost FP at twice the normal rate (1 point per 5 minutes) Ref. BS55.<br/>",
            "cost_per_level": 2,
            "based_on": "return this.getAttribute('HT').calculateLevel()",
            "color": "green",
            "tags": [
                "pool",
                "derived"
            ]
        },
        "quintessence_points": {
            "signature": "QP",
            "abbreviation": "qp",
            "name": "quintessence",
            "tooltip": "QP ([costPerLevel] points per level), based on QT. ref. Pyramid #3/120, pg. 22. <br/>If current QP is below [[currentValue] / 3], halve your QT when calculating the benefits of supernatural resistance.<br/>If current QP is below 0, quarter your QT when calculating the benefits of supernatural resistance. You may also fall unconscious; see ref. Pyramid #3/120, pg. 26.<br/>QP is typically regained at 1 point per 10 minutes, regardless of rest.<br/>",
            "cost_per_level": 3,
            "based_on": "return this.getAttribute('QN').calculateLevel()",
            "color": "blue",
            "tags": [
                "pool",
                "derived",
                "optional"
            ]
        }
    },
    "locations": {
        "head": {
            "is_group": true,
            "sub_locations": [
                "left eye",
                "right eye",
                "skull",
                "face",
                "right ear",
                "left ear"
            ]
        },
        "eye": {
            "has": [
                "left",
                "right"
            ],
            "hit_penalty": -9,
            "cripple_ratio": 10
        },
        "ear": {
            "has": [
                "left",
                "right"
            ]
        },
        "skull": {
            "hit_range": [
                3,
                4
            ],
            "hit_penalty": -7
        },
        "face": {
            "hit_range": [
                5
            ],
            "hit_penalty": -5
        },
        "torso": {
            "is_group": true,
            "sub_locations": [
                "neck",
                "chest",
                "abdomen",
                "groin",
                "vitals"
            ],
            "hit_range": [
                9,
                10
            ],
            "hit_penalty": 0
        },
        "neck": {
            "hit_range": [
                17,
                18
            ],
            "hit_penalty": -5
        },
        "chest": {
            "hit_penalty": 0
        },
        "vitals": {
            "hit_penalty": -3
        },
        "abdomen": {
            "hit_penalty": -1
        },
        "groin": {
            "hit_range": [
                11
            ],
            "hit_penalty": -3
        },
        "arm": {
            "is_group": true,
            "sub_locations": [
                "shoulder",
                "upperarm",
                "elbow",
                "forearm",
                "hand"
            ],
            "has": [
                "right",
                "left"
            ],
            "hit_range": [
                12
            ],
            "hit_penalty": -2,
            "cripple_ratio": 2
        },
        "shoulder": {
            "has": [
                "right",
                "left"
            ],
            "hit_penalty": -6,
            "cripple_ratio": 2
        },
        "upperarm": {
            "has": [
                "right",
                "left"
            ],
            "hit_penalty": -6,
            "cripples_on": 2
        },
        "elbow": {
            "has": [
                "right",
                "left"
            ],
            "hit_penalty": -5,
            "cripple_ratio": 3
        },
        "forearm": {
            "has": [
                "right",
                "left"
            ],
            "hit_penalty": -4,
            "cripple_ratio": 2
        },
        "leg": {
            "is_group": true,
            "sub_locations": [
                "thigh",
                "knee",
                "shin",
                "foot"
            ],
            "has": [
                "right",
                "left"
            ],
            "hit_range": [
                13,
                14
            ],
            "hit_penalty": -2,
            "cripple_ratio": 2
        },
        "thigh": {
            "has": [
                "right",
                "left"
            ],
            "hit_penalty": -5
        },
        "knee": {
            "has": [
                "right",
                "left"
            ],
            "cripple_ratio": 3,
            "hit_penalty": -5
        },
        "shin": {
            "has": [
                "right",
                "left"
            ],
            "hit_penalty": -5,
            "cripple_ratio": 2
        },
        "hand": {
            "has": [
                "right",
                "left"
            ],
            "location": "Hand",
            "hit_range": [
                15
            ],
            "hit_penalty": -4,
            "cripple_ratio": 3
        },
        "foot": {
            "has": [
                "right",
                "left"
            ],
            "location": "Foot",
            "hit_range": [
                16
            ],
            "hit_penalty": -4,
            "cripple_ratio": 3
        }
    }
}