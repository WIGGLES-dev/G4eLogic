webpackHotUpdate("gurps",{

/***/ "./src/components/ContextMenu/ContextMenuOption.svelte":
/*!*************************************************************!*\
  !*** ./src/components/ContextMenu/ContextMenuOption.svelte ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/index.js");
/* harmony import */ var _ContextMenu_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContextMenu.svelte */ "./src/components/ContextMenu/ContextMenu.svelte");
/* harmony import */ var _components_Cell_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @components/Cell.svelte */ "./src/components/Cell.svelte");
/* src\components\ContextMenu\ContextMenuOption.svelte generated by Svelte v3.31.0 */






function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (31:0) {#if typeof option.show === 'function' ? option.show() : true }
function create_if_block(ctx) {
	let li;
	let cell;
	let t0;
	let t1;
	let if_block1_anchor;
	let current;
	let mounted;
	let dispose;

	cell = new _components_Cell_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: { value: /*option*/ ctx[1].label }
		});

	let if_block0 = /*option*/ ctx[1].options instanceof Array && create_if_block_2(ctx);
	let if_block1 = /*subOptionsRendered*/ ctx[4] && create_if_block_1(ctx);

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(cell.$$.fragment);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block0) if_block0.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			if_block1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "px-1 text-white flex");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(cell, li, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t0);
			if (if_block0) if_block0.m(li, null);
			/*li_binding*/ ctx[7](li);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t1, anchor);
			if (if_block1) if_block1.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block1_anchor, anchor);
			current = true;

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(li, "click", Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["stop_propagation"])(/*click*/ ctx[5]));
				mounted = true;
			}
		},
		p(ctx, dirty) {
			const cell_changes = {};
			if (dirty & /*option*/ 2) cell_changes.value = /*option*/ ctx[1].label;
			cell.$set(cell_changes);

			if (/*option*/ ctx[1].options instanceof Array) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					if_block0.m(li, null);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*subOptionsRendered*/ ctx[4]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*subOptionsRendered*/ 16) {
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block1, 1);
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(cell.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block1);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(cell.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block1);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(cell);
			if (if_block0) if_block0.d();
			/*li_binding*/ ctx[7](null);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t1);
			if (if_block1) if_block1.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block1_anchor);
			mounted = false;
			dispose();
		}
	};
}

// (34:8) {#if option.options instanceof Array}
function create_if_block_2(ctx) {
	let div;
	let mounted;
	let dispose;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div.innerHTML = `<span class="fas fa-angle-right text-white"></span>`;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "px-1 h-full");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(div, "click", Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["stop_propagation"])(/*renderSubMenu*/ ctx[6]), true);
				mounted = true;
			}
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			mounted = false;
			dispose();
		}
	};
}

// (40:4) {#if subOptionsRendered}
function create_if_block_1(ctx) {
	let ul;
	let current;
	let each_value = /*option*/ ctx[1].options;
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "bg-gray-500 p-1 rounded");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, ul, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			/*ul_binding*/ ctx[8](ul);
			current = true;
		},
		p(ctx, dirty) {
			if (dirty & /*option, close*/ 3) {
				each_value = /*option*/ ctx[1].options;
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i], 1);
						each_blocks[i].m(ul, null);
					}
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(ul);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			/*ul_binding*/ ctx[8](null);
		}
	};
}

// (42:12) {#each option.options as option}
function create_each_block(ctx) {
	let contextmenuoption_1;
	let current;

	contextmenuoption_1 = new ContextMenuOption_1({
			props: {
				option: /*option*/ ctx[1],
				close: /*close*/ ctx[0]
			}
		});

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(contextmenuoption_1.$$.fragment);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(contextmenuoption_1, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const contextmenuoption_1_changes = {};
			if (dirty & /*option*/ 2) contextmenuoption_1_changes.option = /*option*/ ctx[1];
			if (dirty & /*close*/ 1) contextmenuoption_1_changes.close = /*close*/ ctx[0];
			contextmenuoption_1.$set(contextmenuoption_1_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(contextmenuoption_1.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(contextmenuoption_1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(contextmenuoption_1, detaching);
		}
	};
}

function create_fragment(ctx) {
	let show_if = typeof /*option*/ ctx[1].show === "function"
	? /*option*/ ctx[1].show()
	: true;

	let if_block_anchor;
	let current;
	let if_block = show_if && create_if_block(ctx);

	return {
		c() {
			if (if_block) if_block.c();
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block_anchor, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*option*/ 2) show_if = typeof /*option*/ ctx[1].show === "function"
			? /*option*/ ctx[1].show()
			: true;

			if (show_if) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*option*/ 2) {
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block, 1, 1, () => {
					if_block = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block);
			current = false;
		},
		d(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block_anchor);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { option } = $$props;
	let { close } = $$props;

	function click(e) {
		if (typeof option.callback === "function") option.callback();
		if (!option.interactive) close();
	}

	function renderSubMenu(e) {
		$$invalidate(4, subOptionsRendered = true);
	}

	let menuItemElement;
	let subMenuElement;
	let subOptionsRendered = false;

	function li_binding($$value) {
		svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"][$$value ? "unshift" : "push"](() => {
			menuItemElement = $$value;
			$$invalidate(2, menuItemElement);
		});
	}

	function ul_binding($$value) {
		svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"][$$value ? "unshift" : "push"](() => {
			subMenuElement = $$value;
			$$invalidate(3, subMenuElement);
		});
	}

	$$self.$$set = $$props => {
		if ("option" in $$props) $$invalidate(1, option = $$props.option);
		if ("close" in $$props) $$invalidate(0, close = $$props.close);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*subMenuElement, menuItemElement*/ 12) {
			$: if (subMenuElement instanceof HTMLElement) {
				Object(_popperjs_core__WEBPACK_IMPORTED_MODULE_1__["createPopper"])(menuItemElement, subMenuElement, {
					placement: "right-start",
					strategy: "fixed"
				});
			}
		}
	};

	return [
		close,
		option,
		menuItemElement,
		subMenuElement,
		subOptionsRendered,
		click,
		renderSubMenu,
		li_binding,
		ul_binding
	];
}

class ContextMenuOption_1 extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();
		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], { option: 1, close: 0 });
	}
}

/* harmony default export */ __webpack_exports__["default"] = (ContextMenuOption_1);

/***/ })

})
//# sourceMappingURL=gurps.fc0784ebfba71a55b8d8.hot-update.js.map