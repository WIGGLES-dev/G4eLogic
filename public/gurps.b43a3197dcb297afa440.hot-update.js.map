{"version":3,"sources":["webpack:///./src/extend.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+B;AACE;AAQjC,4CAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAA6B,KAAiB;IAChE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,MAAM,IAAI,GAAG,gDAAS,CAAC,OAAO,EAAE,KAAK,EAAE;YACnC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;SAC1B,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI;KACpB;SAAM;QACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;AACL,CAAC;AACD,4CAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAA6B,GAAG,IAAc;AAEpE,CAAC","file":"gurps.b43a3197dcb297afa440.hot-update.js","sourcesContent":["import { State } from 'rxdeep';\r\nimport deepmerge from 'deepmerge'\r\nimport searchjs, { AnyObject } from 'searchjs';\r\ndeclare module 'rxdeep/dist/es6/state' {\r\n    interface State<T> {\r\n        set(value: Partial<T>): void\r\n        sub<K extends keyof T>(...keys: string[])\r\n    }\r\n}\r\nState.prototype.set = function <T>(this: State<T>, value: Partial<T>) {\r\n    if (typeof value === 'object') {\r\n        const current = this.value;\r\n        const next = deepmerge(current, value, {\r\n            arrayMerge: (t, s) => s\r\n        })\r\n        this.value = next\r\n    } else {\r\n        this.value = value;\r\n    }\r\n}\r\nState.prototype.sub = function <T>(this: State<T>, ...keys: string[]) {\r\n\r\n}"],"sourceRoot":""}