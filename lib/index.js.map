{"version":3,"sources":["webpack://lib/webpack/universalModuleDefinition","webpack://lib/webpack/bootstrap","webpack://lib/./src/character/attribute.ts","webpack://lib/./src/character/character.ts","webpack://lib/./src/character/equipment.ts","webpack://lib/./src/character/misc/default.ts","webpack://lib/./src/character/misc/element.ts","webpack://lib/./src/character/misc/feature.ts","webpack://lib/./src/character/misc/list.ts","webpack://lib/./src/character/misc/modifier.ts","webpack://lib/./src/character/profile.ts","webpack://lib/./src/character/serialization/gcs_json.ts","webpack://lib/./src/character/serialization/serializer.ts","webpack://lib/./src/character/skill.ts","webpack://lib/./src/character/spell.ts","webpack://lib/./src/character/technique.ts","webpack://lib/./src/character/trait.ts","webpack://lib/./src/gcs/gcs.ts","webpack://lib/./src/index.ts","webpack://lib/./src/utils/2R20.ts","webpack://lib/./src/utils/json_utils.ts","webpack://lib/./src/utils/string_utils.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib\"] = factory();\n\telse\n\t\troot[\"lib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Feature } from \"./misc/feature\";\r\nimport { Character, Signature } from \"./character\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport { Featurable } from \"@character/character\";\r\n\r\nexport class Attribute {\r\n    name: Signature\r\n    character: Character\r\n    level: number\r\n    costPerLevel: number\r\n    defaultLevel: number\r\n    basedOn: () => number\r\n\r\n    constructor(\r\n        name: Signature,\r\n        character: Character,\r\n        costPerLevel: number,\r\n        {\r\n            defaultLevel = 0,\r\n            basedOn = () => 0\r\n        }\r\n    ) {\r\n        this.name = name;\r\n        this.character = character;\r\n        this.level = defaultLevel;\r\n        this.costPerLevel = costPerLevel;\r\n        this.defaultLevel = defaultLevel;\r\n        this.basedOn = basedOn;\r\n    }\r\n\r\n    setLevel(level: number) { if (level) this.level = level }\r\n    setLevelDelta() { }\r\n\r\n    getMod() { return Attribute.bonusReducer(this.character, this.name) }\r\n    pointsSpent() { return this.levelsIncreased() * this.costPerLevel }\r\n    levelsIncreased() { return this.level - this.defaultLevel }\r\n    calculateLevel() { return this.level + this.getMod() + this.basedOn() }\r\n\r\n\r\n    get displayLevel() { return this.calculateLevel() }\r\n    set displayLevel(level) {\r\n        const mod = this.getMod();\r\n        if (this.defaultLevel) {\r\n            this.level = level - mod;\r\n        } else if (!this.defaultLevel && this.basedOn) {\r\n            this.level = level - this.basedOn() - mod;\r\n        }\r\n    }\r\n\r\n    static bonusReducer(sheet: Character, attribute: Signature) {\r\n        return sheet.featureList.getFeaturesByType(FeatureType.attributeBonus).reduce((prev, cur) => {\r\n            if (cur instanceof AttributeBonus) {\r\n                if (cur.ownerIsActive() && cur.attribute?.toString()?.toLowerCase() === attribute?.toString()?.toLowerCase() && !cur.limitation) {\r\n                    prev += cur.getBonus()\r\n                }\r\n            }\r\n            return prev\r\n        }, 0)\r\n    }\r\n}\r\n\r\nexport class AttributeBonus<T extends Featurable> extends Feature<T> {\r\n    attribute: Signature\r\n    constructor(owner: T) {\r\n        super(owner, FeatureType.attributeBonus);\r\n    }\r\n    loadJSON(json: json) {\r\n        const data = objectify<json>(json);\r\n        super.loadJSON(data);\r\n        this.attribute = data.attribute\r\n        return this\r\n    }\r\n}","import { List, ListItem } from \"./misc/list\";\r\nimport { Attribute } from \"./attribute\";\r\nimport { SkillList } from \"./skill\";\r\nimport { TraitList } from \"./trait\";\r\nimport { Equipment, EquipmentList } from \"./equipment\";\r\nimport { FeatureList } from \"./misc/feature\";\r\nimport { Profile } from \"./profile\";\r\nimport { SpellList } from \"./spell\";\r\nimport { exportR20 } from \"@utils/2R20\";\r\nimport { json, objectify } from \"@utils/json_utils\";\r\nimport { Weapon } from \"./weapon\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { Serializer } from \"./serialization/serializer\";\r\nimport { GCSJSON } from \"./serialization/gcs_json\";\r\n\r\nabstract class Sheet {\r\n    serializer: Serializer\r\n\r\n    constructor(serializer: Serializer = new GCSJSON()) {\r\n        this.serializer = serializer;\r\n    }\r\n}\r\n\r\nexport interface Featurable extends ListItem<any> {\r\n    hasLevels: boolean\r\n    getLevel: () => number\r\n}\r\n\r\nexport class Character extends Sheet {\r\n    gCalcID: string\r\n\r\n    ST: Attribute\r\n    DX: Attribute\r\n    IQ: Attribute\r\n    HT: Attribute\r\n    Will: Attribute\r\n    Speed: Attribute\r\n    Move: Attribute\r\n    Per: Attribute\r\n    HP: Attribute\r\n    FP: Attribute\r\n\r\n    missingHP: number\r\n    missingFP: number\r\n\r\n    profile: Profile\r\n    skillList: SkillList\r\n    equipmentList: EquipmentList\r\n    otherEquipmentList: EquipmentList\r\n    traitList: TraitList\r\n    spellList: SpellList\r\n\r\n    featureList: FeatureList\r\n\r\n    constructor() {\r\n        super();\r\n        this.profile = new Profile();\r\n        this.equipmentList = new EquipmentList(this);\r\n        this.otherEquipmentList = new EquipmentList(this);\r\n        this.skillList = new SkillList(this);\r\n        this.traitList = new TraitList(this);\r\n        this.spellList = new SpellList(this);\r\n        this.ST = new Attribute(\r\n            Signature.ST,\r\n            this,\r\n            10,\r\n            { defaultLevel: 10 }\r\n        );\r\n        this.DX = new Attribute(\r\n            Signature.DX,\r\n            this,\r\n            20,\r\n            { defaultLevel: 10 }\r\n        );\r\n        this.IQ = new Attribute(\r\n            Signature.IQ,\r\n            this,\r\n            20,\r\n            { defaultLevel: 10 }\r\n        );\r\n        this.HT = new Attribute(\r\n            Signature.HT,\r\n            this,\r\n            10,\r\n            { defaultLevel: 10 }\r\n        );\r\n        this.Will = new Attribute(\r\n            Signature.Will,\r\n            this,\r\n            5,\r\n            { basedOn: () => this.IQ.calculateLevel() }\r\n        );\r\n        this.Speed = new Attribute(\r\n            Signature.Speed,\r\n            this,\r\n            20,\r\n            { basedOn: () => (this.DX.calculateLevel() + this.HT.calculateLevel()) / 4 }\r\n        );\r\n        this.Move = new Attribute(\r\n            Signature.Move,\r\n            this,\r\n            5,\r\n            { basedOn: () => Math.floor(this.Speed.calculateLevel()) }\r\n        );\r\n        this.Per = new Attribute(\r\n            Signature.Per,\r\n            this,\r\n            5,\r\n            { basedOn: () => this.IQ.calculateLevel() }\r\n        );\r\n        this.HP = new Attribute(\r\n            Signature.HP,\r\n            this,\r\n            2,\r\n            { basedOn: () => this.ST.calculateLevel() }\r\n        );\r\n        this.FP = new Attribute(\r\n            Signature.FP,\r\n            this,\r\n            3,\r\n            { basedOn: () => this.HT.calculateLevel() }\r\n        );\r\n        this.featureList = new FeatureList();\r\n    }\r\n\r\n    totalAttributesCost() {\r\n        return Object.values(this).reduce((prev, cur) => {\r\n            if (cur instanceof Attribute) {\r\n                return prev + cur.pointsSpent()\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    attributes(attribute: Signature) {\r\n        switch (attribute) {\r\n            case Signature.HP: return this.HP.calculateLevel()\r\n            case Signature.FP: return this.FP.calculateLevel()\r\n            case Signature.ST: return this.ST.calculateLevel()\r\n            case Signature.DX: return this.DX.calculateLevel()\r\n            case Signature.IQ: return this.IQ.calculateLevel()\r\n            case Signature.HT: return this.HT.calculateLevel()\r\n            case Signature.Per: return this.Per.calculateLevel()\r\n            case Signature.Will: return this.Will.calculateLevel()\r\n            case Signature.Base: return 10\r\n            case Signature.Speed: return this.Speed.calculateLevel()\r\n            case Signature.Move: return this.Move.calculateLevel()\r\n        }\r\n    }\r\n\r\n    pointTotals() {\r\n        const racialPoints = this.traitList.sumRacials();\r\n        const attributePoints = this.totalAttributesCost();\r\n        const advantages = this.traitList.sumAdvantages();\r\n        const disadvantages = this.traitList.sumDisadvantages();\r\n        const quirks = this.traitList.sumQuirks();\r\n        const skills = this.traitList.sumQuirks();\r\n        const spells = 0;\r\n\r\n        return {\r\n            racialPoints,\r\n            attributePoints,\r\n            advantages,\r\n            disadvantages,\r\n            quirks,\r\n            skills,\r\n            spells,\r\n            total: racialPoints + attributePoints + advantages + disadvantages + quirks + skills + spells\r\n        }\r\n    }\r\n\r\n    allItems(): Equipment[] {\r\n        return [].concat.apply([],\r\n            [\r\n                this.equipmentList.iter(),\r\n                this.otherEquipmentList.iter()\r\n            ])\r\n    }\r\n    basicLift() {\r\n        const ST = this.ST.calculateLevel();\r\n        return Math.round(ST * ST / 5)\r\n    }\r\n    encumbranceLevel() {\r\n        const basicLift = this.basicLift();\r\n        const carriedWeight = this.carriedWeight(this.equipmentList);\r\n        if (carriedWeight < basicLift) {\r\n            return 0\r\n        } else if (carriedWeight < basicLift * 2) {\r\n            return -1\r\n        } else if (carriedWeight < basicLift * 3) {\r\n            return -2\r\n        } else if (carriedWeight < basicLift * 6) {\r\n            return -3\r\n        } else if (carriedWeight < basicLift * 10) {\r\n            return -4\r\n        }\r\n    }\r\n\r\n    encumberedMove() {\r\n        return this.Move.calculateLevel() + this.encumbranceLevel()\r\n    }\r\n    carriedWeight(list: List<Equipment>) {\r\n        return list.iterTop().reduce((prev, cur) => {\r\n            return prev + cur.extendedWeight()\r\n        }, 0)\r\n    }\r\n    carriedValue(list: List<Equipment>) {\r\n        return list.iterTop().reduce((prev, cur) => {\r\n            return prev + cur.extendedValue()\r\n        }, 0)\r\n    }\r\n\r\n    dodgeScore() { return Math.floor(this.Speed.calculateLevel() + Attribute.bonusReducer(this, Signature.Dodge) + 3) }\r\n    encumberedDodgeScore() {\r\n        switch (this.encumbranceLevel()) {\r\n            case 0:\r\n                return this.dodgeScore()\r\n            case -1:\r\n                return Math.floor(this.dodgeScore() * .8)\r\n            case -2:\r\n                return Math.floor(this.dodgeScore() * .6)\r\n            case -3:\r\n                return Math.floor(this.dodgeScore() * .4)\r\n            case -4:\r\n                return Math.floor(this.dodgeScore() * .2)\r\n        }\r\n    }\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(json: string | json) {\r\n        json = objectify<json>(json);\r\n        this.gCalcID = json.id;\r\n\r\n        this.profile.loadJSON(json.profile);\r\n        this.equipmentList.load(json.equipment);\r\n        this.otherEquipmentList.load(json.otherEquipmentList);\r\n        this.skillList.load(json.skills);\r\n        this.traitList.load(json.advantages);\r\n        this.spellList.load(json.spells);\r\n\r\n        this.missingHP = json?.hp_damage ?? 0;\r\n        this.missingFP = json?.fp_damage ?? 0;\r\n\r\n        this.DX.setLevel(json.DX);\r\n        this.FP.setLevel(json.fp_adj);\r\n        this.HP.setLevel(json.hp_adj);\r\n        this.HT.setLevel(json.HT);\r\n        this.IQ.setLevel(json.IQ)\r\n        this.Move.setLevel(json.move_adj);\r\n        this.Per.setLevel(json.per_adj);\r\n        this.ST.setLevel(json.ST);\r\n        this.Speed.setLevel(json.speed_adj);\r\n        this.Will.setLevel(json.will_adj);\r\n\r\n        return this\r\n    }\r\n    toR20() {\r\n        return exportR20(this)\r\n    }\r\n}\r\n\r\nexport enum Signature {\r\n    ST = \"ST\",\r\n    DX = \"DX\",\r\n    IQ = \"IQ\",\r\n    HT = \"HT\",\r\n    FP = \"FP\",\r\n    HP = \"HP\",\r\n    Per = \"Per\",\r\n    Will = \"Will\",\r\n    Base = 10,\r\n    Quint = \"QT\",\r\n    Speed = \"Speed\",\r\n    Move = \"Move\",\r\n    Vision = \"Vision\",\r\n    Hearing = \"Hearing\",\r\n    TasteSmell = \"Taste Smell\",\r\n    Touch = \"Touch\",\r\n    Dodge = \"dodge\"\r\n}","import { List, ListItem } from \"./misc/list\";\r\nimport { Modifier, Modifiable } from \"./misc/modifier\";\r\nimport { Character } from \"./character\";\r\nimport { objectify, json, isArray } from \"@utils/json_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { Feature } from \"./misc/feature\";\r\n\r\nexport class EquipmentList extends List<Equipment> {\r\n    populator = Equipment\r\n    loader;\r\n\r\n    constructor(character: Character) {\r\n        super(character);\r\n        this.loader = this.character.serializer.mapEquipment\r\n    }\r\n}\r\n\r\nexport class Equipment extends ListItem<Equipment> {\r\n    version = 1\r\n    tag = \"equipment\"\r\n\r\n    description: string\r\n    equipped: boolean\r\n    techLevel: string\r\n    legalityClass: string\r\n    quantity: number\r\n    weight: number\r\n    value: number\r\n    containedWeightReduction: string\r\n\r\n    modifiers: Set<EquipmentModifier<Equipment>>\r\n\r\n    hasLevels = false\r\n\r\n    constructor(list: List<Equipment>) {\r\n        super(list);\r\n        this.modifiers = new Set();\r\n    }\r\n\r\n    get name() { return this.description }\r\n    isActive() { return this.equipped }\r\n    getLevel(): number { return null }\r\n\r\n    private childrenWeight(): number | null {\r\n        return Array.from(this.children).reduce((prev, cur) => {\r\n            return prev += cur.findSelf().extendedWeight()\r\n        }, 0)\r\n    }\r\n    private childrenValue(): number | null {\r\n        return 0\r\n    }\r\n\r\n    private reduceContainedWeight(weight: number) {\r\n        const weightReduction = this?.containedBy?.containedWeightReduction;\r\n        console.log(weightReduction);\r\n        if (weightReduction?.endsWith(\"%\")) {\r\n            let multiplyBy = Modifier.extractValue(weightReduction) / 100;\r\n            return weight * multiplyBy\r\n        } else if (weightReduction) {\r\n            let subtract = parseFloat(weightReduction.split(\" \")[0]);\r\n            return weight - subtract\r\n        } else {\r\n            return weight\r\n        }\r\n    }\r\n\r\n    extendedWeight() {\r\n        const adjustedWeight = this.adjustedWeight();\r\n        if (this.isContainer()) {\r\n            return this.reduceContainedWeight((this.childrenWeight() + adjustedWeight))\r\n        } else {\r\n            return adjustedWeight * this.quantity\r\n        }\r\n    }\r\n\r\n    extendedValue() {\r\n        const adjustedValue = this.adjustedValue();\r\n\r\n        if (this.isContainer()) {\r\n            return this.childrenValue() + adjustedValue\r\n        } else {\r\n            return adjustedValue * this.quantity\r\n        }\r\n    }\r\n\r\n    getModifiers() { }\r\n\r\n    adjustedValue() {\r\n        let modifiers = this.modifiers;\r\n        let value = this.value;\r\n        let cost = Equipment.processNonCFStep(EquipmentModifierValueType.originalCost, value, modifiers);\r\n        let cf = 0;\r\n        let count = 0;\r\n\r\n        this.modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.costType === EquipmentModifierValueType.baseCost) {\r\n                let adj = modifier.cost;\r\n                let mvt = EquipmentModifier.determineCostType(modifier.cost);\r\n                let amt = Modifier.extractValue(adj);\r\n\r\n                if (mvt === EquipmentModifierCostValueType.multiplier) {\r\n                    amt -= 1;\r\n                }\r\n                cf += amt;\r\n                count++\r\n            }\r\n        });\r\n        if (cf !== 0) {\r\n            if (cf < EquipmentModifier.minCF) {\r\n                cf = EquipmentModifier.minCF;\r\n            }\r\n            cost *= (cf + 1);\r\n        }\r\n        cost = Equipment.processNonCFStep(EquipmentModifierValueType.finalBaseCost, cost, modifiers);\r\n        cost = Equipment.processNonCFStep(EquipmentModifierValueType.finalCost, cost, modifiers);\r\n\r\n        return cost > 0 ? cost : 0;\r\n    }\r\n\r\n    private static processNonCFStep(costType: EquipmentModifierValueType, value: number, modifiers: Set<EquipmentModifier<Equipment>>) {\r\n        let percentages = 0;\r\n        let additions = 0;\r\n        let cost = value;\r\n\r\n        modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.costType === costType) {\r\n                let adj = modifier.cost;\r\n                let mvt = EquipmentModifier.determineCostType(modifier.cost);\r\n                let amt = Modifier.extractValue(adj);\r\n                console.log(amt, modifier.name, mvt);\r\n                switch (mvt) {\r\n                    case EquipmentModifierCostValueType.addition:\r\n                        additions += amt;\r\n                        break\r\n                    case EquipmentModifierCostValueType.percentage:\r\n                        percentages += amt;\r\n                        break\r\n                    case EquipmentModifierCostValueType.multiplier:\r\n                        cost *= amt;\r\n                        break\r\n                }\r\n            }\r\n        });\r\n        cost += additions;\r\n        if (percentages !== 0) {\r\n            cost += (value * (percentages / 100));\r\n        }\r\n        return cost\r\n    }\r\n\r\n    adjustedWeight() {\r\n        let modifiers = this.modifiers;\r\n        let weight = this.weight;\r\n\r\n        let percentages = 0;\r\n        let original = this.weight;\r\n\r\n        modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.weightType === EquipmentModifierWeightType.originalWeight) {\r\n                let adj = modifier.weight;\r\n                let mvt = EquipmentModifier.determineWeightType(modifier.weight)\r\n                let amt = Modifier.extractValue(adj);\r\n                if (mvt === EquipmentModifierWeightValueType.addition) {\r\n                    weight += amt;\r\n                } else {\r\n                    percentages += amt;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (percentages !== 0) {\r\n            original = original *= (percentages / 100);\r\n        }\r\n\r\n        weight = Equipment.processMultiplyAddWeightStep(EquipmentModifierWeightType.baseWeight, weight, modifiers);\r\n        weight = Equipment.processMultiplyAddWeightStep(EquipmentModifierWeightType.finalBaseWeight, weight, modifiers);\r\n        weight = Equipment.processMultiplyAddWeightStep(EquipmentModifierWeightType.finalWeight, weight, modifiers);\r\n\r\n        if (weight < 0) {\r\n            weight = 0;\r\n        }\r\n\r\n        return weight\r\n    }\r\n\r\n    private static processMultiplyAddWeightStep(weightType: EquipmentModifierWeightType, weight: number, modifiers: Set<EquipmentModifier<Equipment>>) {\r\n        let sum = 0;\r\n        modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.weightType === weightType) {\r\n                let adj = modifier.weight;\r\n                let mvt = EquipmentModifier.determineWeightType(adj);\r\n                let fraction = 0;\r\n                switch (mvt) {\r\n                    case EquipmentModifierWeightValueType.multiplier:\r\n                        weight = weight * fraction;\r\n                        break\r\n                    case EquipmentModifierWeightValueType.percentageMultiplier:\r\n                        weight = weight * (fraction / 100);\r\n                        break\r\n                    case EquipmentModifierWeightValueType.addition:\r\n                        weight += fraction;\r\n                    default:\r\n                }\r\n            }\r\n        });\r\n        weight += sum;\r\n        return weight\r\n    }\r\n\r\n    static mapEquipment(equipment: Equipment, data: gcs.Equipment) {\r\n        isArray(data?.modifiers)?.forEach((modifier: json) => equipment.modifiers.add(new EquipmentModifier(equipment).loadJSON(modifier)));\r\n\r\n        equipment.description = data.description;\r\n        equipment.equipped = data.equipped;\r\n        equipment.quantity = data.quantity;\r\n        equipment.value = parseFloat(data?.value);\r\n        equipment.weight = parseFloat(data?.weight?.split(\" \")[0] ?? \"0\");\r\n        equipment.techLevel = data.tech_level;\r\n        equipment.legalityClass = data.legality_class;\r\n        equipment.containedWeightReduction = isArray(data?.features)?.find(feature => feature.type === \"contained_weight_reduction\")?.reduction ?? null;\r\n        data.features?.forEach((feature: json) => {\r\n            Feature.loadFeature<Equipment>(equipment, feature.type)?.loadJSON(feature)\r\n        });\r\n\r\n        const children = data?.children as gcs.Equipment[] || null\r\n        if (data.type.includes(\"_container\")) {\r\n            return children\r\n        }\r\n    }\r\n    toR20() {\r\n        return {\r\n            key: \"repeating_item\",\r\n            row_id: this.r20rowID,\r\n            data: {\r\n                name: this.description,\r\n                tl: this.techLevel,\r\n                ref: this.reference,\r\n                legality_class: this.legalityClass,\r\n                count: this.quantity,\r\n                cost: this.value,\r\n                weight: this.weight,\r\n                costtotal: this.extendedValue(),\r\n                weighttotal: this.extendedWeight(),\r\n                notes: this.notes\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class EquipmentModifier<T extends Modifiable> extends Modifier<T> {\r\n    static nodeName = \"eqp_modifier\"\r\n    static minCF = -0.8\r\n\r\n    cost: string\r\n    costType: EquipmentModifierValueType\r\n    weight: string\r\n    weightType: EquipmentModifierWeightType\r\n\r\n    constructor(equipment: T) {\r\n        super(equipment);\r\n    }\r\n\r\n    static determineWeightType(type: string) {\r\n        type = type.trim();\r\n        if (type.endsWith(\"%\")) {\r\n            if (type.startsWith(\"x\")) {\r\n                return EquipmentModifierWeightValueType.percentageMultiplier\r\n            }\r\n            return EquipmentModifierWeightValueType.percentageAdder\r\n        }\r\n        if (type.startsWith(\"x\") || type.endsWith(\"x\")) {\r\n            return EquipmentModifierWeightValueType.multiplier\r\n        }\r\n        return EquipmentModifierWeightValueType.addition\r\n    }\r\n    static determineCostType(type: string) {\r\n        type = type.trim();\r\n        if (type.endsWith(\"cf\")) {\r\n            return EquipmentModifierCostValueType.cf\r\n        }\r\n        if (type.endsWith(\"%\")) {\r\n            return EquipmentModifierCostValueType.percentage\r\n        }\r\n        if (type.startsWith(\"x\") || type.endsWith(\"x\")) {\r\n            return EquipmentModifierCostValueType.multiplier\r\n        }\r\n        return EquipmentModifierCostValueType.addition\r\n    }\r\n\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(json: string | json) {\r\n        const data = objectify<any>(json);\r\n        super.loadJSON(json);\r\n        this.cost = data.cost;\r\n        this.weight = data.weight;\r\n        this.costType = data.cost_type;\r\n        this.weightType = data.weightType;\r\n        return this\r\n    }\r\n}\r\n\r\nenum EquipmentModifierWeightType {\r\n    originalWeight = \"to_original_weight\",\r\n    baseWeight = \"to_base_weight\",\r\n    finalBaseWeight = \"to_final_base_weight\",\r\n    finalWeight = \"to_final_weight\",\r\n}\r\n\r\nenum EquipmentModifierWeightValueType {\r\n    addition = \"+\",\r\n    percentageAdder = \"%\",\r\n    percentageMultiplier = 1,\r\n    multiplier = 0\r\n}\r\n\r\nenum EquipmentModifierValueType {\r\n    originalCost = \"to_original_cost\",\r\n    baseCost = \"to_base_cost\",\r\n    finalBaseCost = \"to_final_base_cost\",\r\n    finalCost = \"to_final_cost\",\r\n}\r\n\r\nenum EquipmentModifierCostValueType {\r\n    addition = \"+\",\r\n    percentage = \"%\",\r\n    multiplier = \"x\",\r\n    cf = \"cf\"\r\n}\r\n","import { json, objectify } from \"@utils/json_utils\"\r\n\r\nenum DefaultType {\r\n    skill = \"Skill\"\r\n}\r\n\r\nexport abstract class DefaultList {\r\n\r\n}\r\n\r\nexport abstract class Default<T> {\r\n    tag = \"default\"\r\n\r\n    type: DefaultType\r\n    modifier: number\r\n\r\n    name?: string\r\n    specialization?: string\r\n\r\n    owner: T\r\n\r\n    constructor(owner: T) {\r\n        this.owner = owner;\r\n    }\r\n    toJSON() { }\r\n    loadJSON(object: json) {\r\n        object = objectify(object);\r\n        this.type = object.type;\r\n        this.modifier = object.modifier;\r\n        this.name = object.name;\r\n        this.specialization = object.specialization;\r\n        return this\r\n    }\r\n}","import {\r\n    generateRowID,\r\n    generateUUID\r\n} from \"@utils/2R20\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\n\r\nexport abstract class CharacterElement<T extends CharacterElement<T>> {\r\n    uuid: string\r\n    r20rowID: string\r\n    foundryID: string\r\n\r\n    reference: string = \"\"\r\n    userDescription: string = \"\"\r\n    notes: string = \"\"\r\n    categories: Set<string>\r\n\r\n    constructor(foundryID?: string) {\r\n        this.foundryID = foundryID;\r\n        this.uuid = generateUUID().toString();\r\n        this.r20rowID = generateRowID();\r\n        this.categories = new Set();\r\n    }\r\n    static mapElement(data: json, element: CharacterElement<any>) {\r\n        element.reference = data.reference;\r\n        element.userDescription = data.user_description;\r\n        element.notes = data.notes;\r\n        data.categories?.forEach((category: string) => element.categories.add(category));\r\n    }\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(object: string | json) {\r\n        object = objectify<json>(object)\r\n        CharacterElement.mapElement(object, this);\r\n    }\r\n}","import { CharacterElement } from \"./element\";\r\nimport { Featurable } from \"../character\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { SkillLike } from \"@character/skill\";\r\nimport { AttributeBonus } from \"@character/attribute\";\r\nimport { Weapon } from \"@character/weapon\";\r\nimport { StringCompare, stringCompare } from \"@utils/string_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\nexport class FeatureList {\r\n    features: Map<string, Feature<Featurable>>\r\n    weapons: Map<string, Weapon<Featurable>>\r\n\r\n    constructor() {\r\n        this.features = new Map();\r\n        this.weapons = new Map();\r\n    }\r\n\r\n    registerFeature(feature: Feature<Featurable>) {\r\n        this.features.set(feature.uuid, feature);\r\n    }\r\n    removeFeature(uuid: string) {\r\n        this.features.delete(uuid);\r\n    }\r\n    getFeaturesByUUID(id: string) {\r\n        return Array.from(this.features.values()).filter(feature => {\r\n            if (feature.owner.uuid = id) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        });\r\n    }\r\n    iter() { return Array.from(this.features.values()) }\r\n    getFeaturesByType(type: FeatureType) {\r\n        return this.iter().filter(feature => feature.type === type)\r\n    }\r\n}\r\n\r\nexport abstract class Feature<T extends Featurable> extends CharacterElement<T> {\r\n    amount: number\r\n    leveled: boolean\r\n    limitation: false | string\r\n\r\n    owner: T\r\n    type: FeatureType\r\n\r\n    registered: boolean\r\n\r\n    constructor(owner: T, type: FeatureType) {\r\n        super();\r\n        this.owner = owner;\r\n        owner.features.add(this);\r\n        this.type = type;\r\n        this.owner.list.character.featureList.registerFeature(this);\r\n    }\r\n\r\n    ownerIsActive(): boolean {\r\n        return this.owner.isActive()\r\n    }\r\n\r\n    getBonus(): number { return this.leveled && this.owner.hasLevels ? this.amount * this.owner.getLevel() : this.amount }\r\n\r\n    unregister() {\r\n        this.owner.list.character.featureList.removeFeature(this.uuid);\r\n    }\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(object: string | json) {\r\n        object = objectify<json>(object);\r\n        super.loadJSON(object);\r\n        this.amount = object.amount;\r\n        this.leveled = object?.per_level ?? false;\r\n        this.limitation = object?.limitation ?? false;\r\n    }\r\n\r\n    static loadFeature<T extends Featurable>(owner: T, featureType: FeatureType): Feature<T> {\r\n        switch (featureType) {\r\n            case FeatureType.attributeBonus:\r\n                return new AttributeBonus(owner)\r\n            case FeatureType.containedWeightReduction:\r\n                break\r\n            case FeatureType.costReduction:\r\n                break\r\n            case FeatureType.damageResistanceBonus:\r\n                break\r\n            case FeatureType.reactionBonus:\r\n                break\r\n            case FeatureType.skillBonus:\r\n                return new SkillBonus(owner)\r\n            case FeatureType.spellBonus:\r\n                break\r\n            case FeatureType.weaponDamageBonus:\r\n                break\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n\r\nexport class SkillBonus<T extends Featurable> extends Feature<T> {\r\n    selectionType: string\r\n    nameCompareType: StringCompare\r\n    name: string\r\n    specializationCompareType: StringCompare\r\n    specialization: string\r\n    category: string\r\n    categoryCompareType: StringCompare\r\n\r\n    constructor(owner: T) {\r\n        super(owner, gcs.FeatureType.skillBonus);\r\n    }\r\n\r\n    isApplicableTo(skill: SkillLike<any>): boolean {\r\n        let result = false;\r\n\r\n        if (this.nameCompareType) result = stringCompare(this.name, skill.name, this.nameCompareType);\r\n        if (this.specializationCompareType) result = stringCompare(this.specialization, skill.specialization, this.specializationCompareType);\r\n\r\n        return result\r\n    }\r\n    toJSON() {\r\n        return {}\r\n    }\r\n    loadJSON(json: string | json) {\r\n        const data = objectify<json>(json);\r\n        super.loadJSON(data);\r\n        this.selectionType = data.selection_type;\r\n\r\n        this.name = data?.name?.qualifier;\r\n        this.nameCompareType = data?.name?.compare;\r\n\r\n        this.specialization = data?.specialization?.qualifier;\r\n        this.specializationCompareType = data?.specialization?.compare;\r\n\r\n        this.categoryCompareType = data?.category?.compare;\r\n        return this\r\n    }\r\n}","import { Character, Featurable } from \"../character\";\r\nimport { CharacterElement } from \"./element\";\r\nimport { Feature } from \"./feature\";\r\nimport { Weapon } from \"../weapon\";\r\nimport { objectify, json, isArray } from \"@utils/json_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\nexport abstract class ListItem<T extends Featurable> extends CharacterElement<T> implements gcs.ListItem<T> {\r\n    abstract version: number\r\n    abstract tag: string\r\n\r\n    abstract name: string\r\n\r\n    list: List<T>\r\n\r\n    canContainChildren: boolean\r\n    open: boolean = true\r\n\r\n    children: Set<ListItem<T>>\r\n    #childIDs: Set<string>\r\n\r\n    isContained: boolean\r\n    containedBy: T\r\n    #containedByID: string\r\n\r\n    features: Set<Feature<T>>\r\n    weapons: Set<Weapon<T>>\r\n\r\n    listIndex: number\r\n\r\n    constructor(list: List<T>) {\r\n        super();\r\n        this.list = list;\r\n        this.list.addListItem(this);\r\n        this.features = new Set();\r\n        this.children = new Set();\r\n        this.canContainChildren = false;\r\n        this.listIndex = this.list.iter().length;\r\n    }\r\n\r\n    abstract isActive(): boolean\r\n    getListDepth(): number {\r\n        let x = 0;\r\n        let listItem = this.findSelf();\r\n        while (listItem = listItem.containedBy) {\r\n            x++\r\n        }\r\n        return x\r\n    }\r\n\r\n    getCharacter(): Character { return this.list.character }\r\n\r\n    isContainer() { return this.canContainChildren }\r\n    isContainerOpen() { return this.canContainChildren && this.open ? true : false }\r\n    isVisible() {\r\n        if (this.containedBy.isContainerOpen()) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n    previousVisibleSibling() { }\r\n    nextVisibleSibling() { }\r\n    toggle() { if (this.isContainer()) this.open = !this.open; }\r\n    openContainer() { if (this.isContainer()) this.open = true; }\r\n    closeContainer() { if (this.isContainer()) this.open = false; }\r\n    depth() { }\r\n    index() { }\r\n    iterChildren() { return Array.from(this.children) }\r\n\r\n    addChild(child?: T) {\r\n        if (this.isContainer()) {\r\n            if (child) {\r\n                child.containedBy.children.delete(child);\r\n                child.containedBy = this.findSelf();\r\n            } else {\r\n                child = this.list.addListItem();\r\n                child.containedBy = this.findSelf();\r\n            }\r\n        }\r\n        return child\r\n    }\r\n    removeChild(child: string | T) {\r\n        if (typeof child === \"string\") {\r\n            child = this.list.getByUUID(child);\r\n        }\r\n        child.containedBy.children.delete(child);\r\n        this.list.removeListItem(child);\r\n    }\r\n\r\n    getRecursiveChildren() {\r\n        if (this.canContainChildren) {\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n    findSelf(): T {\r\n        return this.list.getByUUID(this.uuid);\r\n    }\r\n    toJSON(): Object {\r\n        return {}\r\n    }\r\n    loadJSON(json: string | json) {\r\n        const data = objectify<gcs.ListItem<T>>(json);\r\n        super.loadJSON(data);\r\n        this.open = data.open ?? true;\r\n    }\r\n    private loadChildren<U>(children: U[], parent: T, loader: (subject: T, data: U) => U[]) {\r\n        children.forEach(child => {\r\n            const subElement = parent.list.addListItem();\r\n            const children = loader(subElement, child);\r\n            subElement.containedBy = parent;\r\n            parent.children.add(subElement);\r\n            subElement.loadChildren(isArray(children), subElement, loader)\r\n        });\r\n    }\r\n    load<U>(loader: (subject: T, data?: U) => U[], data): T {\r\n        const children: U[] = loader(this.findSelf(), data)\r\n        if (children && children.length > 0) {\r\n            this.canContainChildren = true;\r\n            this.loadChildren(children, this.findSelf(), loader)\r\n        }\r\n        return this.findSelf()\r\n    }\r\n}\r\n\r\nexport abstract class List<T extends Featurable> {\r\n    #contents: Map<string, T>\r\n    contents: Set<T>\r\n\r\n    abstract populator: new (list: List<T>) => T\r\n    abstract loader: (subject: T, data?: T) => T[]\r\n\r\n    character: Character\r\n\r\n    constructor(character: Character) {\r\n        this.character = character;\r\n        this.#contents = new Map();\r\n        this.contents = new Set();\r\n    }\r\n    generate() {\r\n        this.contents.clear();\r\n        this.iter().reduce((prev, cur) => {\r\n            if (!cur.containedBy) prev.add(cur);\r\n            return prev\r\n        }, this.contents);\r\n    }\r\n\r\n    addListItem(item?: T | ListItem<T>): T {\r\n        let listItem: T;\r\n        if (item) {\r\n            this.#contents.set(item.uuid, item as T);\r\n            listItem = item.findSelf();\r\n        } else {\r\n            listItem = new this.populator(this);\r\n        }\r\n        this.generate();\r\n        return listItem\r\n    }\r\n\r\n    removeListItem(item: T) {\r\n        this.#contents.delete(item.uuid);\r\n        this.generate();\r\n    }\r\n\r\n    getByIndex(index: number) {\r\n        return Array.from(this.contents.values())[index]\r\n    }\r\n    getByUUID(uuid: string) {\r\n        return this.#contents.get(uuid);\r\n    }\r\n    iter() {\r\n        return Array.from(this.#contents.values())\r\n    }\r\n    iterTop() {\r\n        this.generate();\r\n        return Array.from(this.contents);\r\n    }\r\n    keys() {\r\n        return Array.from(this.contents.keys());\r\n    }\r\n    load(data: string | json) {\r\n        data = objectify<json>(data);\r\n        if (data) {\r\n            data.forEach((skill: json) => {\r\n                const item = new this.populator(this);\r\n                //console.log(item);\r\n                item.load<T>(this.loader, skill);\r\n            });\r\n            this.generate();\r\n        }\r\n        return this\r\n    }\r\n}\r\n","import { Trait } from \"../trait\"\r\nimport { Equipment } from \"../equipment\"\r\nimport { objectify, json } from \"@utils/json_utils\"\r\nimport { CharacterElement } from \"./element\"\r\n\r\nexport type Modifiable = Trait | Equipment\r\nexport abstract class Modifier<T extends Modifiable> extends CharacterElement<T> {\r\n    static version = 2\r\n\r\n    enabled: boolean = true\r\n    name: string\r\n    owner: T\r\n\r\n    constructor(owner: T) {\r\n        super();\r\n        this.owner = owner\r\n        this.categories = new Set();\r\n    }\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(object: string | json) {\r\n        object = objectify(object);\r\n        super.loadJSON(object);\r\n        function mapModifier(object: any, modifier: Modifier<T>): Modifier<T> {\r\n            modifier.name = object.name;\r\n            modifier.reference = object.reference;\r\n            modifier.notes = object.notes;\r\n            modifier.enabled = !object.disabled;\r\n            return modifier\r\n        }\r\n        mapModifier(object, this);\r\n    }\r\n\r\n    /**\r\n     * Utility statement for extract numbers from strings with non numerical characters\r\n     * @param value String from which a number is to be extracted.\r\n     */\r\n\r\n    static extractValue(value: string) {\r\n        if (typeof value === \"string\") {\r\n            let numArr = value.match(/(\\d+)/);\r\n            return parseFloat(numArr[0])\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n","import { objectify, json } from \"@utils/json_utils\"\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\nexport class Profile {\r\n    tag = \"profile\"\r\n\r\n    sizeModifier: string = \"\"\r\n    techLevel: string = \"\"\r\n    birthday: string = \"\"\r\n    name: string = \"\"\r\n    eyes: string = \"\"\r\n    skin: string = \"\"\r\n    hair: string = \"\"\r\n    handedness: string = \"\"\r\n    weight: string = \"\"\r\n    height: string = \"\"\r\n    gender: string = \"\"\r\n    race: string = \"\"\r\n    bodyType: string = \"\"\r\n    age: string = \"\"\r\n    portrait: string = \"\"\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(object: string | json) {\r\n        object = objectify<gcs.Profile>(object);\r\n        this.sizeModifier = object?.size_modifier ?? \"\";\r\n        this.techLevel = object?.tech_level ?? \"\";\r\n        this.birthday = object?.birthday ?? \"\";\r\n        this.name = object?.name ?? \"\";\r\n        this.eyes = object?.eyes ?? \"\";\r\n        this.skin = object?.skin ?? \"\";\r\n        this.hair = object?.hair ?? \"\";\r\n        this.handedness = object?.handedness ?? \"\";\r\n        this.weight = object?.weight ?? \"\";\r\n        this.height = object?.height ?? \"\";\r\n        this.gender = object?.gender ?? \"\";\r\n        this.race = object?.race ?? \"\";\r\n        this.bodyType = object?.bodyType ?? \"\";\r\n        this.age = object?.age ?? \"\";\r\n        this.portrait = object?.portait ?? \"\";\r\n    }\r\n}","import { registerDataType, Serializer } from \"./serializer\";\r\nimport { Skill, Difficulty, SkillDefault, SkillLike } from \"../../character/skill\";\r\nimport { Technique, TehchniqueDifficulty } from \"../../character/technique\";\r\nimport { Spell } from \"../../character/spell\";\r\nimport { Equipment, EquipmentModifier } from \"../../character/equipment\";\r\nimport { Trait, TraitType, TraitModifier } from \"../../character/trait\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { isArray, json } from \"@utils/json_utils\";\r\nimport { Signature } from \"@character/character\";\r\nimport { Feature } from \"@character/misc/feature\";\r\n\r\n@registerDataType(GCSJSON)\r\nexport class GCSJSON extends Serializer {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static mapSkillLike(skillLike: SkillLike<any>, data?: gcs.SkillLike) {\r\n        skillLike.name = data.name;\r\n        skillLike.difficulty = data.difficulty as Difficulty;\r\n        skillLike.points = data.points;\r\n    }\r\n\r\n    mapSkill(skill: Skill, data?: gcs.Skill) {\r\n        GCSJSON.mapSkillLike(skill, data);\r\n        skill.difficulty = data.difficulty?.split(\"/\")[1] as Difficulty;\r\n        skill.signature = data.difficulty?.split(\"/\")[0] as Signature;\r\n        skill.techLevel = data.tech_level ?? \"\";\r\n        if (data.encumbrance_penalty_multiplier) skill.encumbrancePenaltyMultiple = data.encumbrance_penalty_multiplier;\r\n        if (data.defaulted_from) skill.defaultedFrom = new SkillDefault<Skill>(skill).loadJSON(data.defaulted_from);\r\n        isArray(data.defaults)?.forEach((skillDefault: json) => skill.defaults.add(new SkillDefault<Skill>(skill).loadJSON(skillDefault)));\r\n        const children = data.children as gcs.Skill[]\r\n        if (data.type.includes(\"_container\")) {\r\n            return children\r\n        }\r\n    }\r\n    mapTechnique(technique: Technique, data?: gcs.Technique) {\r\n        this.mapSkill(technique, data)\r\n        technique.limit = data.limit;\r\n        technique.difficulty = data.difficulty as TehchniqueDifficulty;\r\n        technique.default = new SkillDefault<Technique>(technique).loadJSON(data.default);\r\n        return null\r\n    }\r\n    mapSpell(spell: Spell, data?: gcs.Spell) {\r\n        GCSJSON.mapSkillLike(spell, data);\r\n        spell.college = data.college;\r\n        spell.powerSource = data.power_source;\r\n        spell.spellClass = data.spell_class;\r\n        spell.castingCost = data.casting_cost;\r\n        spell.maintenanceCost = data.maintenance_cost;\r\n        spell.castingTime = data.casting_time;\r\n        spell.duration = data.duration;\r\n\r\n        if (spell.type.includes(\"_container\")) {\r\n            return data.children as json[]\r\n        }\r\n    }\r\n    mapEquipment(equipment: Equipment, data?: gcs.Equipment) {\r\n        isArray(data?.modifiers)?.forEach((modifier: json) => equipment.modifiers.add(new EquipmentModifier(equipment).loadJSON(modifier)));\r\n\r\n        equipment.description = data.description;\r\n        equipment.equipped = data.equipped;\r\n        equipment.quantity = data.quantity;\r\n        equipment.value = parseFloat(data?.value);\r\n        equipment.weight = parseFloat(data?.weight?.split(\" \")[0] ?? \"0\");\r\n        equipment.techLevel = data.tech_level;\r\n        equipment.legalityClass = data.legality_class;\r\n        equipment.containedWeightReduction = isArray(data?.features)?.find(feature => feature.type === \"contained_weight_reduction\")?.reduction ?? null;\r\n        data.features?.forEach((feature: json) => {\r\n            Feature.loadFeature<Equipment>(equipment, feature.type)?.loadJSON(feature)\r\n        });\r\n\r\n        const children = data?.children as gcs.Equipment[] || null\r\n        if (data.type.includes(\"_container\")) {\r\n            return children\r\n        }\r\n    }\r\n    mapTrait(trait: Trait, data?: json) {\r\n        trait.name = data.name;\r\n        data.modifiers?.forEach((modifier: json) => trait.modifiers.add(new TraitModifier(trait).loadJSON(modifier)));\r\n        trait.basePoints = data.base_points;\r\n        trait.levels = parseInt(data?.levels) ?? null;\r\n        trait.allowHalfLevels = data.allow_half_levels;\r\n        trait.hasHalfLevel = data.has_half_level;\r\n        trait.roundDown = data.round_down;\r\n        trait.controlRating = data.cr;\r\n        data.types?.forEach((type: TraitType) => trait.types.add(type));\r\n        trait.pointsPerLevel = data.points_per_level;\r\n        trait.disabled = data.disabled;\r\n        trait.hasLevels = trait.levels ? true : false;\r\n\r\n        data.features?.forEach((feature: json) => {\r\n            Feature.loadFeature<Trait>(trait, feature.type)?.loadJSON(feature)\r\n        });\r\n\r\n        if (data.type.includes(\"_container\")) {\r\n            return data.children as json[]\r\n        }\r\n    }\r\n}","import { Skill } from \"../skill\";\r\nimport { Technique } from \"../technique\";\r\nimport { Spell } from \"../spell\";\r\nimport { Equipment } from \"../equipment\";\r\nimport { Trait } from \"../trait\";\r\n\r\n/**\r\n * Abstract class from which all serializers draw functionality. It covers loading and saving functionality\r\n * by allowing a function to write data from an arbitrary external source. A loader is defined as the \r\n * following: A function that exposes the interal object you load into which will return the children that need to \r\n * be loaded next. The loader will stop loading when your function does not return a non-zero length array.\r\n */\r\n\r\nexport abstract class Serializer {\r\n    static dataTypes: Set<{ new(): Serializer }> = new Set()\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    abstract mapSkill(skill: Skill, data?: any): any[]\r\n    abstract mapTechnique(technique: Technique, data: any): any[]\r\n    abstract mapSpell(spell: Spell, data?: any): any[]\r\n    abstract mapEquipment(equipment: Equipment, data: any): any[]\r\n    abstract mapTrait(trait: Trait, data?: any): any[]\r\n\r\n}\r\n\r\nexport function registerDataType(type: { new(): Serializer }) {\r\n    Serializer.dataTypes.add(type);\r\n    return this\r\n}","import { Signature, Character, Featurable } from \"./character\";\r\nimport { List, ListItem } from \"./misc/list\";\r\nimport { Feature, SkillBonus } from \"./misc/feature\";\r\nimport { StringCompare, stringCompare } from \"utils/string_utils\";\r\nimport { objectify, json, isArray } from \"@utils/json_utils\";\r\nimport { Default } from \"./misc/default\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { Trait } from \"./trait\";\r\n\r\n\r\nexport class SkillList extends List<Skill> {\r\n    populator = Skill\r\n    loader\r\n\r\n    constructor(character: Character) {\r\n        super(character);\r\n        this.loader = this.character.serializer.mapSkill\r\n    }\r\n}\r\n\r\n/**\r\n * Skill-like entities are those that need to have a level calculated like the general skills in basic set (e.g Spells) but are not \r\n * necessarily a generic basic set skill. This class is not meant to be instantiated directly but provides the core logic for determining\r\n * final skill levels.\r\n * \r\n * @param name\r\n * @param difficulty\r\n * @param points\r\n * @param specialization\r\n * \r\n * \r\n * @override @param hasLevels Skill-like entities do not support the idea of level bases bonuses \r\n * @todo Skill-like entities could provide bonuses based on their relative skill level (e.g +1 to strength per relative skill level above 2)\r\n * \r\n * @method getBonus\r\n */\r\n\r\nexport abstract class SkillLike<T extends SkillLike<T>> extends ListItem<T>  {\r\n    abstract type: \"skill\" | \"skill_container\" | \"spell\" | \"spell_container\" | \"technique\"\r\n\r\n    name: string\r\n\r\n    difficulty: Difficulty\r\n    points: number\r\n    specialization: string\r\n\r\n    abstract defaults: Set<SkillDefault<SkillLike<any>>>\r\n    abstract defaultedFrom: SkillDefault<SkillLike<any>>\r\n    abstract signature: Signature\r\n    abstract encumbrancePenaltyMultiple: number\r\n\r\n    hasLevels = false\r\n\r\n    constructor(list: List<T>) {\r\n        super(list);\r\n    }\r\n\r\n    /**\r\n     * @returns A bonus to be applied to {@calculateLevel} that must be implemented by classes that inherit from this one.\r\n     */\r\n    abstract getBonus(): number\r\n\r\n    /**\r\n     * @override Skill-like entities do not provide leveled feature bonuses.\r\n     */\r\n    getLevel(): number { return null }\r\n\r\n    getBaseRelativeLevel() { return SkillLike.getBaseRelativeLevel(this.difficulty) }\r\n    static getBaseRelativeLevel(difficulty: Difficulty) {\r\n        switch (difficulty) {\r\n            case Difficulty.easy:\r\n                return 0\r\n            case Difficulty.average:\r\n                return -1\r\n            case Difficulty.hard:\r\n                return -2\r\n            case Difficulty.very_hard:\r\n                return -3\r\n            case Difficulty.wildcard:\r\n                return -3\r\n        }\r\n    }\r\n\r\n    static calculateRelativeLevel(points: number, relativeLevel: number) {\r\n        if (points === 1) {\r\n\r\n        } else if (points < 4) {\r\n            relativeLevel++;\r\n        } else {\r\n            relativeLevel += 1 + points / 4;\r\n        }\r\n        return relativeLevel\r\n    }\r\n    calculateLevel(): number {\r\n        return SkillLike.calculateLevel(\r\n            this.difficulty,\r\n            this.points,\r\n            this.list.character.attributes(this.signature),\r\n            this.defaultedFrom,\r\n            this.getBonus(),\r\n            this.list.character.encumbranceLevel(),\r\n            this.encumbrancePenaltyMultiple\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Pure function responsible for determining final skill level.\r\n     * @param difficulty \r\n     * @param points \r\n     * @param base \r\n     * @param defaultedFrom \r\n     * @param bonus \r\n     * @param encumbranceLevel \r\n     * @param encPenaltyMult\r\n     * @returns The final calculated skill level.\r\n     */\r\n\r\n    static calculateLevel\r\n        (\r\n            difficulty: Difficulty,\r\n            points: number,\r\n            base: number = 10,\r\n            defaultedFrom?: SkillDefault<SkillLike<any>>,\r\n            bonus = 0,\r\n            encumbranceLevel = 0,\r\n            encPenaltyMult = 1,\r\n\r\n    ) {\r\n        let relativeLevel = SkillLike.getBaseRelativeLevel(difficulty);\r\n        let level = base;\r\n        if (level !== Number.NEGATIVE_INFINITY) {\r\n            if (difficulty === Difficulty.wildcard) {\r\n                points /= 3;\r\n            } else {\r\n                if (defaultedFrom && defaultedFrom.points > 0) {\r\n                    points += defaultedFrom.points;\r\n                }\r\n            }\r\n            if (points > 0) {\r\n                relativeLevel = SkillLike.calculateRelativeLevel(points, relativeLevel);\r\n            } else if (defaultedFrom && defaultedFrom.points < 0) {\r\n                relativeLevel = defaultedFrom.adjustedLevel - level;\r\n            } else {\r\n                level = Number.NEGATIVE_INFINITY;\r\n                relativeLevel = 0;\r\n            }\r\n            if (level !== Number.NEGATIVE_INFINITY) {\r\n                level += relativeLevel;\r\n                if (defaultedFrom) {\r\n                    if (level < defaultedFrom.adjustedLevel) {\r\n                        level = defaultedFrom.adjustedLevel;\r\n                    }\r\n                }\r\n                const encumbrancePenalty = encumbranceLevel * encPenaltyMult;\r\n                level += bonus + encumbrancePenalty;\r\n                relativeLevel += bonus + encumbrancePenalty;\r\n            }\r\n        }\r\n        return level;\r\n    }\r\n    static getBestDefaultWithPoints<T extends SkillLike<T>>\r\n        (\r\n            character: Character,\r\n            skill: T,\r\n            defaults: Set<SkillDefault<T>>\r\n        ): SkillDefault<T> {\r\n        let best = SkillLike.getBestDefault(character, defaults);\r\n        if (best !== null) {\r\n            let baseLine = character.attributes(skill.signature) + SkillLike.getBaseRelativeLevel(skill.difficulty);\r\n            let level = best.level;\r\n            best.adjustedLevel = level;\r\n            if (level === baseLine) {\r\n                best.points = 1;\r\n            } else if (level === baseLine + 1) {\r\n                best.points = 2;\r\n            } else if (level > baseLine + 1) {\r\n                best.points = 4 * (level - (baseLine + 1));\r\n            } else {\r\n                level = best.level;\r\n                if (level < 0) {\r\n                    level = 0;\r\n                }\r\n                best.points = -level;\r\n            }\r\n        }\r\n        return best\r\n    }\r\n    static getBestDefault<T extends SkillLike<T>>\r\n        (\r\n            character: Character,\r\n            defaults: Set<SkillDefault<T>>,\r\n    ) {\r\n        if (character) {\r\n            if (defaults.size > 0) {\r\n                let best: number = Number.NEGATIVE_INFINITY;\r\n                let bestSkill: SkillDefault<T>;\r\n                defaults.forEach(skillDefault => {\r\n                    if (true) {\r\n                        if (skillDefault.isSkillBased()) {\r\n                            var skill = skillDefault.getSkillsNamedFrom(skillDefault.owner.list).highest;\r\n                            var level = SkillLike.calculateRelativeLevel(skill.points, skill.getBaseRelativeLevel());\r\n                        }\r\n                        if (level > best) {\r\n                            best = level;\r\n                            bestSkill = skillDefault;\r\n                            bestSkill.level = level\r\n                        }\r\n                    }\r\n                })\r\n                return bestSkill\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    canSwapDefaults(skill: SkillLike<T>, defaults: Set<SkillDefault<T>>) {\r\n        let result = false;\r\n        if (this.defaultedFrom !== null && this.points > 0) {\r\n            if (skill !== null && skill.hasDefaultTo(this, defaults)) {\r\n                result = true;\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    hasDefaultTo(skill: SkillLike<T>, defaults: Set<SkillDefault<T>>) {\r\n        let result = false;\r\n        defaults.forEach(skillDefault => {\r\n            let skillBased = skillDefault.isSkillBased();\r\n            let nameMatches = skillDefault.name === skill.name;\r\n            let specializationMatches = skillDefault.specialization === skill.specialization;\r\n            if (skillBased && nameMatches && specializationMatches) {\r\n                result = true;\r\n            }\r\n        });\r\n        return result\r\n    }\r\n    swapDefault(skill: SkillLike<T>, defaults: Set<SkillDefault<T>>) {\r\n        let extraPointsSpent = 0;\r\n        let baseSkill = this.defaultedFrom.getSkillsNamedFrom(this.list);\r\n        if (baseSkill !== null) {\r\n            this.defaultedFrom = SkillLike.getBestDefaultWithPoints<T>(\r\n                this.list.character,\r\n                skill.findSelf(),\r\n                defaults\r\n            );\r\n        }\r\n        return extraPointsSpent\r\n    }\r\n}\r\n\r\nexport class Skill extends SkillLike<Skill> {\r\n    version = 1\r\n    tag = \"skill\"\r\n    type: \"skill\" | \"skill_container\"\r\n\r\n    signature: Signature\r\n    techLevel: string\r\n    defaults: Set<SkillDefault<SkillLike<any>>>\r\n    defaultedFrom: SkillDefault<SkillLike<any>>\r\n    encumbrancePenaltyMultiple: number = 0\r\n\r\n    isTechnique: boolean = false\r\n\r\n    constructor(list: List<Skill>, isTechnique = false) {\r\n        super(list);\r\n        this.isTechnique = false;\r\n        this.defaults = new Set();\r\n    }\r\n    isActive() { return true }\r\n    childrenPoints() {\r\n        return this.iterChildren().reduce((prev, cur) => {\r\n            if (cur.canContainChildren) {\r\n                prev += cur.findSelf().childrenPoints();\r\n            } else {\r\n                prev += cur.findSelf().points;\r\n            }\r\n            return prev\r\n        }, 0)\r\n    }\r\n\r\n    getBonus(): any {\r\n        return this.list.character.featureList.getFeaturesByType(gcs.FeatureType.skillBonus).reduce(\r\n            (prev, cur) => {\r\n                if (cur instanceof SkillBonus && cur.type === gcs.FeatureType.skillBonus && cur.isApplicableTo(this) && cur.ownerIsActive()) {\r\n                    prev += cur.getBonus();\r\n                }\r\n                return prev\r\n            }, 0)\r\n    }\r\n\r\n    toString() {\r\n        let string = \"\";\r\n        string += this.name;\r\n        if (!this.isContainer()) {\r\n            if (Boolean(this.techLevel)) {\r\n                string += \"/TL\"\r\n                string += this.techLevel;\r\n            }\r\n            if (Boolean(this.specialization)) {\r\n                string += ` (${this.specialization})`;\r\n            }\r\n        }\r\n        return string\r\n    }\r\n    toR20() {\r\n        return {\r\n            key: \"repeating_skills\",\r\n            row_id: this.r20rowID,\r\n            data: {\r\n                name: this.toString(),\r\n                base: (() => {\r\n                    switch (this.signature) {\r\n                        case Signature.ST: return \"@{strength}\"\r\n                        case Signature.DX: return \"@{dexterity}\"\r\n                        case Signature.IQ: return \"@{intelligence}\"\r\n                        case Signature.HT: return \"@{health}\"\r\n                        case Signature.Per: return \"@{perception}\"\r\n                        case Signature.Will: return \"@{willpower}\"\r\n                        case Signature.Base: return 10\r\n                    }\r\n                })(),\r\n                difficulty: (() => {\r\n                    switch (this.difficulty) {\r\n                        case Difficulty.easy: return -1\r\n                        case Difficulty.average: return -2\r\n                        case Difficulty.hard: return -3\r\n                        case Difficulty.very_hard: return -4\r\n                        case Difficulty.wildcard: return \"-5 + 1\"\r\n                    }\r\n                })(),\r\n                bonus: this.getBonus(),\r\n                points: this.points,\r\n                wildcard_skill_points: this.points / 3,\r\n                use_wildcard_points: this.difficulty === Difficulty.wildcard ? 1 : 0,\r\n                use_normal_points: this.difficulty !== Difficulty.wildcard ? 0 : 1,\r\n                skill_points: this.points,\r\n                ref: this.reference,\r\n                notes: this.notes\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class SkillDefault<T extends SkillLike<any>> extends Default<T> {\r\n    level: number\r\n    adjustedLevel: number\r\n    points: number\r\n\r\n    constructor(skill: T) {\r\n        super(skill);\r\n    }\r\n\r\n    isSkillBased() {\r\n        return this.type === Signature.Base.toString()\r\n    }\r\n    getSkillsNamedFrom(list: List<T>) {\r\n        const skills = list.iter().filter(skill => {\r\n            return this.name === skill.name && this.specialization === skill.specialization\r\n        });\r\n        const highest = skills.reduce((prev, cur) => {\r\n            if (SkillLike.calculateRelativeLevel(prev.points, 10) > SkillLike.calculateRelativeLevel(cur.points, 10)) {\r\n                return prev\r\n            } else {\r\n                return cur\r\n            }\r\n        });\r\n        return {\r\n            skills,\r\n            highest\r\n        }\r\n    }\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(data: json) {\r\n        data = objectify(data);\r\n        super.loadJSON(data);\r\n        return this\r\n    }\r\n}\r\n\r\nexport enum Difficulty {\r\n    easy = \"E\",\r\n    average = \"A\",\r\n    hard = \"H\",\r\n    very_hard = \"VH\",\r\n    wildcard = \"W\"\r\n}","import { SkillLike, SkillDefault, Difficulty } from \"./skill\";\r\nimport { List } from \"./misc/list\";\r\nimport { Character, Signature } from \"./character\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\n\r\nexport class SpellList extends List<Spell> {\r\n    populator = Spell\r\n    loader\r\n\r\n    constructor(character: Character) {\r\n        super(character);\r\n        this.loader = this.character.serializer.mapSpell\r\n    }\r\n}\r\n\r\nexport class Spell extends SkillLike<Spell> {\r\n    version = 1\r\n    tag = \"spell\"\r\n    type: \"spell\" | \"spell_container\"\r\n\r\n    college: string\r\n    powerSource: string\r\n    spellClass: string\r\n    castingCost: string\r\n    maintenanceCost: string\r\n    castingTime: string\r\n    duration: string\r\n\r\n    difficulty: Difficulty = Difficulty.hard\r\n\r\n    signature: Signature = Signature.IQ\r\n    defaults: Set<SkillDefault<SkillLike<any>>>\r\n    defaultedFrom: SkillDefault<SkillLike<any>> = null\r\n    encumbrancePenaltyMultiple: number = null;\r\n\r\n    constructor(list: List<Spell>) {\r\n        super(list)\r\n        this.list = list;\r\n    }\r\n    isActive() { return true }\r\n    getBonus() {\r\n        return 0\r\n    }\r\n}","import { Skill, SkillDefault, Difficulty, SkillLike } from \"./skill\";\r\nimport { Signature } from \"./character\";\r\nimport { List } from \"./misc/list\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\nexport type TehchniqueDifficulty = Difficulty.average | Difficulty.hard\r\nexport class Technique extends Skill {\r\n    tag = \"technique\"\r\n\r\n    limit: number\r\n    difficulty: TehchniqueDifficulty = Difficulty.average\r\n\r\n    defaults: Set<SkillDefault<SkillLike<any>>> = null\r\n\r\n    default: SkillDefault<Skill>\r\n    defaultedFrom: SkillDefault<SkillLike<any>> = null\r\n\r\n    isTechnique: boolean = true\r\n\r\n    constructor(list: List<Skill>) {\r\n        super(list);\r\n    }\r\n\r\n    get signature(): Signature { return null }\r\n\r\n    getBonus() {\r\n        return 0\r\n    }\r\n\r\n    calculateLevel(): number {\r\n        const techniqueDefault = this.default;\r\n        const character = this.list.character;\r\n        let relativeLevel = 0;\r\n        let points = this.points;\r\n        let level = Number.NEGATIVE_INFINITY;\r\n        if (character != null) {\r\n            level = this.getBaseLevel(techniqueDefault, null);\r\n            if (level !== Number.NEGATIVE_INFINITY) {\r\n                let baseLevel = level;\r\n                level += techniqueDefault.modifier;\r\n                if (this.difficulty === Difficulty.hard) {\r\n                    points--;\r\n                }\r\n                if (points > 0) {\r\n                    relativeLevel = points;\r\n                }\r\n                if (level !== Number.NEGATIVE_INFINITY) {\r\n\r\n                    level += relativeLevel;\r\n                }\r\n                if (Boolean(this.limit)) {\r\n                    let max = baseLevel + this.limit;\r\n                    if (level > max) {\r\n                        relativeLevel -= level - max;\r\n                        level = max;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return level\r\n    }\r\n    getBaseLevel(def: SkillDefault<Skill>, requirePoints: boolean) {\r\n        const character = this.list.character;\r\n        if (def.type === \"Skill\") {\r\n            let skill = def.getSkillsNamedFrom(this.list).highest;\r\n            return skill !== null ? skill.calculateLevel() : Number.NEGATIVE_INFINITY\r\n        }\r\n    }\r\n    getRelativeLevel() {\r\n        const relativeTo = this.default.getSkillsNamedFrom(this.list).highest;\r\n        console.log(this.name, relativeTo.name, relativeTo.calculateLevel());\r\n        return this.calculateLevel() - relativeTo.calculateLevel()\r\n    }\r\n    toR20(): any {\r\n        const link = this.default.isSkillBased() ? this.default.getSkillsNamedFrom(this.list).highest : null\r\n        return {\r\n            key: \"repeating_techniquesrevised\",\r\n            row_id: this.r20rowID,\r\n            data: {\r\n                name: this.name,\r\n                parent: this.default.name,\r\n                default: this.default.modifier,\r\n                skill_modifier: 0,\r\n                points: this.points,\r\n                ref: this.reference,\r\n                notes: this.notes,\r\n                technique_row_type: link ? \"Skill\" : \"10\",\r\n                technique_skill_row_id: link ? link.uuid : \"\",\r\n            }\r\n        }\r\n    }\r\n}","import { Modifier } from \"./misc/modifier\";\r\nimport { List, ListItem } from \"./misc/list\";\r\nimport { Character } from \"./character\";\r\nimport { json, objectify } from \"@utils/json_utils\";\r\nimport { Feature } from \"./misc/feature\";\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\n\r\nexport class TraitList extends List<Trait> {\r\n    populator = Trait\r\n    loader\r\n    constructor(character: Character) {\r\n        super(character);\r\n        this.loader = this.character.serializer.mapTrait\r\n    }\r\n    sumRacials() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n    sumAdvantages() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) return prev\r\n            if (cur.categories.has(\"Advantage\") || cur.categories.has(\"Perk\") || cur.adjustedPoints() >= 1) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n    sumDisadvantages() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) return prev\r\n            if (cur.categories.has(\"Disadvantage\") || cur.adjustedPoints() < -1) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n    sumQuirks() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) return prev\r\n            if (cur.categories.has(\"Quirk\") || cur.adjustedPoints() === -1) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n}\r\n\r\nenum ContainerType {\r\n    group = \"\",\r\n    metaTrait = \"meta trait\",\r\n    race = \"race\",\r\n    alternativeAbilities = \"alternative abilities\"\r\n}\r\n\r\nexport class Trait extends ListItem<Trait> {\r\n    version = 1\r\n    tag = \"advantage\"\r\n\r\n    hasLevels: boolean\r\n\r\n    name: string\r\n    basePoints: number\r\n    levels: number\r\n    allowHalfLevels: boolean\r\n    hasHalfLevel: boolean\r\n    roundDown: boolean\r\n    controlRating: ControlRollMultiplier\r\n    types: Set<TraitType>\r\n    pointsPerLevel: number\r\n    disabled: boolean = false\r\n    containerType: ContainerType\r\n\r\n    modifiers: Set<TraitModifier>\r\n\r\n    constructor(list: List<Trait>) {\r\n        super(list);\r\n        this.types = new Set();\r\n        this.modifiers = new Set();\r\n    }\r\n\r\n    isActive() { return !this.disabled }\r\n    getLevel() { return this.levels }\r\n\r\n    isRacial(): Boolean {\r\n        if (!this.containedBy) {\r\n            return false\r\n        }\r\n        if (this.containedBy.containerType === ContainerType.race) {\r\n            return true\r\n        } else {\r\n            return this.containedBy.isRacial();\r\n        }\r\n    }\r\n\r\n    childrenPoints(): number {\r\n        return this.iterChildren().reduce((prev, cur) => {\r\n            if (cur.canContainChildren) {\r\n                prev += cur.findSelf().childrenPoints();\r\n            } else {\r\n                prev += cur.findSelf().adjustedPoints();\r\n            }\r\n            return prev\r\n        }, 0)\r\n    }\r\n\r\n    static getCRMultipland(cr: ControlRollMultiplier) {\r\n        switch (cr) {\r\n            case ControlRollMultiplier.cannotResist: return 2.5\r\n            case ControlRollMultiplier.resistRarely: return 2\r\n            case ControlRollMultiplier.resistFairlyOften: return 1.5\r\n            case ControlRollMultiplier.resistQuiteOften: return 1\r\n            case ControlRollMultiplier.resistAlmostAlway: return 0.5\r\n            default: return 1\r\n        }\r\n    }\r\n\r\n    adjustedPoints() {\r\n        if (this.isContainer()) {\r\n            return 0\r\n        } else {\r\n            return Trait.getAdjustedPoints(this.modifiers, this)\r\n        }\r\n    }\r\n\r\n    disable() { this.disabled = true; }\r\n    enable() { this.disabled = false; }\r\n\r\n    static getAdjustedPoints(modifiers: Set<TraitModifier>, trait: Trait): number {\r\n        let basePoints = trait.basePoints;\r\n        let pointsPerLevel = trait.pointsPerLevel;\r\n\r\n        let baseEnh = 0;\r\n        let levelEnh = 0;\r\n        let baseLim = 0;\r\n        let levelLim = 0;\r\n        let multiplier = 1;\r\n\r\n        modifiers?.forEach(modifier => {\r\n            if (modifier.enabled) {\r\n                let mod = modifier.costModifier();\r\n                switch (modifier.type) {\r\n                    case TraitModifierType.percentage:\r\n                    default:\r\n                        switch (modifier.affects) {\r\n                            case TraitModifierAffects.total:\r\n                            default:\r\n                                if (mod < 0) {\r\n                                    baseLim += mod;\r\n                                    levelLim += mod;\r\n                                } else {\r\n                                    baseEnh += mod;\r\n                                    levelEnh += mod;\r\n                                }\r\n                                break\r\n                            case TraitModifierAffects.base:\r\n                                if (mod < 0) {\r\n                                    baseLim += mod;\r\n                                } else {\r\n                                    baseEnh += mod;\r\n                                }\r\n                                break\r\n                            case TraitModifierAffects.levels:\r\n                                if (mod < 0) {\r\n                                    levelLim += mod;\r\n                                } else {\r\n                                    levelEnh += mod;\r\n                                }\r\n                                break\r\n                        }\r\n                        break\r\n                    case TraitModifierType.points:\r\n                        switch (modifier.affects) {\r\n                            case TraitModifierAffects.total:\r\n                            case TraitModifierAffects.base:\r\n                            default:\r\n                                basePoints += mod;\r\n                                break\r\n                            case TraitModifierAffects.levels:\r\n                                pointsPerLevel += mod;\r\n                                break\r\n                        }\r\n                        break\r\n                    case TraitModifierType.multiplier:\r\n                        multiplier *= mod;\r\n                        break\r\n                }\r\n            }\r\n        });\r\n        let modifiedBasePoints = basePoints;\r\n        let leveledPoints = pointsPerLevel * (trait.levels + (trait.hasHalfLevel ? .5 : 0));\r\n        if (baseEnh != 0 || baseLim != 0 || levelEnh != 0 || levelLim != 0) {\r\n            if (false) {\r\n                //TODO multiplicative modifiers\r\n            } else {\r\n                let baseMod = Math.max(baseEnh + baseLim, -80);\r\n                let levelMod = Math.max(levelEnh + levelLim, -80);\r\n                modifiedBasePoints = baseMod === levelMod ?\r\n                    TraitModifier.modifyPoints((modifiedBasePoints + leveledPoints), baseMod) :\r\n                    TraitModifier.modifyPoints(modifiedBasePoints, baseMod) + TraitModifier.modifyPoints(leveledPoints, levelMod);\r\n            }\r\n        } else {\r\n            modifiedBasePoints += leveledPoints;\r\n        }\r\n        return TraitModifier.applyRounding((modifiedBasePoints * multiplier), Boolean(trait.roundDown))\r\n    }\r\n    toR20() {\r\n        let key;\r\n        const traitTemplate = {\r\n            name: this.name,\r\n            points: this.adjustedPoints(),\r\n            ref: this.reference,\r\n            notes: this.notes\r\n        }\r\n        const categories = this.categories;\r\n        const activeModifiers = Array.from(this.modifiers);\r\n        const perkFlag = categories.has(\"Perk\") || this.adjustedPoints() === 1;\r\n        const quirkFlag = categories.has(\"Quirk\") || this.adjustedPoints() === -1;\r\n        const advantageFlag = categories.has(\"Advantage\") || this.adjustedPoints() >= 0;\r\n        const disadvantageFlag = categories.has(\"Disadvantage\") || this.adjustedPoints() < 0;\r\n        const languageFlag = categories.has(\"Language\");\r\n        const nativeLanguageFlag = categories.has(\"Language\") && activeModifiers.some(modifier => modifier.name === \"Native\");\r\n        const racialFlag = this.isRacial();\r\n        const cultureFlag = this.name.includes(\"Cultural Familiarity\");\r\n        if (nativeLanguageFlag) {\r\n\r\n        } else if (languageFlag) {\r\n\r\n        }\r\n        else if (cultureFlag) {\r\n\r\n        } else if (racialFlag) {\r\n            key = \"repeating_racial\";\r\n            Object.assign(traitTemplate, {\r\n                cr: this.controlRating\r\n            });\r\n        } else if (quirkFlag) {\r\n            key = \"repeating_quirks\";\r\n            Object.assign(traitTemplate, {\r\n                cr: this.controlRating\r\n            });\r\n        } else if (disadvantageFlag) {\r\n            key = \"repeating_disadvantages\";\r\n            Object.assign(traitTemplate, {\r\n                cr: this.controlRating\r\n            });\r\n        } else if (perkFlag) {\r\n            key = \"repeating_perk\";\r\n            Object.assign(traitTemplate, {\r\n                foa: this.controlRating\r\n            });\r\n        } else if (advantageFlag) {\r\n            key = \"repeating_traits\";\r\n            Object.assign(traitTemplate, {\r\n                foa: this.controlRating\r\n            });\r\n        }\r\n        return {\r\n            key,\r\n            row_id: this.r20rowID,\r\n            data: traitTemplate\r\n        }\r\n    }\r\n}\r\n\r\nexport class TraitModifier extends Modifier<Trait> {\r\n    static nodeName = \"modifier\"\r\n\r\n    cost: number\r\n    type: TraitModifierType\r\n    levels: number\r\n    affects: TraitModifierAffects\r\n\r\n    hasLevels: boolean\r\n\r\n    constructor(owner: Trait) {\r\n        super(owner)\r\n        this.hasLevels = false;\r\n    }\r\n\r\n    costModifier() { return this.levels > 0 ? this.cost * this.levels : this.cost }\r\n\r\n    static modifyPoints(points: number, modifier: number) {\r\n        return points + TraitModifier.calculateModifierPoints(points, modifier);\r\n    }\r\n    static calculateModifierPoints(points: number, modifier: number) {\r\n        return points * (modifier / 100)\r\n    }\r\n    static applyRounding(value: number, roundCostDown: boolean) {\r\n        return roundCostDown ? Math.floor(value) : Math.ceil(value)\r\n    }\r\n    toJSON() {\r\n\r\n    }\r\n    loadJSON(object: string | json): TraitModifier {\r\n        object = objectify<json>(object);\r\n        super.loadJSON(object);\r\n        function mapModifier(object: json, modifier: TraitModifier): TraitModifier {\r\n            modifier.cost = object.cost;\r\n            modifier.type = object.cost_type;\r\n            modifier.affects = object.affects;\r\n            modifier.levels = object.levels;\r\n            return modifier\r\n        }\r\n        return mapModifier(object, this);\r\n    }\r\n}\r\n\r\nenum TraitModifierType {\r\n    percentage = \"percentage\",\r\n    points = \"points\",\r\n    multiplier = \"multiplier\",\r\n}\r\n\r\nenum TraitModifierAffects {\r\n    base = \"base only\",\r\n    levels = \"levels only\",\r\n    total = \"total\"\r\n}\r\n\r\nexport enum TraitType {\r\n    mental = \"Mental\",\r\n    physical = \"Physical\",\r\n    social = \"Social\",\r\n    exotic = \"Exotic\",\r\n}\r\n\r\nenum ControlRollMultiplier {\r\n    cannotResist = \"0\",\r\n    resistRarely = \"6\",\r\n    resistFairlyOften = \"9\",\r\n    resistQuiteOften = \"12\",\r\n    resistAlmostAlway = \"15\",\r\n    noneRequired = \"\"\r\n}","export module gcs {\r\n}\r\nexport interface Profile {\r\n    size_modifier: string\r\n    tech_level: string\r\n    birthday: string\r\n    name: string\r\n    eyes: string\r\n    skin: string\r\n    hair: string\r\n    handedness: string\r\n    weight: string\r\n    height: string\r\n    gender: string\r\n    race: string\r\n    body_type: string\r\n    age: string\r\n    portrait: string\r\n}\r\n\r\nexport enum FeatureType {\r\n    attributeBonus = \"attribute_bonus\",\r\n    damageResistanceBonus = \"dr_bonus\",\r\n    skillBonus = \"skill_bonus\",\r\n    weaponDamageBonus = \"weapon_bonus\",\r\n    reactionBonus = \"reaction_bonus\",\r\n    spellBonus = \"spell_bonus\",\r\n    containedWeightReduction = \"contained_weight_reduction\",\r\n    costReduction = \"cost_reduction\"\r\n}\r\n\r\nexport type LooseList<T> = T[] | Set<T>;\r\n\r\nexport interface Prerequisite<T> {\r\n\r\n}\r\n\r\nexport interface Validitable<T> {\r\n    prereqs: LooseList<Prerequisite<T>>\r\n}\r\n\r\nexport interface Notable {\r\n    reference: string\r\n    notes: string\r\n}\r\n\r\nexport interface Categorized {\r\n    categories: LooseList<string>\r\n}\r\n\r\nexport interface Feature {\r\n    type: FeatureType\r\n    amount: number\r\n}\r\n\r\nexport interface Modifier extends Notable {\r\n    version: number\r\n    disabled: boolean\r\n    name: string\r\n}\r\n\r\nexport interface Modifiable<T extends Modifier> {\r\n    modifiers: LooseList<T>\r\n}\r\n\r\nexport interface Weaponized {\r\n    weapons: LooseList<Weapon>\r\n}\r\n\r\nexport interface Featurable {\r\n    features: LooseList<Feature>\r\n}\r\n\r\nexport interface Default {\r\n    type: string\r\n    modifier: number\r\n}\r\n\r\nexport interface Weapon {\r\n    type: string\r\n    damage: {\r\n        type: string\r\n        base: string\r\n    }\r\n    strength: string\r\n    defaults: LooseList<WeaponDefault>\r\n}\r\n\r\nexport interface MeleeWeapon extends Weapon {\r\n    usage: string\r\n    reach: string\r\n    parry: string\r\n    block: string\r\n}\r\n\r\nexport interface RangedWeapon extends Weapon {\r\n    accuracy: string\r\n    range: string\r\n    rate_of_fire: string\r\n    shots: string\r\n    bulk: string\r\n    recoil: string\r\n}\r\n\r\nexport interface WeaponDefault extends Default {\r\n\r\n}\r\n\r\nexport interface ListItem<T extends ListItem<T>> {\r\n    type?: string\r\n    tag: string\r\n    version: number\r\n    open: boolean\r\n    children: LooseList<ListItem<T>>\r\n}\r\n\r\nexport interface SkillLike extends ListItem<SkillLike>, Weaponized, Featurable, Categorized, Notable {\r\n    name: string\r\n    difficulty: string\r\n    points: number\r\n}\r\n\r\nexport interface SkillDefault extends Default {\r\n    name?: string\r\n    specialization?: string\r\n\r\n}\r\n\r\nexport interface DefaultedFrom extends SkillDefault {\r\n\r\n}\r\n\r\nexport interface Skill extends SkillLike {\r\n    tech_level?: string\r\n    specialization?: string\r\n    defaulted_from?: DefaultedFrom\r\n    encumbrance_penalty_multiplier?: number\r\n    defaults?: LooseList<SkillDefault>\r\n}\r\n\r\nexport interface Technique extends SkillLike {\r\n    type: \"technique\"\r\n    limit: number\r\n    default: SkillDefault\r\n}\r\n\r\nexport interface ItemModifier extends Modifier {\r\n\r\n}\r\n\r\nexport interface Equipment extends ListItem<Equipment>, Weaponized, Featurable, Notable, Categorized, Modifiable<ItemModifier> {\r\n    type: \"equipment\" | \"equipment_container\"\r\n    quantity: number\r\n    equipped: boolean\r\n    weight: string\r\n    value: string\r\n    description: string\r\n    tech_level: string\r\n    legality_class: string\r\n}\r\n\r\nexport interface TraitModifier extends Modifier {\r\n    affects: string\r\n    cost_type: string\r\n    cost: number\r\n}\r\n\r\nexport interface Trait extends ListItem<Trait>, Weaponized, Featurable, Modifiable<TraitModifier> {\r\n    type: \"advantage\" | \"advantage_container\"\r\n    name: string\r\n    enabled: boolean\r\n    physical: boolean\r\n    exotic: boolean\r\n    mental: boolean\r\n    supernatural: boolean\r\n    social: boolean\r\n    base_points: number\r\n    round_down: number\r\n    cr: number\r\n    levels: number\r\n    allow_half_levels: boolean\r\n\r\n    points_per_level: number\r\n}\r\n\r\nexport interface Spell extends ListItem<Spell>, SkillLike {\r\n    type: \"spell\" | \"spell_container\"\r\n    college: string\r\n    power_source: string\r\n    spell_class: string\r\n    casting_cost: string\r\n    maintenance_cost: string\r\n    casting_time: string\r\n    duration: string\r\n}\r\n\r\nexport interface Note extends ListItem<Note>, Notable, Featurable {\r\n    type: \"note\" | \"note_container\"\r\n    text: string\r\n}","import { Character } from \"./character/character\";\r\nimport { Skill } from \"./character/skill\";\r\nimport { Trait } from \"./character/trait\";\r\nimport { Spell } from \"./character/spell\";\r\nimport { Technique } from \"./character/technique\";\r\nimport { Equipment } from \"./character/equipment\";\r\n\r\nimport { Serializer } from \"./character/serialization/serializer\";\r\n\r\nexport {\r\n    Character,\r\n    Skill,\r\n    Trait,\r\n    Spell,\r\n    Technique,\r\n    Equipment,\r\n    Serializer\r\n}","import { Character } from \"../character/character\";\r\n\r\nconst base = {\r\n    \"schema_version\": 2,\r\n    \"oldId\": \"-M2EO3g9sXH6Q8lSFxpT\",\r\n    \"name\": \"\",\r\n    \"avatar\": \"\",\r\n    \"bio\": \"\",\r\n    \"gmnotes\": \"\",\r\n    \"defaulttoken\": \"\",\r\n    \"tags\": \"[]\",\r\n    \"controlledby\": \"\",\r\n    \"inplayerjournals\": \"\",\r\n    \"attribs\": [\r\n        {\r\n            name: \"show_new_techniques\",\r\n            current: \"1\",\r\n            max: \"\",\r\n            id: generateUUID()\r\n        },\r\n        {\r\n            name: \"show_old_techniques\",\r\n            current: \"0\",\r\n            max: \"\",\r\n            id: generateUUID()\r\n        },\r\n        {\r\n            \"name\": \"point_summary_layout\",\r\n            \"current\": \"2\",\r\n            \"max\": \"\",\r\n            \"id\": generateUUID()\r\n        }\r\n    ],\r\n    // @ts-ignore\r\n    \"abilities\": []\r\n}\r\n\r\nexport function exportR20(character: Character) {\r\n    const profile = character.profile;\r\n    const pointTotals = character.pointTotals();\r\n    const native_language = character.traitList.iter().find(trait => {\r\n        if (\r\n            trait.categories.has(\"Language\") &&\r\n            Array.from(trait.modifiers.values()).some(modifier => {\r\n                if (modifier.enabled && modifier.name.includes(\"Native\")) return true\r\n            })\r\n        ) {\r\n            return true\r\n        }\r\n    });\r\n    const static_fields = {\r\n        strength_mod: character.ST.getMod(),\r\n        strength_points: character.ST.pointsSpent(),\r\n        dexterity_mod: character.DX.getMod(),\r\n        dexterity_points: character.DX.pointsSpent(),\r\n        intelligence_mod: character.IQ.getMod(),\r\n        intelligence_points: character.IQ.pointsSpent(),\r\n        health_mod: character.HT.getMod(),\r\n        health_points: character.HT.pointsSpent(),\r\n        perception_mod: character.Per.getMod(),\r\n        perception_points: character.Per.pointsSpent(),\r\n        willpower_mod: character.Will.getMod(),\r\n        willpower_points: character.Will.pointsSpent(),\r\n        basic_speed_mod: character.Speed.getMod(),\r\n        basic_speed_points: character.Speed.pointsSpent(),\r\n        basic_move_mod: character.Move.getMod(),\r\n        basic_move_points: character.Move.pointsSpent(),\r\n        hit_points_max_mod: character.HP.getMod(),\r\n        hit_points_max_points: character.HP.pointsSpent(),\r\n        fatigue_points_mod: character.FP.getMod(),\r\n        fatigue_points_points: character.FP.pointsSpent(),\r\n\r\n        name_native_language: native_language ? native_language.name : \"\",\r\n        native_language_spoken: 0,\r\n        native_language_written: 0,\r\n\r\n        tl: profile.techLevel,\r\n        fullname: profile.name,\r\n        race: profile.race,\r\n        gender: profile.gender,\r\n        size: profile.sizeModifier,\r\n        hand: profile.handedness,\r\n        birth_date: profile.birthday,\r\n        age: profile.age,\r\n        height: profile.height,\r\n        weight: profile.weight,\r\n        eyes: profile.eyes,\r\n        hair: profile.hair,\r\n\r\n        total_points: pointTotals.total,\r\n        skills_points: pointTotals.skills\r\n    }\r\n    var output = base;\r\n    output.name = profile.name;\r\n    output.avatar = 'data:image/png;base64,' + profile.portrait;\r\n    output.attribs = output.attribs.concat(\r\n        writeObjects(character.traitList.iter().map(trait => trait.toR20())),\r\n        writeObjects(character.skillList.iter().map(skill => skill.toR20())),\r\n        writeObjects(character.allItems().map(item => item.toR20())),\r\n        writeObjects(static_fields, true)\r\n    )\r\n    var json = JSON.stringify(output);\r\n    var blob = new Blob([json], { type: \"application/json\" });\r\n    var url = URL.createObjectURL(blob);\r\n    return url\r\n}\r\n\r\nfunction writeObjects(objects: any, single = false) {\r\n    //if you put in a list of things with a similar scheme\r\n    if (!single) {\r\n        console.log(objects);\r\n        return [].concat.apply([], objects.map((object: any) => {\r\n            const row_id = object.row_id;\r\n            var x = Object.entries(object.data).map(key => {\r\n                return {\r\n                    name: `${object.key}_${row_id}_${key[0]}`,\r\n                    current: key[1] ? key[1] : \"\",\r\n                    max: \"\",\r\n                    id: generateUUID()\r\n                }\r\n            });\r\n            //console.log(x);\r\n            return x\r\n        }))\r\n    } else if (single) {\r\n        //if you put in a single object without a scheme\r\n        var x = [].concat.apply([], Object.entries(objects).map(object => {\r\n            const row_id = generateRowID();\r\n            return {\r\n                name: `${object[0]}`,\r\n                current: object[1] ? object[1] : \"\",\r\n                max: \"\",\r\n                id: generateUUID()\r\n            }\r\n        }));\r\n        //console.log(x);\r\n        return x\r\n    } else {\r\n        console.log(\"nothing is happening\");\r\n    }\r\n}\r\n\r\n\r\nexport function generateUUID() {\r\n    var a = 0, b = [];\r\n    return function () {\r\n        var c = (new Date()).getTime() + 0, d = c === a;\r\n        a = c;\r\n        for (var e = new Array(8), f = 7; 0 <= f; f--) {\r\n            e[f] = \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\".charAt(c % 64);\r\n            c = Math.floor(c / 64);\r\n        }\r\n        // @ts-ignore\r\n        c = e.join(\"\");\r\n        if (d) {\r\n            for (f = 11; 0 <= f && 63 === b[f]; f--) {\r\n                b[f] = 0;\r\n            }\r\n            b[f]++;\r\n        } else {\r\n            for (f = 0; 12 > f; f++) {\r\n                b[f] = Math.floor(64 * Math.random());\r\n            }\r\n        }\r\n        for (f = 0; 12 > f; f++) {\r\n            // @ts-ignore\r\n            c += \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\".charAt(b[f]);\r\n        }\r\n        return c;\r\n    }();\r\n}\r\n\r\nexport function generateRowID() {\r\n    // @ts-ignore\r\n    return generateUUID().replace(/_/g, \"Z\");\r\n}\r\n","export type json = { [key: string]: any }\r\nexport function objectify<T>(object: string | json, reviver?: (this: any, key: string, value: any) => T): T {\r\n    if (typeof object === \"string\") object = JSON.parse(object, reviver);\r\n    return object as T\r\n}\r\n\r\nexport function isArray(potentialArray: any): (any | any[])[] {\r\n    return Array.isArray(potentialArray) ? potentialArray : []\r\n}","export enum StringCompare {\r\n    isAnything = \"is_anything\",\r\n    is = \"is\",\r\n    isNot = \"is_not\",\r\n    contains = \"contains\",\r\n    doesNotContain = \"does_not_contain\",\r\n    startsWith = \"starts_with\",\r\n    doesNotStartWith = \"does_not_start_with\",\r\n    endsWith = \"ends_with\",\r\n    doesNotEndWith = \"does_not_end_with\",\r\n}\r\n\r\nfunction iterableCompare(compare: string, compareTo: string | string[] | Set<string>) {\r\n\r\n}\r\n\r\nexport function stringCompare(defaultQuery: string, skillQuery: string | string[] | Set<string>, type: StringCompare): boolean {\r\n    defaultQuery = defaultQuery?.toLowerCase();\r\n    skillQuery = skillQuery?.toString()?.toLowerCase();\r\n\r\n    //if (defaultQuery === \"fast-draw\") console.log(skillQuery, type, defaultQuery);\r\n\r\n    switch (type) {\r\n        case StringCompare.isAnything: return true\r\n        case StringCompare.is: return skillQuery === defaultQuery\r\n        case StringCompare.isNot: return skillQuery !== defaultQuery\r\n        case StringCompare.contains: return skillQuery.includes(defaultQuery)\r\n        case StringCompare.doesNotContain: return !skillQuery.includes(defaultQuery)\r\n        case StringCompare.startsWith: return skillQuery.startsWith(defaultQuery)\r\n        case StringCompare.doesNotStartWith: return !skillQuery.startsWith(defaultQuery)\r\n        case StringCompare.endsWith: return skillQuery.endsWith(defaultQuery)\r\n        case StringCompare.doesNotEndWith: return !skillQuery.endsWith(defaultQuery)\r\n        default: return false\r\n    }\r\n}"],"sourceRoot":""}