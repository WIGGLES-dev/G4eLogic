{"version":3,"sources":["webpack://lib/webpack/universalModuleDefinition","webpack://lib/webpack/bootstrap","webpack://lib/./src/character/attribute.ts","webpack://lib/./src/character/character.ts","webpack://lib/./src/character/equipment.ts","webpack://lib/./src/character/misc/collection.ts","webpack://lib/./src/character/misc/default.ts","webpack://lib/./src/character/misc/element.ts","webpack://lib/./src/character/misc/feature.ts","webpack://lib/./src/character/misc/list.ts","webpack://lib/./src/character/misc/modifier.ts","webpack://lib/./src/character/profile.ts","webpack://lib/./src/character/serialization/gcs_json.ts","webpack://lib/./src/character/serialization/serializer.ts","webpack://lib/./src/character/skill/logic.ts","webpack://lib/./src/character/skill/skill.ts","webpack://lib/./src/character/spell.ts","webpack://lib/./src/character/technique.ts","webpack://lib/./src/character/trait.ts","webpack://lib/./src/character/weapon.ts","webpack://lib/./src/gcs/gcs.ts","webpack://lib/./src/index.ts","webpack://lib/./src/utils/2R20.ts","webpack://lib/./src/utils/json_utils.ts","webpack://lib/./src/utils/string_utils.ts"],"names":[],"mappings":"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","file":"lib-min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib\"] = factory();\n\telse\n\t\troot[\"lib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Feature } from \"./misc/feature\";\r\nimport { Character, Signature } from \"./character\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport { Featurable } from \"@character/character\";\r\nimport { CharacterElement } from \"./misc/element\";\r\n\r\nexport class Attribute extends CharacterElement<Attribute> {\r\n    static keys = [\"name\", \"level\", \"costPerLevel\", \"defaultLevel\"]\r\n    name: Signature\r\n    character: Character\r\n    level: number\r\n    costPerLevel: number\r\n    defaultLevel: number\r\n    basedOn: () => number\r\n\r\n    constructor(\r\n        name: Signature,\r\n        character: Character,\r\n        costPerLevel: number,\r\n        {\r\n            defaultLevel = 0,\r\n            basedOn = () => 0\r\n        },\r\n        keys: string[] = []\r\n    ) {\r\n        super(character, [...keys, ...Attribute.keys]);\r\n        this.name = name;\r\n        this.character = character;\r\n        this.level = defaultLevel;\r\n        this.costPerLevel = costPerLevel;\r\n        this.defaultLevel = defaultLevel;\r\n        this.basedOn = basedOn;\r\n    }\r\n\r\n    setLevel(level: number) { if (level || level === 0) this.level = level; return level }\r\n    setLevelDelta() { }\r\n\r\n    getMod() { return Attribute.bonusReducer(this.character, this.name) }\r\n    pointsSpent() { return this.levelsIncreased() * this.costPerLevel }\r\n    levelsIncreased() { return this.level - this.defaultLevel }\r\n    calculateLevel() { return this.level + this.getMod() + this.basedOn() }\r\n\r\n    get displayLevel() { return this.calculateLevel() }\r\n    set displayLevel(level) {\r\n        const mod = this.getMod();\r\n        if (this.defaultLevel) {\r\n            this.level = level - mod;\r\n        } else if (!this.defaultLevel && this.basedOn) {\r\n            this.level = level - this.basedOn() - mod;\r\n        }\r\n    }\r\n\r\n    static bonusReducer(sheet: Character, attribute: Signature) {\r\n        return sheet.featureList.getFeaturesByType(FeatureType.attributeBonus).reduce((prev, cur) => {\r\n            if (cur instanceof AttributeBonus) {\r\n                if (cur.ownerIsActive() && cur.attribute?.toString()?.toLowerCase() === attribute?.toString()?.toLowerCase() && !cur.limitation) {\r\n                    prev += cur.getBonus()\r\n                }\r\n            }\r\n            return prev\r\n        }, 0)\r\n    }\r\n}\r\n\r\nexport class AttributeBonus<T extends Featurable> extends Feature<T> {\r\n    static type = FeatureType.attributeBonus\r\n    static keys = [\"attribute\"]\r\n\r\n    attribute: Signature\r\n    constructor(owner: T, keys: string[] = []) {\r\n        super(owner, [...keys, ...AttributeBonus.keys]);\r\n    }\r\n}","import { List, ListItem } from \"./misc/list\";\r\nimport { Attribute } from \"./attribute\";\r\nimport { SkillList } from \"./skill/skill\";\r\nimport { TraitList } from \"./trait\";\r\nimport { Equipment, EquipmentList } from \"./equipment\";\r\nimport { FeatureList } from \"./misc/feature\";\r\nimport { Profile } from \"./profile\";\r\nimport { SpellList } from \"./spell\";\r\nimport { exportR20 } from \"@utils/2R20\";\r\nimport { json, objectify } from \"@utils/json_utils\";\r\nimport { Weapon } from \"./weapon\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { Serializer } from \"./serialization/serializer\";\r\nimport { GCSJSON } from \"./serialization/gcs_json\";\r\nimport { CharacterElement } from \"./misc/element\";\r\n\r\nabstract class Sheet {\r\n    serializer: Serializer\r\n    #elements: Set<CharacterElement<Featurable>> = new Set();\r\n\r\n    constructor(serializer: Serializer) {\r\n        this.serializer = serializer;\r\n    }\r\n\r\n    abstract load(sheet: Sheet, data: any): Sheet\r\n\r\n    registerElement(element: CharacterElement<Featurable>) {\r\n        this.#elements.add(element);\r\n    }\r\n    removeElement(element: CharacterElement<Featurable>) {\r\n        this.#elements.delete(element);\r\n    }\r\n    getElementById(type: string, id: string) {\r\n        let result;\r\n        this.#elements.forEach(element => {\r\n            if (element[type] === id) {\r\n                result = element;\r\n            }\r\n        })\r\n        return result || null\r\n    }\r\n}\r\n\r\nexport interface Featurable extends ListItem<any> {\r\n    hasLevels: boolean\r\n    getLevel: () => number\r\n}\r\n\r\nexport class Character extends Sheet {\r\n    gCalcID: string\r\n\r\n    attributes: Map<Signature, Attribute>\r\n\r\n    missingHP: number\r\n    missingFP: number\r\n\r\n    profile: Profile\r\n    skillList: SkillList\r\n    equipmentList: EquipmentList\r\n    otherEquipmentList: EquipmentList\r\n    traitList: TraitList\r\n    spellList: SpellList\r\n\r\n    featureList: FeatureList\r\n\r\n    constructor(serializer: Serializer = new GCSJSON()) {\r\n        super(serializer);\r\n        this.profile = new Profile();\r\n        this.equipmentList = new EquipmentList(this);\r\n        this.otherEquipmentList = new EquipmentList(this);\r\n        this.skillList = new SkillList(this);\r\n        this.traitList = new TraitList(this);\r\n        this.spellList = new SpellList(this);\r\n        this.attributes = new Map();\r\n        this.attributes.set(\r\n            Signature.ST,\r\n            new Attribute(\r\n                Signature.ST,\r\n                this,\r\n                10,\r\n                { defaultLevel: 10 }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.DX,\r\n            new Attribute(\r\n                Signature.DX,\r\n                this,\r\n                20,\r\n                { defaultLevel: 10 }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.IQ,\r\n            new Attribute(\r\n                Signature.IQ,\r\n                this,\r\n                20,\r\n                { defaultLevel: 10 }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.HT,\r\n            new Attribute(\r\n                Signature.HT,\r\n                this,\r\n                10,\r\n                { defaultLevel: 10 }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.Will,\r\n            new Attribute(\r\n                Signature.Will,\r\n                this,\r\n                5,\r\n                { basedOn: () => this.getAttribute(Signature.IQ).calculateLevel() }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.Speed,\r\n            new Attribute(\r\n                Signature.Speed,\r\n                this,\r\n                20,\r\n                { basedOn: () => (this.getAttribute(Signature.DX).calculateLevel() + this.getAttribute(Signature.HT).calculateLevel()) / 4 }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.Move,\r\n            new Attribute(\r\n                Signature.Move,\r\n                this,\r\n                5,\r\n                { basedOn: () => Math.floor(this.getAttribute(Signature.Speed).calculateLevel()) }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.Per,\r\n            new Attribute(\r\n                Signature.Per,\r\n                this,\r\n                5,\r\n                { basedOn: () => this.getAttribute(Signature.IQ).calculateLevel() }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.HP,\r\n            new Attribute(\r\n                Signature.HP,\r\n                this,\r\n                2,\r\n                { basedOn: () => this.getAttribute(Signature.ST).calculateLevel() }\r\n            ));\r\n        this.attributes.set(\r\n            Signature.FP,\r\n            new Attribute(\r\n                Signature.FP,\r\n                this,\r\n                3,\r\n                { basedOn: () => this.getAttribute(Signature.HT).calculateLevel() }\r\n            ));\r\n        this.featureList = new FeatureList();\r\n    }\r\n\r\n    totalAttributesCost() {\r\n        return Array.from(this.attributes.values()).reduce((prev, cur) => {\r\n            if (cur instanceof Attribute) {\r\n                return prev + cur.pointsSpent()\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n\r\n    getAttribute(attribute: Signature) {\r\n        return this.attributes.get(attribute)\r\n    }\r\n\r\n    pointTotals() {\r\n        const racialPoints = this.traitList.sumRacials();\r\n        const attributePoints = this.totalAttributesCost();\r\n        const advantages = this.traitList.sumAdvantages();\r\n        const disadvantages = this.traitList.sumDisadvantages();\r\n        const quirks = this.traitList.sumQuirks();\r\n        const skills = this.skillList.sumSkills();\r\n        const spells = this.spellList.sumSpells();\r\n        return {\r\n            racialPoints,\r\n            attributePoints,\r\n            advantages,\r\n            disadvantages,\r\n            quirks,\r\n            skills,\r\n            spells,\r\n            total: racialPoints + attributePoints + advantages + disadvantages + quirks + skills + spells\r\n        }\r\n    }\r\n    allItems(): Equipment[] {\r\n        return [].concat.apply([],\r\n            [\r\n                this.equipmentList.iter(),\r\n                this.otherEquipmentList.iter()\r\n            ])\r\n    }\r\n    basicLift() {\r\n        const ST = this.getAttribute(Signature.ST).calculateLevel();\r\n        return Math.round(ST * ST / 5)\r\n    }\r\n    encumbranceLevel() {\r\n        const basicLift = this.basicLift();\r\n        const carriedWeight = this.equipmentList.carriedWeight();\r\n        if (carriedWeight < basicLift) {\r\n            return 0\r\n        } else if (carriedWeight < basicLift * 2) {\r\n            return -1\r\n        } else if (carriedWeight < basicLift * 3) {\r\n            return -2\r\n        } else if (carriedWeight < basicLift * 6) {\r\n            return -3\r\n        } else if (carriedWeight < basicLift * 10) {\r\n            return -4\r\n        }\r\n    }\r\n\r\n    encumberedMove() {\r\n        return this.getAttribute(Signature.Move).calculateLevel() + this.encumbranceLevel()\r\n    }\r\n\r\n    dodgeScore() { return Math.floor(this.getAttribute(Signature.Speed).calculateLevel() + Attribute.bonusReducer(this, Signature.Dodge) + 3) }\r\n    encumberedDodgeScore() {\r\n        switch (this.encumbranceLevel()) {\r\n            case 0:\r\n                return this.dodgeScore()\r\n            case -1:\r\n                return Math.floor(this.dodgeScore() * .8)\r\n            case -2:\r\n                return Math.floor(this.dodgeScore() * .6)\r\n            case -3:\r\n                return Math.floor(this.dodgeScore() * .4)\r\n            case -4:\r\n                return Math.floor(this.dodgeScore() * .2)\r\n        }\r\n    }\r\n    load(data: any) {\r\n        this.void();\r\n        return this.serializer.load(this, data)\r\n    }\r\n    void(): void {\r\n        this.featureList.empty();\r\n        this.traitList.empty();\r\n        this.skillList.empty();\r\n        this.equipmentList.empty();\r\n        this.otherEquipmentList.empty();\r\n        this.spellList.empty();\r\n    }\r\n    toR20() {\r\n        return exportR20(this)\r\n    }\r\n}\r\n\r\nexport enum Signature {\r\n    ST = \"ST\",\r\n    DX = \"DX\",\r\n    IQ = \"IQ\",\r\n    HT = \"HT\",\r\n    FP = \"FP\",\r\n    HP = \"HP\",\r\n    Per = \"Per\",\r\n    Will = \"Will\",\r\n    Base = 10,\r\n    Quint = \"QT\",\r\n    Speed = \"Speed\",\r\n    Move = \"Move\",\r\n    Vision = \"Vision\",\r\n    Hearing = \"Hearing\",\r\n    TasteSmell = \"Taste Smell\",\r\n    Touch = \"Touch\",\r\n    Dodge = \"dodge\"\r\n}","import { List, ListItem } from \"./misc/list\";\r\nimport { Modifier, Modifiable } from \"./misc/modifier\";\r\nimport { Character } from \"./character\";\r\nimport { objectify, json, isArray } from \"@utils/json_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { Feature } from \"./misc/feature\";\r\n\r\nexport class EquipmentList extends List<Equipment> {\r\n\r\n    constructor(character: Character) {\r\n        super(character);\r\n    }\r\n\r\n    populator(data: any) {\r\n        return new Equipment(this)\r\n    }\r\n\r\n    carriedWeight() {\r\n        return this.iterTop().reduce((prev, cur) => {\r\n            return prev + cur.extendedWeight();\r\n        }, 0);\r\n    }\r\n\r\n    carriedValue() {\r\n        return this.iterTop().reduce((prev, cur) => {\r\n            return prev + cur.extendedValue();\r\n        }, 0);\r\n    }\r\n}\r\n\r\nexport class Equipment extends ListItem<Equipment> {\r\n    static keys = [\"description\", \"equipped\", \"techLevel\", \"legalityClass\", \"quantity\", \"weight\", \"value\", \"containedWeightReduction\"]\r\n    version = 1\r\n    tag = \"equipment\"\r\n\r\n    description: string\r\n    equipped: boolean\r\n    techLevel: string\r\n    legalityClass: string\r\n    quantity: number\r\n    weight: number\r\n    value: number\r\n    containedWeightReduction: string\r\n\r\n    modifiers: Set<EquipmentModifier<Equipment>> = new Set()\r\n\r\n    hasLevels = false\r\n\r\n    constructor(list: List<Equipment>, keys: string[] = []) {\r\n        super(list, [...keys, ...Equipment.keys]);\r\n    }\r\n    addModifier() {\r\n        const modifier = new EquipmentModifier<Equipment>(this);\r\n        this.modifiers.add(modifier)\r\n        return modifier\r\n    }\r\n    get name() { return this.description }\r\n    isActive() { return this.equipped }\r\n    getLevel(): number { return null }\r\n\r\n    private childrenWeight(): number | null {\r\n        return Array.from(this.children).reduce((prev, cur) => {\r\n            return prev += cur.findSelf().extendedWeight()\r\n        }, 0)\r\n    }\r\n    private childrenValue(): number | null {\r\n        return 0\r\n    }\r\n\r\n    private reduceContainedWeight(weight: number) {\r\n        const weightReduction = this?.containedBy?.containedWeightReduction;\r\n        if (weightReduction?.endsWith(\"%\")) {\r\n            let multiplyBy = Modifier.extractValue(weightReduction) / 100;\r\n            return weight * multiplyBy\r\n        } else if (weightReduction) {\r\n            let subtract = parseFloat(weightReduction.split(\" \")[0]);\r\n            return weight - subtract\r\n        } else {\r\n            return weight\r\n        }\r\n    }\r\n\r\n    extendedWeight() {\r\n        const adjustedWeight = this.adjustedWeight();\r\n        if (this.isContainer()) {\r\n            return this.reduceContainedWeight((this.childrenWeight() + adjustedWeight))\r\n        } else {\r\n            return adjustedWeight * this.quantity\r\n        }\r\n    }\r\n\r\n    extendedValue() {\r\n        const adjustedValue = this.adjustedValue();\r\n\r\n        if (this.isContainer()) {\r\n            return this.childrenValue() + adjustedValue\r\n        } else {\r\n            return adjustedValue * this.quantity\r\n        }\r\n    }\r\n\r\n    getModifiers() { }\r\n\r\n    adjustedValue() {\r\n        let modifiers = this.modifiers;\r\n        let value = this.value;\r\n        let cost = Equipment.processNonCFStep(EquipmentModifierValueType.originalCost, value, modifiers);\r\n        let cf = 0;\r\n        let count = 0;\r\n\r\n        this.modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.costType === EquipmentModifierValueType.baseCost) {\r\n                let adj = modifier.cost;\r\n                let mvt = EquipmentModifier.determineCostType(modifier.cost);\r\n                let amt = Modifier.extractValue(adj);\r\n\r\n                if (mvt === EquipmentModifierCostValueType.multiplier) {\r\n                    amt -= 1;\r\n                }\r\n                cf += amt;\r\n                count++\r\n            }\r\n        });\r\n        if (cf !== 0) {\r\n            if (cf < EquipmentModifier.minCF) {\r\n                cf = EquipmentModifier.minCF;\r\n            }\r\n            cost *= (cf + 1);\r\n        }\r\n        cost = Equipment.processNonCFStep(EquipmentModifierValueType.finalBaseCost, cost, modifiers);\r\n        cost = Equipment.processNonCFStep(EquipmentModifierValueType.finalCost, cost, modifiers);\r\n\r\n        return cost > 0 ? cost : 0;\r\n    }\r\n\r\n    private static processNonCFStep(costType: EquipmentModifierValueType, value: number, modifiers: Set<EquipmentModifier<Equipment>>) {\r\n        let percentages = 0;\r\n        let additions = 0;\r\n        let cost = value;\r\n\r\n        modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.costType === costType) {\r\n                let adj = modifier.cost;\r\n                let mvt = EquipmentModifier.determineCostType(modifier.cost);\r\n                let amt = Modifier.extractValue(adj);\r\n                console.log(amt, modifier.name, mvt);\r\n                switch (mvt) {\r\n                    case EquipmentModifierCostValueType.addition:\r\n                        additions += amt;\r\n                        break\r\n                    case EquipmentModifierCostValueType.percentage:\r\n                        percentages += amt;\r\n                        break\r\n                    case EquipmentModifierCostValueType.multiplier:\r\n                        cost *= amt;\r\n                        break\r\n                }\r\n            }\r\n        });\r\n        cost += additions;\r\n        if (percentages !== 0) {\r\n            cost += (value * (percentages / 100));\r\n        }\r\n        return cost\r\n    }\r\n\r\n    adjustedWeight() {\r\n        let modifiers = this.modifiers;\r\n        let weight = this.weight;\r\n\r\n        let percentages = 0;\r\n        let original = this.weight;\r\n\r\n        modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.weightType === EquipmentModifierWeightType.originalWeight) {\r\n                let adj = modifier.weight;\r\n                let mvt = EquipmentModifier.determineWeightType(modifier.weight)\r\n                let amt = Modifier.extractValue(adj);\r\n                if (mvt === EquipmentModifierWeightValueType.addition) {\r\n                    weight += amt;\r\n                } else {\r\n                    percentages += amt;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (percentages !== 0) {\r\n            original = original *= (percentages / 100);\r\n        }\r\n\r\n        weight = Equipment.processMultiplyAddWeightStep(EquipmentModifierWeightType.baseWeight, weight, modifiers);\r\n        weight = Equipment.processMultiplyAddWeightStep(EquipmentModifierWeightType.finalBaseWeight, weight, modifiers);\r\n        weight = Equipment.processMultiplyAddWeightStep(EquipmentModifierWeightType.finalWeight, weight, modifiers);\r\n\r\n        if (weight < 0) {\r\n            weight = 0;\r\n        }\r\n\r\n        return weight\r\n    }\r\n\r\n    private static processMultiplyAddWeightStep(weightType: EquipmentModifierWeightType, weight: number, modifiers: Set<EquipmentModifier<Equipment>>) {\r\n        let sum = 0;\r\n        modifiers.forEach(modifier => {\r\n            if (modifier.enabled && modifier.weightType === weightType) {\r\n                let adj = modifier.weight;\r\n                let mvt = EquipmentModifier.determineWeightType(adj);\r\n                let fraction = 0;\r\n                switch (mvt) {\r\n                    case EquipmentModifierWeightValueType.multiplier:\r\n                        weight = weight * fraction;\r\n                        break\r\n                    case EquipmentModifierWeightValueType.percentageMultiplier:\r\n                        weight = weight * (fraction / 100);\r\n                        break\r\n                    case EquipmentModifierWeightValueType.addition:\r\n                        weight += fraction;\r\n                    default:\r\n                }\r\n            }\r\n        });\r\n        weight += sum;\r\n        return weight\r\n    }\r\n    toR20() {\r\n        return {\r\n            key: \"repeating_item\",\r\n            row_id: this.r20rowID,\r\n            data: {\r\n                name: this.description,\r\n                tl: this.techLevel,\r\n                ref: this.reference,\r\n                legality_class: this.legalityClass,\r\n                count: this.quantity,\r\n                cost: this.value,\r\n                weight: this.weight,\r\n                costtotal: this.extendedValue(),\r\n                weighttotal: this.extendedWeight(),\r\n                notes: this.notes\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class EquipmentModifier<T extends Modifiable> extends Modifier<T> {\r\n    static keys = [\"cost\", \"costType\", \"weight\", \"weightType\"]\r\n    tag: string = \"eqp_modifier\"\r\n    version: number = 1\r\n    static minCF = -0.8\r\n\r\n    cost: string\r\n    costType: EquipmentModifierValueType\r\n    weight: string\r\n    weightType: EquipmentModifierWeightType\r\n\r\n    constructor(equipment: T, keys: string[] = []) {\r\n        super(equipment, [...keys, ...EquipmentModifier.keys]);\r\n    }\r\n\r\n    static determineWeightType(type: string) {\r\n        type = type.trim();\r\n        if (type.endsWith(\"%\")) {\r\n            if (type.startsWith(\"x\")) {\r\n                return EquipmentModifierWeightValueType.percentageMultiplier\r\n            }\r\n            return EquipmentModifierWeightValueType.percentageAdder\r\n        }\r\n        if (type.startsWith(\"x\") || type.endsWith(\"x\")) {\r\n            return EquipmentModifierWeightValueType.multiplier\r\n        }\r\n        return EquipmentModifierWeightValueType.addition\r\n    }\r\n    static determineCostType(type: string) {\r\n        type = type.trim();\r\n        if (type.endsWith(\"cf\")) {\r\n            return EquipmentModifierCostValueType.cf\r\n        }\r\n        if (type.endsWith(\"%\")) {\r\n            return EquipmentModifierCostValueType.percentage\r\n        }\r\n        if (type.startsWith(\"x\") || type.endsWith(\"x\")) {\r\n            return EquipmentModifierCostValueType.multiplier\r\n        }\r\n        return EquipmentModifierCostValueType.addition\r\n    }\r\n\r\n}\r\n\r\nenum EquipmentModifierWeightType {\r\n    originalWeight = \"to_original_weight\",\r\n    baseWeight = \"to_base_weight\",\r\n    finalBaseWeight = \"to_final_base_weight\",\r\n    finalWeight = \"to_final_weight\",\r\n}\r\n\r\nenum EquipmentModifierWeightValueType {\r\n    addition = \"+\",\r\n    percentageAdder = \"%\",\r\n    percentageMultiplier = 1,\r\n    multiplier = 0\r\n}\r\n\r\nenum EquipmentModifierValueType {\r\n    originalCost = \"to_original_cost\",\r\n    baseCost = \"to_base_cost\",\r\n    finalBaseCost = \"to_final_base_cost\",\r\n    finalCost = \"to_final_cost\",\r\n}\r\n\r\nenum EquipmentModifierCostValueType {\r\n    addition = \"+\",\r\n    percentage = \"%\",\r\n    multiplier = \"x\",\r\n    cf = \"cf\"\r\n}\r\n","export class Collection<T, U> extends Map<T, U> {\r\n    subscriptions: Set<(store: any) => void> = new Set()\r\n\r\n    constructor(entries?: Iterable<readonly [T, U]>) {\r\n        super(entries);\r\n    }\r\n\r\n    get length() { return this.size }\r\n\r\n    //@ts-ignore\r\n    [Symbol.iterator]() { return this.values() }\r\n\r\n    iter() { return Array.from(this.values()) }\r\n\r\n    filter(callback: (element: U, i: number, src: Collection<T, U>) => Boolean, thisArg?: any): U[] {\r\n        if (thisArg) callback = callback.bind(thisArg);\r\n        const collection = this;\r\n        const entries = [];\r\n        let i = 0;\r\n        this.forEach((value, key) => {\r\n            if (callback(value, i, collection)) {\r\n                entries.push(value);\r\n            }\r\n            i++;\r\n        });\r\n        return entries\r\n    }\r\n\r\n    reduce(callback: (acc: any, cur: U, i: number, src: Collection<T, U>) => any, initial: any) {\r\n        if (this.size === 0) throw new TypeError(\"Cannot reduce an empty collection\")\r\n        const collection = this;\r\n        let accumulator = initial;\r\n        let i = 0;\r\n        this.forEach((value, key) => {\r\n            accumulator = callback(accumulator, value, i, collection)\r\n            i++;\r\n        });\r\n        return accumulator\r\n    }\r\n\r\n    map(callback: (value: U, key: T, i: number, collection: Collection<T, U>) => any, thisArg?: any): U[] {\r\n        if (thisArg) callback = callback.bind(thisArg);\r\n        const collection = this;\r\n        const transformed = [];\r\n        let i = 0;\r\n        this.forEach((value, key) => {\r\n            transformed.push(callback(value, key, i, collection))\r\n            i++;\r\n        });\r\n        return transformed\r\n    }\r\n\r\n    add(value: U) {\r\n        //@ts-ignore\r\n        return this.set(value, value)\r\n    }\r\n\r\n    set(key: T, value: U) {\r\n        super.set(key, value)\r\n        this.dispatch();\r\n        return this\r\n    }\r\n\r\n    delete(key: T | U) {\r\n        //@ts-ignore\r\n        if (super.delete(key)) {\r\n            this.dispatch();\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    dispatch() {\r\n        this.subscriptions.forEach(subscription => {\r\n            subscription(this);\r\n        });\r\n    }\r\n\r\n    unsubscribe(subscription: (store: any) => void) {\r\n        this.subscriptions.delete(subscription)\r\n    }\r\n\r\n    subscribe(subscription: (store: any) => void) {\r\n        this.subscriptions.add(subscription);\r\n        subscription(this);\r\n        return () => this.unsubscribe(subscription)\r\n    }\r\n\r\n    update(updater: (store: any) => any) {\r\n\r\n    }\r\n}","import { json, objectify } from \"@utils/json_utils\"\r\nimport { SkillLike } from \"@character/skill/skill\"\r\nimport { CharacterElement } from \"./element\"\r\n\r\nenum DefaultType {\r\n    skill = \"Skill\"\r\n}\r\n\r\nexport abstract class DefaultList {\r\n\r\n}\r\n\r\nexport abstract class Default<T extends SkillLike<any>> extends CharacterElement<T> {\r\n    static keys = [\"type\", \"modifier\"]\r\n    tag = \"default\"\r\n\r\n    type: DefaultType\r\n    modifier: number\r\n\r\n    name?: string\r\n    specialization?: string\r\n\r\n    owner: T\r\n\r\n    constructor(owner: T, keys: string[]) {\r\n        super(owner.character, [...keys, ...Default.keys])\r\n        this.owner = owner;\r\n    }\r\n}","import {\r\n    generateRowID,\r\n    generateUUID\r\n} from \"@utils/2R20\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport { Character } from \"@character/character\";\r\nimport { Featurable } from \"@gcs/gcs\";\r\nimport { Collection } from \"./collection\";\r\nimport { watch, rootWatcher } from \"@character/general/decororators/dynaprops\";\r\n\r\n// @watch(\"reference\", \"userDescription\", \"notes\", \"categories\")\r\n// @rootWatcher\r\nexport abstract class CharacterElement<T extends CharacterElement<T>> {\r\n    static keys = [\"reference\", \"userDescription\", \"notes\", \"categories\"]\r\n    subscriptions: Set<(store: any) => void> = new Set()\r\n\r\n    data: any\r\n\r\n    uuid: string = generateUUID().toString()\r\n    r20rowID: string = generateRowID()\r\n    foundryID: string\r\n\r\n    reference: string\r\n    userDescription: string\r\n    notes: string\r\n    categories: Collection<string, string>\r\n\r\n    character: Character\r\n\r\n    constructor(character: Character, keys: string[]) {\r\n        this.createDataAccessors([...keys, ...CharacterElement.keys]);\r\n        this.data = this.proxy();\r\n\r\n        this.character = character;\r\n        this.character.registerElement(this);\r\n\r\n        this.reference = \"\";\r\n        this.userDescription = \"\";\r\n        this.notes = \"\";\r\n        this.categories = new Collection();\r\n    }\r\n    /**\r\n     * Creates a proxy object that dispatches change events whenever its fields are altered. Changes are only dispatched\r\n     * on assignment, however you can subscribe to collections individually\r\n     */\r\n    private proxy() {\r\n        const _this = this;\r\n        return new Proxy({}, {\r\n            get(target, prop, receiver) {\r\n                if (target[prop] instanceof Collection) {\r\n                    return target[prop].iter()\r\n                }\r\n                return target[prop]\r\n            },\r\n            set(target, prop, value, receiver) {\r\n                if (target[prop] === undefined) {\r\n                    target[prop] = value\r\n                    return true\r\n                }\r\n\r\n                if (target[prop] instanceof Collection) {\r\n                    \r\n                } else if (target[prop] === value) {\r\n\r\n                } else if (target[prop] !== value) {\r\n                    target[prop] = value\r\n                    _this.dispatch();\r\n                }\r\n\r\n                return true\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * Use reflection to forward data accessors to the internal proxy.\r\n     * @keys A list of keys to forward\r\n     */\r\n    private createDataAccessors(keys: string[]) {\r\n        const props = keys.reduce((prev, cur) => {\r\n            if (!prev[cur]) {\r\n                prev[cur] = {\r\n                    set(val) {\r\n                        try {\r\n                            this.data[cur] = val\r\n                        } catch (err) {\r\n\r\n                        }\r\n                    },\r\n                    get() {\r\n                        try {\r\n                            return this.data[cur]\r\n                        } catch (err) {\r\n                            try {\r\n                                return this[cur]\r\n                            } catch (err) {\r\n                                return undefined\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return prev\r\n        }, {});\r\n        Object.defineProperties(this, props)\r\n    }\r\n\r\n    getClass() { return this.constructor }\r\n\r\n    delete() {\r\n        this.character.removeElement(this);\r\n    }\r\n\r\n    getSerializer() { return this.character.serializer }\r\n\r\n    dispatch() {\r\n        this.subscriptions.forEach(subscription => {\r\n            subscription(this);\r\n        });\r\n    }\r\n\r\n    unsubscribe(subscribtion: (store: any) => void) {\r\n        this.subscriptions.delete(subscribtion)\r\n    }\r\n\r\n    subscribe(subscription: (store: any) => void) {\r\n        this.subscriptions.add(subscription);\r\n        subscription(this);\r\n        return () => this.unsubscribe(subscription)\r\n    }\r\n\r\n    update(updater: (store: any) => any) {\r\n\r\n    }\r\n}","import { CharacterElement } from \"./element\";\r\nimport { Featurable } from \"../character\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { SkillLike } from \"@character/skill/skill\";\r\nimport { AttributeBonus } from \"@character/attribute\";\r\nimport { Weapon } from \"@character/weapon\";\r\nimport { StringCompare, stringCompare } from \"@utils/string_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { Collection } from \"./collection\";\r\n\r\nexport class FeatureList {\r\n    features: Collection<string, Feature<Featurable>> = new Collection()\r\n    weapons: Collection<string, Weapon<Featurable>> = new Collection()\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    registerFeature(feature: Feature<Featurable>) {\r\n        this.features.set(feature.uuid, feature);\r\n    }\r\n    removeFeature(uuid: string) {\r\n        this.features.delete(uuid);\r\n    }\r\n    registerWeapon(weapon: Weapon<Featurable>) {\r\n        this.weapons.set(weapon.uuid, weapon);\r\n    }\r\n    removeWeapon(uuid: string) {\r\n        this.weapons.delete(uuid);\r\n    }\r\n    getFeaturesByUUID(id: string) {\r\n        return Array.from(this.features.values()).filter(feature => {\r\n            if (feature.owner.uuid = id) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        });\r\n    }\r\n\r\n    getFeaturesByType<T extends FeatureType>(type: T) {\r\n        return this.features.filter(feature => feature.type === type)\r\n    }\r\n\r\n    empty() {\r\n        this.weapons.clear();\r\n        this.features.clear();\r\n    }\r\n}\r\n\r\nexport abstract class Feature<T extends Featurable> extends CharacterElement<T> {\r\n    static keys = [\"amount\", \"leveled\", \"limitation\", \"type\"]\r\n\r\n    tag = \"feature\"\r\n\r\n    amount: number\r\n    leveled: boolean\r\n    limitation: false | string\r\n    type: FeatureType\r\n\r\n    owner: T\r\n    registered: boolean\r\n\r\n    constructor(owner: T, keys: string[]) {\r\n        super(owner.character, [...keys, ...Feature.keys]);\r\n        this.owner = owner;\r\n        owner.features.add(this);\r\n        this.owner.list.character.featureList.registerFeature(this);\r\n    }\r\n\r\n    getType(): string {\r\n        //@ts-ignore\r\n        return this.constructor.type\r\n    }\r\n\r\n    ownerIsActive(): boolean {\r\n        return this.owner.isActive()\r\n    }\r\n\r\n    getBonus(): number { return this.leveled && this.owner.hasLevels ? this.amount * this.owner.getLevel() : this.amount }\r\n\r\n    unregister() {\r\n        this.owner.list.character.featureList.removeFeature(this.uuid);\r\n    }\r\n    save() {\r\n        return this.getSerializer().transformers.get(this.tag).save(this)\r\n    }\r\n    load(data: any) {\r\n        return this.getSerializer().transformers.get(this.tag).load(this, data)\r\n    }\r\n\r\n    static loadFeature<T extends Featurable>(owner: T, featureType: FeatureType): Feature<T> {\r\n        switch (featureType) {\r\n            case FeatureType.attributeBonus:\r\n                return new AttributeBonus(owner)\r\n            case FeatureType.containedWeightReduction:\r\n                break\r\n            case FeatureType.costReduction:\r\n                break\r\n            case FeatureType.damageResistanceBonus:\r\n                return new DRBonus(owner);\r\n            case FeatureType.reactionBonus:\r\n                break\r\n            case FeatureType.skillBonus:\r\n                return new SkillBonus(owner)\r\n            case FeatureType.spellBonus:\r\n                break\r\n            case FeatureType.weaponDamageBonus:\r\n                break\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n\r\nexport class SkillBonus<T extends Featurable> extends Feature<T> {\r\n    static keys = []\r\n    static type = FeatureType.skillBonus\r\n\r\n    selectionType: string\r\n    nameCompareType: StringCompare\r\n    name: string\r\n    specializationCompareType: StringCompare\r\n    specialization: string\r\n    category: string\r\n    categoryCompareType: StringCompare\r\n\r\n    constructor(owner: T, keys: string[] = []) {\r\n        super(owner, [...keys, ...SkillBonus.keys]);\r\n    }\r\n\r\n    isApplicableTo(skill: SkillLike<any>): boolean {\r\n        let result = false;\r\n\r\n        if (this.nameCompareType) result = stringCompare(this.name, skill.name, this.nameCompareType);\r\n        if (this.specializationCompareType) result = stringCompare(this.specialization, skill.specialization, this.specializationCompareType);\r\n\r\n        return result\r\n    }\r\n}\r\n\r\nexport class DRBonus<T extends Featurable> extends Feature<T> {\r\n    static keys = [\"location\"]\r\n    static type = FeatureType.damageResistanceBonus\r\n\r\n    location: string\r\n\r\n    constructor(owner: T, keys: string[] = []) {\r\n        super(owner, [...keys, ...DRBonus.keys]);\r\n    }\r\n}","import { Character, Featurable } from \"../character\";\r\nimport { CharacterElement } from \"./element\";\r\nimport { Feature } from \"./feature\";\r\nimport { Weapon, MeleeWeapon, RangedWeapon } from \"../weapon\";\r\nimport { objectify, json, isArray } from \"@utils/json_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { Constructor } from \"@character/serialization/serializer\";\r\nimport { Collection } from \"./collection\";\r\n\r\nexport abstract class ListItem<T extends Featurable> extends CharacterElement<T> implements gcs.ListItem<T> {\r\n    static keys = [\"open\", \"listIndex\"]\r\n\r\n    abstract version: number\r\n    abstract tag: string\r\n\r\n    abstract name: string\r\n\r\n    list: List<T>\r\n\r\n    canContainChildren: boolean\r\n    open: boolean = true\r\n\r\n    children: Set<ListItem<T>> = new Set()\r\n    #childIDs: Set<string>\r\n\r\n    isContained: boolean\r\n    containedBy: T\r\n    #containedByID: string\r\n\r\n    features: Set<Feature<T>> = new Set();\r\n    weapons: Set<Weapon<T>> = new Set();\r\n\r\n    listIndex: number\r\n\r\n    constructor(list: List<T>, keys: string[]) {\r\n        super(list.character, [...keys, ...ListItem.keys]);\r\n        this.list = list;\r\n        list.addListItem(this);\r\n        this.canContainChildren = false;\r\n        this.listIndex = this.list.iter().length + 1;\r\n    }\r\n\r\n    abstract isActive(): boolean\r\n\r\n    addFeature() {\r\n\r\n    }\r\n\r\n    addWeapon(type: string = \"melee_weapon\") {\r\n        let weapon: Weapon<T>;\r\n        switch (type) {\r\n            case \"melee_weapon\":\r\n                weapon = new MeleeWeapon(this.findSelf());\r\n                break\r\n            case \"ranged_weapon\":\r\n                weapon = new RangedWeapon(this.findSelf());\r\n                break\r\n            default:\r\n        }\r\n        return weapon || null\r\n    }\r\n\r\n    getListDepth(): number {\r\n        let x = 0;\r\n        let listItem = this.findSelf();\r\n        while (listItem = listItem.containedBy) {\r\n            x++\r\n        }\r\n        return x\r\n    }\r\n\r\n    getCharacter(): Character { return this.list.character }\r\n\r\n    isContainer() { return this.canContainChildren }\r\n    isContainerOpen() { return this.canContainChildren && this.open ? true : false }\r\n    isVisible() {\r\n        if (this.containedBy.isContainerOpen()) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n    previousVisibleSibling() { }\r\n    nextVisibleSibling() { }\r\n    toggle() { if (this.isContainer()) this.open = !this.open; }\r\n    openContainer() { if (this.isContainer()) this.open = true; }\r\n    closeContainer() { if (this.isContainer()) this.open = false; }\r\n    depth() { }\r\n    index() { }\r\n    iterChildren() { return Array.from(this.children) }\r\n\r\n    addChild(child?: T) {\r\n        if (this.isContainer()) {\r\n            if (child) {\r\n                child.containedBy.children.delete(child);\r\n                child.containedBy = this.findSelf();\r\n            } else {\r\n                child = this.list.addListItem();\r\n                child.containedBy = this.findSelf();\r\n            }\r\n        }\r\n        return child\r\n    }\r\n    removeChild(child: string | T) {\r\n        if (typeof child === \"string\") {\r\n            child = this.list.getByUUID(child);\r\n        }\r\n        child.containedBy.children.delete(child);\r\n        this.list.removeListItem(child);\r\n    }\r\n\r\n    getRecursiveChildren() {\r\n        if (this.canContainChildren) {\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n    findSelf(): T {\r\n        return this.list.getByUUID(this.uuid);\r\n    }\r\n    private loadChildren<U>(children: U[], parent: T, loader: (subject: T, data: U) => U[]) {\r\n        children.forEach(child => {\r\n            const subElement = parent.list.addListItem();\r\n            const children = loader(subElement, child);\r\n            subElement.containedBy = parent;\r\n            parent.children.add(subElement);\r\n            subElement.loadChildren(isArray(children), subElement, loader)\r\n        });\r\n    }\r\n    load<U>(data): T {\r\n        const loader = this.getSerializer().transformers.get(this.constructor as Constructor).load;\r\n        const children: U[] = loader(this.findSelf(), data);\r\n        if (children && children.length > 0) {\r\n            this.canContainChildren = true;\r\n            this.loadChildren(children, this.findSelf(), loader)\r\n        }\r\n        return this.findSelf()\r\n    }\r\n    save() {\r\n        return this.getSerializer().transformers.get(this.constructor as Constructor).save(this);\r\n    }\r\n}\r\n\r\nexport abstract class List<T extends Featurable> {\r\n    #contents: Collection<string, T>\r\n    contents: Set<T>\r\n\r\n    loader: (list: List<any>, data: any) => List<any>\r\n    serializer: (list: List<T>) => any\r\n\r\n    character: Character\r\n\r\n    constructor(character: Character) {\r\n        this.character = character;\r\n        this.#contents = new Collection();\r\n        this.contents = new Set();\r\n        this.loader = character.serializer.loadList;\r\n        this.serializer = character.serializer.saveList;\r\n    }\r\n\r\n    get length() { return this.#contents.size }\r\n    get [Symbol.iterator]() { return this.#contents[Symbol.iterator] }\r\n\r\n    abstract populator(data: any): T\r\n\r\n    generate() {\r\n        this.contents.clear();\r\n        this.iter().reduce((prev, cur) => {\r\n            if (!cur.containedBy) prev.add(cur);\r\n            return prev\r\n        }, this.contents);\r\n    }\r\n\r\n    addListItem(item?: T | ListItem<T>, data: any = {}): T {\r\n        let listItem: T;\r\n        if (item) {\r\n            this.#contents.set(item.uuid, item as T);\r\n            listItem = item.findSelf();\r\n        } else {\r\n            listItem = this.populator(data);\r\n        }\r\n        this.generate();\r\n        return listItem\r\n    }\r\n\r\n    removeListItem(item: T) {\r\n        this.#contents.delete(item.uuid);\r\n        this.generate();\r\n    }\r\n\r\n    getByIndex(index: number) {\r\n        return Array.from(this.contents.values())[index]\r\n    }\r\n    getByUUID(uuid: string) {\r\n        return this.#contents.get(uuid);\r\n    }\r\n    getSize() {\r\n        return this.#contents.size\r\n    }\r\n    iter() {\r\n        const contents = this.#contents.iter();\r\n        return contents.sort((a, b) => a.listIndex - b.listIndex)\r\n    }\r\n    iterTop() {\r\n        this.generate();\r\n        return Array.from(this.contents);\r\n    }\r\n    keys() {\r\n        return Array.from(this.contents.keys());\r\n    }\r\n    save() {\r\n        return this.serializer(this)\r\n    }\r\n    load(data: string | json) {\r\n        return this.character.serializer.loadList(this, data as any[])\r\n    }\r\n    empty() {\r\n        this.#contents.clear();\r\n        this.generate();\r\n    }\r\n}\r\n","import { Trait } from \"../trait\"\r\nimport { Equipment } from \"../equipment\"\r\nimport { objectify, json } from \"@utils/json_utils\"\r\nimport { CharacterElement } from \"./element\"\r\nimport { Constructor } from \"@character/serialization/serializer\"\r\n\r\nexport type Modifiable = Trait | Equipment\r\nexport abstract class Modifier<T extends Modifiable> extends CharacterElement<T> {\r\n    static keys = [\"enabled\", \"name\"]\r\n    abstract version: number\r\n    abstract tag: string\r\n\r\n    enabled: boolean = true\r\n    name: string\r\n    owner: T\r\n\r\n    constructor(owner: T, keys: string[]) {\r\n        super(owner.character, [...keys, ...Modifier.keys]);\r\n        this.owner = owner\r\n    }\r\n    save() {\r\n        return this.getSerializer().transformers.get(this.constructor as Constructor).save(this)\r\n    }\r\n    load(data: any) {\r\n        return this.getSerializer().transformers.get(this.constructor as Constructor).load(this, data)\r\n    }\r\n\r\n    /**\r\n     * Utility function for extract numbers from strings with non numerical characters\r\n     * @param value String from which a number is to be extracted.\r\n     */\r\n\r\n    static extractValue(value: string) {\r\n        if (typeof value === \"string\") {\r\n            let numArr = value.match(/(\\d+)/);\r\n            return parseFloat(numArr[0])\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n","import { objectify, json } from \"@utils/json_utils\"\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\nexport class Profile {\r\n    tag = \"profile\"\r\n\r\n    sizeModifier: string = \"\"\r\n    techLevel: string = \"\"\r\n    birthday: string = \"\"\r\n    name: string = \"\"\r\n    eyes: string = \"\"\r\n    skin: string = \"\"\r\n    hair: string = \"\"\r\n    handedness: string = \"\"\r\n    weight: string = \"\"\r\n    height: string = \"\"\r\n    gender: string = \"\"\r\n    race: string = \"\"\r\n    bodyType: string = \"\"\r\n    age: string = \"\"\r\n    portrait: string = \"\"\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    save() {\r\n        let data: any = {\r\n            size_modifier: this.sizeModifier,\r\n            tech_level: this.techLevel,\r\n            birthday: this.birthday,\r\n            name: this.name,\r\n            eyes: this.eyes,\r\n            skin: this.skin,\r\n            hair: this.hair,\r\n            handedness: this.handedness,\r\n            weight: this.weight,\r\n            height: this.height,\r\n            gender: this.gender,\r\n            body_type: this.bodyType,\r\n            age: this.age,\r\n            portrait: this.portrait\r\n        }\r\n        return data\r\n    }\r\n\r\n    load(object: json) {\r\n        object = objectify<gcs.Profile>(object);\r\n        this.sizeModifier = object?.size_modifier ?? \"\";\r\n        this.techLevel = object?.tech_level ?? \"\";\r\n        this.birthday = object?.birthday ?? \"\";\r\n        this.name = object?.name ?? \"\";\r\n        this.eyes = object?.eyes ?? \"\";\r\n        this.skin = object?.skin ?? \"\";\r\n        this.hair = object?.hair ?? \"\";\r\n        this.handedness = object?.handedness ?? \"\";\r\n        this.weight = object?.weight ?? \"\";\r\n        this.height = object?.height ?? \"\";\r\n        this.gender = object?.gender ?? \"\";\r\n        this.race = object?.race ?? \"\";\r\n        this.bodyType = object?.bodyType ?? \"\";\r\n        this.age = object?.age ?? \"\";\r\n        this.portrait = object?.portait ?? \"\";\r\n        return this\r\n    }\r\n}","import { Serializer } from \"./serializer\";\r\nimport { Skill, Difficulty, SkillDefault, SkillLike } from \"../../character/skill/skill\";\r\nimport { Technique, TehchniqueDifficulty } from \"../../character/technique\";\r\nimport { Spell } from \"../../character/spell\";\r\nimport { Equipment, EquipmentModifier } from \"../../character/equipment\";\r\nimport { Trait, TraitType, TraitModifier } from \"../../character/trait\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { isArray, json, objectify } from \"@utils/json_utils\";\r\nimport { Signature, Character, Featurable } from \"@character/character\";\r\nimport { Feature, DRBonus, SkillBonus } from \"@character/misc/feature\";\r\nimport { List, ListItem } from \"@character/misc/list\";\r\nimport { Modifier, Modifiable } from \"@character/misc/modifier\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\nimport { AttributeBonus } from \"@character/attribute\";\r\n\r\nexport class GCSJSON extends Serializer {\r\n    scope = \"GCSJSON\"\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    init() {\r\n        this.\r\n            register(SkillDefault, {\r\n                save: this.saveSkillDefault,\r\n                load: this.mapSkillDefault\r\n            })\r\n            .register(Skill, {\r\n                save: this.saveSkill,\r\n                load: this.mapSkill\r\n            })\r\n            .register(Technique, {\r\n                save: this.saveTechnique,\r\n                load: this.mapTechnique\r\n            })\r\n            .register(Spell, {\r\n                save: this.saveSpell,\r\n                load: this.mapSpell\r\n            })\r\n            .register(Equipment, {\r\n                save: this.saveEquipment,\r\n                load: this.mapEquipment\r\n            })\r\n            .register(Trait, {\r\n                save: this.saveTrait,\r\n                load: this.mapTrait\r\n            })\r\n            .register(\"feature\", {\r\n                save: this.saveFeature,\r\n                load: this.mapFeature\r\n            })\r\n            .register(TraitModifier, {\r\n                save: this.saveModifier,\r\n                load: this.mapModifier\r\n            })\r\n            .register(EquipmentModifier, {\r\n                save: this.saveModifier,\r\n                load: this.mapModifier\r\n            })\r\n            .register(\"weapon\", {\r\n                save: this.saveWeapon,\r\n                load: this.mapWeapon\r\n            })\r\n    }\r\n\r\n    private static saveListLike(listLike: ListItem<any>, data: any) {\r\n        data.children = Array.from(listLike.children).map(listLike => listLike.save());\r\n        data.categories = Array.from(listLike.categories);\r\n        data.reference = listLike.reference;\r\n        data.notes = listLike.notes;\r\n        return data\r\n    }\r\n\r\n    private static mapSkillLike(skillLike: SkillLike<any>, data?: gcs.SkillLike) {\r\n        skillLike.name = data.name;\r\n        skillLike.difficulty = data.difficulty as Difficulty;\r\n        skillLike.points = data.points;\r\n    }\r\n\r\n    mapSkillDefault(skillDefault: SkillDefault<any>, data: any) {\r\n        return skillDefault\r\n    }\r\n\r\n    saveSkillDefault(skillDefault: SkillDefault<any>) {\r\n        let data: any = {\r\n\r\n        }\r\n        return data\r\n    }\r\n\r\n    mapSkill(skill: Skill, data?: gcs.Skill) {\r\n        GCSJSON.mapSkillLike(skill, data);\r\n        skill.difficulty = data.difficulty?.split(\"/\")[1] as Difficulty;\r\n        skill.signature = data.difficulty?.split(\"/\")[0] as Signature;\r\n        skill.techLevel = data.tech_level ?? \"\";\r\n        if (data.encumbrance_penalty_multiplier) skill.encumbrancePenaltyMultiple = data.encumbrance_penalty_multiplier;\r\n        if (data.defaulted_from) skill.defaultedFrom = new SkillDefault<Skill>(skill).load(data.defaulted_from);\r\n        isArray(data.defaults)?.forEach((skillDefault: json) => skill.addDefault().load(skillDefault));\r\n\r\n        if (data && data.type?.includes(\"_container\")) {\r\n            return data.children as gcs.Skill[]\r\n        }\r\n    }\r\n    saveSkill(skill: Skill): any {\r\n        let data = {\r\n            type: \"skill\",\r\n            version: 1,\r\n            name: skill.name,\r\n            difficulty: skill.difficulty,\r\n            points: skill.points,\r\n            // prereqs: {},\r\n        };\r\n        GCSJSON.saveListLike(skill, data);\r\n        return data\r\n    }\r\n\r\n    mapTechnique(technique: Technique, data?: gcs.Technique) {\r\n        this.mapSkill(technique, data)\r\n        technique.limit = data.limit;\r\n        technique.difficulty = data.difficulty as TehchniqueDifficulty;\r\n        technique.default = new SkillDefault<Technique>(technique).load(data.default) as SkillDefault<Technique>;\r\n        return null\r\n    }\r\n    saveTechnique(technique: Technique): any {\r\n\r\n    }\r\n\r\n    mapSpell(spell: Spell, data?: gcs.Spell) {\r\n        GCSJSON.mapSkillLike(spell, data);\r\n        spell.college = data.college;\r\n        spell.powerSource = data.power_source;\r\n        spell.spellClass = data.spell_class;\r\n        spell.castingCost = data.casting_cost;\r\n        spell.maintenanceCost = data.maintenance_cost;\r\n        spell.castingTime = data.casting_time;\r\n        spell.duration = data.duration;\r\n\r\n        if (data && data.type?.includes(\"_container\")) {\r\n            return data.children as json[]\r\n        }\r\n    }\r\n    saveSpell(spell: Spell): any {\r\n\r\n    }\r\n\r\n    mapEquipment(equipment: Equipment, data?: gcs.Equipment) {\r\n        isArray(data?.modifiers)?.forEach((modifier: json) => equipment.addModifier().load(modifier));\r\n        equipment.description = data.description;\r\n        equipment.equipped = data.equipped;\r\n        equipment.quantity = data.quantity;\r\n        equipment.value = parseFloat(data?.value);\r\n        equipment.weight = parseFloat(data?.weight?.split(\" \")[0] ?? \"0\");\r\n        equipment.techLevel = data.tech_level;\r\n        equipment.legalityClass = data.legality_class;\r\n        equipment.containedWeightReduction = isArray(data?.features)?.find(feature => feature.type === \"contained_weight_reduction\")?.reduction ?? null;\r\n        data.features?.forEach((feature: json) => {\r\n            Feature.loadFeature<Equipment>(equipment, feature.type)?.load(feature)\r\n        });\r\n\r\n        if (data && data.type?.includes(\"_container\")) {\r\n            return data?.children as gcs.Equipment[] || null\r\n        }\r\n    }\r\n    saveEquipment(equipment: Equipment): any {\r\n        let data = {\r\n            type: \"equipment\",\r\n            version: 1,\r\n            equipped: equipment.equipped,\r\n            quantity: equipment.quantity,\r\n            description: equipment.description,\r\n            value: equipment.toString(),\r\n            weight: `${equipment.weight} lb`,\r\n            reference: equipment.reference,\r\n            notes: equipment.notes,\r\n            categories: Array.from(equipment.categories)\r\n        };\r\n        GCSJSON.saveListLike(equipment, data);\r\n        return data\r\n    }\r\n\r\n    mapTrait(trait: Trait, data?: json) {\r\n        trait.name = data.name;\r\n        data.modifiers?.forEach((modifier: json) => trait.addModifier().load(modifier));\r\n        trait.basePoints = data.base_points;\r\n        trait.levels = parseInt(data?.levels) ?? null;\r\n        trait.allowHalfLevels = data.allow_half_levels;\r\n        trait.hasHalfLevel = data.has_half_level;\r\n        trait.roundDown = data.round_down;\r\n        trait.controlRating = data.cr;\r\n        data.types?.forEach((type: TraitType) => trait.types.add(type));\r\n        trait.pointsPerLevel = data.points_per_level;\r\n        trait.disabled = data.disabled;\r\n        trait.hasLevels = trait.levels ? true : false;\r\n\r\n        data.features?.forEach((feature: json) => {\r\n            Feature.loadFeature<Trait>(trait, feature.type)?.load(feature)\r\n        });\r\n\r\n        if (data && data.type?.includes(\"_container\")) {\r\n            return data.children as json[]\r\n        }\r\n    }\r\n    saveTrait(trait: Trait): any {\r\n        let data: any = {\r\n            type: \"advantage\",\r\n            version: 1,\r\n            name: trait.name,\r\n\r\n            base_points: trait.basePoints,\r\n            reference: trait.reference,\r\n            categories: Array.from(trait.categories),\r\n            modifiers: Array.from(trait.modifiers).map(trait => trait.save())\r\n        }\r\n        GCSJSON.saveListLike(trait, data);\r\n        return data\r\n    }\r\n\r\n    mapFeature(feature: Feature<Featurable>, data: json) {\r\n        feature.type = data.type;\r\n\r\n        feature.leveled = data.per_level;\r\n        feature.limitation = data.limitation;\r\n        feature.amount = data.amount;\r\n\r\n        switch (data.type) {\r\n            case FeatureType.attributeBonus:\r\n                if (feature instanceof AttributeBonus) {\r\n                    feature.attribute = data.attribute;\r\n                }\r\n                break\r\n            case FeatureType.damageResistanceBonus:\r\n                if (feature instanceof DRBonus) {\r\n                    feature.location = data.location;\r\n                }\r\n                break\r\n            case FeatureType.reactionBonus:\r\n                break\r\n            case FeatureType.skillBonus:\r\n                if (feature instanceof SkillBonus) {\r\n                    feature.selectionType = data.selection_type;\r\n                    feature.nameCompareType = data.name?.compare;\r\n                    feature.name = data.name?.qualifier;\r\n                    feature.specializationCompareType = data.specialization?.compare;\r\n                    feature.specialization = data.specialization?.qualifier;\r\n                    feature.categoryCompareType = data?.category?.compare;\r\n                    feature.category = data?.category?.qualifier;\r\n                }\r\n                break\r\n            case FeatureType.spellBonus:\r\n                break\r\n            case FeatureType.weaponDamageBonus:\r\n                break\r\n            default:\r\n        }\r\n        return feature\r\n    }\r\n\r\n    saveFeature(feature: Feature<Featurable>) {\r\n        let data: any = {\r\n\r\n        };\r\n        switch (feature.type) {\r\n\r\n        }\r\n        return data\r\n    }\r\n\r\n    mapModifier(modifier: Modifier<Modifiable>, data: json) {\r\n        modifier.enabled = data.enabled;\r\n        modifier.name = data.name;\r\n        modifier.notes = data.notes;\r\n        modifier.reference = data.reference;\r\n        switch (modifier.tag) {\r\n            case \"modifier\":\r\n                if (modifier instanceof TraitModifier) {\r\n                    modifier.cost = data.cost;\r\n                    modifier.type = data.type;\r\n                    modifier.affects = data.affects;\r\n                    modifier.levels = data.levels;\r\n                }\r\n            case \"eqp_modifier\":\r\n                if (modifier instanceof EquipmentModifier) {\r\n                    modifier.cost = data.cost;\r\n                    modifier.weight = data.weight;\r\n                    modifier.costType = data.cost_type;\r\n                    modifier.weightType = data.weight_type;\r\n                }\r\n        }\r\n        return modifier\r\n    }\r\n\r\n    saveModifier(modifier: Modifier<Modifiable>) {\r\n        let data: any = {\r\n            enabled: modifier.enabled,\r\n            name: modifier.name\r\n        }\r\n        switch (modifier.tag) {\r\n            case \"modifier\":\r\n                if (modifier instanceof TraitModifier) {\r\n                    Object.assign(data, {\r\n                        cost: modifier.cost,\r\n                        type: modifier.type,\r\n                        affects: modifier.affects,\r\n                        levels: modifier.levels\r\n                    });\r\n                }\r\n            case \"eqp_modifier\":\r\n                if (modifier instanceof EquipmentModifier) {\r\n                    Object.assign(data, {\r\n                        cost: modifier.cost,\r\n                        weight: modifier.weight,\r\n                        cost_type: modifier.costType,\r\n                        weight_type: modifier.weightType\r\n                    });\r\n                }\r\n        }\r\n        return data\r\n    }\r\n\r\n    mapWeapon() {\r\n\r\n    }\r\n\r\n    saveWeapon() {\r\n\r\n    }\r\n\r\n    loadList(list: List<any>, data: any[]) {\r\n        data = objectify<json[]>(data);\r\n        if (data) {\r\n            data.forEach(listItem => {\r\n                const item = list.populator(data);\r\n                item.load(listItem);\r\n            });\r\n        }\r\n        list.generate();\r\n        return list\r\n    }\r\n    saveList(list: List<Featurable>) {\r\n        return list.iterTop().map(root => root.save())\r\n    }\r\n\r\n    load(character: Character, data: any) {\r\n        data = objectify<json>(data);\r\n        character.gCalcID = data.id;\r\n\r\n        character.profile.load(data.profile);\r\n        character.equipmentList.load(data.equipment);\r\n        character.otherEquipmentList.load(data.other_equipment);\r\n        character.skillList.load(data.skills);\r\n        character.traitList.load(data.advantages);\r\n        character.spellList.load(data.spells);\r\n\r\n        character.missingHP = data?.hp_damage ?? 0;\r\n        character.missingFP = data?.fp_damage ?? 0;\r\n\r\n        character.getAttribute(Signature.DX).setLevel(data.DX);\r\n        character.getAttribute(Signature.FP).setLevel(data.fp_adj);\r\n        character.getAttribute(Signature.HP).setLevel(data.hp_adj);\r\n        character.getAttribute(Signature.HT).setLevel(data.HT);\r\n        character.getAttribute(Signature.IQ).setLevel(data.IQ)\r\n        character.getAttribute(Signature.Move).setLevel(data.move_adj);\r\n        character.getAttribute(Signature.Per).setLevel(data.per_adj);\r\n        character.getAttribute(Signature.ST).setLevel(data.ST);\r\n        character.getAttribute(Signature.Speed).setLevel(data.speed_adj);\r\n        character.getAttribute(Signature.Will).setLevel(data.will_adj);\r\n\r\n        return character\r\n    }\r\n    save(character: Character): any {\r\n        let output = {\r\n            DX: character.getAttribute(Signature.DX).level,\r\n            fp_adj: character.getAttribute(Signature.FP).level,\r\n            hp_adj: character.getAttribute(Signature.HP).level,\r\n            HT: character.getAttribute(Signature.HT).level,\r\n            IQ: character.getAttribute(Signature.IQ).level,\r\n            move_adj: character.getAttribute(Signature.Move).level,\r\n            per_adj: character.getAttribute(Signature.Per).level,\r\n            ST: character.getAttribute(Signature.ST).level,\r\n            speed_adj: character.getAttribute(Signature.Speed).level,\r\n            will_adj: character.getAttribute(Signature.Will).level,\r\n\r\n            hp_damage: character.missingHP,\r\n            fp_damage: character.missingFP,\r\n\r\n            profile: character.profile.save(),\r\n\r\n            equipment: character.equipmentList.save(),\r\n            other_equipment: character.otherEquipmentList.save(),\r\n            skills: character.skillList.save(),\r\n            advantages: character.traitList.save()\r\n        }\r\n        GCSJSON.purgeObject(output);\r\n        return JSON.stringify(output)\r\n    }\r\n}\r\n","import { Skill } from \"../skill/skill\";\r\nimport { Technique } from \"../technique\";\r\nimport { Spell } from \"../spell\";\r\nimport { Equipment } from \"../equipment\";\r\nimport { Trait } from \"../trait\";\r\nimport { Character, Feature, SkillDefault } from \"index\";\r\nimport { List } from \"@character/misc/list\";\r\nimport { Featurable } from \"@gcs/gcs\";\r\nimport { Modifier } from \"@character/misc/modifier\";\r\n\r\n/**\r\n * Abstract class from which all serializers draw functionality. It covers loading and saving functionality\r\n * by allowing a function to write data from an arbitrary external source. A loader is defined as the \r\n * following: A function that exposes the interal object you load into which will return the children that need to \r\n * be loaded next. The loader will stop loading when your function does not return a non-zero length array.\r\n */\r\n\r\nexport type Constructor<T = {}> = new (...arger: any[]) => T;\r\nexport abstract class Serializer {\r\n    abstract scope: string\r\n    transformers: Map<Constructor | string, { save: any, load: any }>\r\n\r\n    constructor() {\r\n        this.transformers = new Map();\r\n        this.init();\r\n    }\r\n\r\n    static purgeObject(object: any) {\r\n        object.keys.forEach(key => {\r\n            const data = object[key];\r\n            if (data === undefined || data === null) delete object[key];\r\n            if (Array.isArray(data)) data.forEach(data => Serializer.purgeObject(data));\r\n            if (Object.keys(data).length > 0) Serializer.purgeObject(data);\r\n        });\r\n        return object\r\n    }\r\n\r\n    abstract init(): void\r\n\r\n    register(key: Constructor | string, transformer: { save: any, load: any }) {\r\n        this.transformers.set(key, transformer)\r\n        return this\r\n    }\r\n\r\n    static reverseMap(input: string) {\r\n        Object.keys(input)\r\n    }\r\n\r\n    abstract loadList(list: List<any>, data: any[]): List<any>\r\n    abstract saveList(list: List<any>): any\r\n\r\n    abstract load(character: Character, data: any): Character\r\n    abstract save(character: Character): any\r\n}","import { Difficulty, SkillDefault, SkillLike } from \"./skill\";\r\n\r\n/**\r\n * Pure function responsible for determining final skill level.\r\n * @param difficulty \r\n * @param points \r\n * @param base \r\n * @param defaultedFrom \r\n * @param bonus \r\n * @param encumbranceLevel \r\n * @param encPenaltyMult\r\n * @returns The final calculated skill level.\r\n */\r\n\r\nexport function calculateSkillLevel(\r\n    difficulty: Difficulty,\r\n    points: number,\r\n    base: number = 10,\r\n    defaultedFrom?: SkillDefault<SkillLike<any>>,\r\n    bonus = 0,\r\n    encumbranceLevel = 0,\r\n    encPenaltyMult = 1,\r\n    gMod = 0\r\n) {\r\n    let relativeLevel = SkillLike.getBaseRelativeLevel(difficulty);\r\n    let level = base;\r\n    if (level !== Number.NEGATIVE_INFINITY) {\r\n        if (difficulty === Difficulty.wildcard) {\r\n            points /= 3;\r\n        } else {\r\n            if (defaultedFrom && defaultedFrom.points > 0) {\r\n                points += defaultedFrom.points;\r\n            }\r\n        }\r\n        if (points > 0) {\r\n            relativeLevel = SkillLike.calculateRelativeLevel(points, relativeLevel);\r\n        } else if (defaultedFrom && defaultedFrom.points < 0) {\r\n            relativeLevel = defaultedFrom.adjustedLevel - level;\r\n        } else {\r\n            level = Number.NEGATIVE_INFINITY;\r\n            relativeLevel = 0;\r\n        }\r\n        if (level !== Number.NEGATIVE_INFINITY) {\r\n            level += relativeLevel;\r\n            if (defaultedFrom) {\r\n                if (level < defaultedFrom.adjustedLevel) {\r\n                    level = defaultedFrom.adjustedLevel;\r\n                }\r\n            }\r\n            const encumbrancePenalty = encumbranceLevel * encPenaltyMult;\r\n            level += bonus + encumbrancePenalty;\r\n            relativeLevel += bonus + encumbrancePenalty;\r\n        }\r\n    }\r\n    return level + gMod;\r\n}","import { Signature, Character, Featurable } from \"../character\";\r\nimport { List, ListItem } from \"../misc/list\";\r\nimport { Feature, SkillBonus } from \"../misc/feature\";\r\nimport { StringCompare, stringCompare } from \"utils/string_utils\";\r\nimport { objectify, json, isArray } from \"@utils/json_utils\";\r\nimport { Default } from \"../misc/default\";\r\nimport * as gcs from \"@gcs/gcs\";\r\nimport { Constructor } from \"../serialization/serializer\";\r\nimport { calculateSkillLevel } from \"./logic\";\r\n\r\n\r\nexport class SkillList extends List<Skill> {\r\n\r\n    constructor(character: Character) {\r\n        super(character);\r\n    }\r\n\r\n    populator(data: any) {\r\n        return new Skill(this, [], data.isTechnique);\r\n    }\r\n\r\n    sumSkills() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            return prev + cur.points\r\n        }, 0);\r\n    }\r\n}\r\n\r\n/**\r\n * Skill-like entities are those that need to have a level calculated like the general skills in basic set (e.g Spells) but are not \r\n * necessarily a generic basic set skill. This class is not meant to be instantiated directly but provides the core logic for determining\r\n * final skill levels.\r\n * \r\n * @param name\r\n * @param difficulty\r\n * @param points\r\n * @param specialization\r\n * \r\n * @override @param hasLevels Skill-like entities do not support the idea of level bases bonuses \r\n * @todo Skill-like entities could provide bonuses based on their relative skill level (e.g +1 to strength per relative skill level above 2)\r\n * \r\n * @method getBonus\r\n */\r\nexport abstract class SkillLike<T extends SkillLike<T>> extends ListItem<T>  {\r\n    abstract type: \"skill\" | \"skill_container\" | \"spell\" | \"spell_container\" | \"technique\"\r\n    static keys = [\"name\", \"difficulty\", \"points\", \"specialization\", \"gMod\"]\r\n\r\n    name: string\r\n    difficulty: Difficulty\r\n    points: number\r\n    specialization: string\r\n    gMod: number = 0\r\n\r\n    abstract defaults: Set<SkillDefault<SkillLike<any>>>\r\n    abstract defaultedFrom: SkillDefault<SkillLike<any>>\r\n    abstract signature: Signature\r\n    abstract encumbrancePenaltyMultiple: number\r\n\r\n    hasLevels = false\r\n\r\n    constructor(list: List<T>, keys: string[]) {\r\n        super(list, [...keys, ...SkillLike.keys]);\r\n    }\r\n\r\n    /**\r\n     * @returns A bonus to be applied to {@calculateLevel} that must be implemented by classes that inherit from this one.\r\n     */\r\n    abstract getBonus(): number\r\n\r\n    /**\r\n     * @override Skill-like entities do not provide leveled feature bonuses.\r\n     */\r\n    getLevel(): number { return null }\r\n\r\n    getBaseRelativeLevel() { return SkillLike.getBaseRelativeLevel(this.difficulty) }\r\n    static getBaseRelativeLevel(difficulty: Difficulty) {\r\n        switch (difficulty) {\r\n            case Difficulty.easy:\r\n                return 0\r\n            case Difficulty.average:\r\n                return -1\r\n            case Difficulty.hard:\r\n                return -2\r\n            case Difficulty.very_hard:\r\n                return -3\r\n            case Difficulty.wildcard:\r\n                return -3\r\n        }\r\n    }\r\n\r\n    static calculateRelativeLevel(points: number, relativeLevel: number) {\r\n        if (points === 1) {\r\n\r\n        } else if (points < 4) {\r\n            relativeLevel++;\r\n        } else {\r\n            relativeLevel += 1 + points / 4;\r\n        }\r\n        return relativeLevel\r\n    }\r\n\r\n    calculateLevel(): number {\r\n        return calculateSkillLevel(\r\n            this.difficulty,\r\n            this.points,\r\n            this.list.character.getAttribute(this.signature)?.calculateLevel(),\r\n            this.defaultedFrom,\r\n            this.getBonus(),\r\n            this.list.character.encumbranceLevel(),\r\n            this.encumbrancePenaltyMultiple,\r\n            this.gMod\r\n        )\r\n    }\r\n\r\n    static getBestDefaultWithPoints<T extends SkillLike<T>>\r\n        (\r\n            character: Character,\r\n            skill: T,\r\n            defaults: Set<SkillDefault<T>>\r\n        ): SkillDefault<T> {\r\n        let best = SkillLike.getBestDefault(character, defaults);\r\n        if (best !== null) {\r\n            let baseLine = character.getAttribute(skill.signature).calculateLevel() + SkillLike.getBaseRelativeLevel(skill.difficulty);\r\n            let level = best.level;\r\n            best.adjustedLevel = level;\r\n            if (level === baseLine) {\r\n                best.points = 1;\r\n            } else if (level === baseLine + 1) {\r\n                best.points = 2;\r\n            } else if (level > baseLine + 1) {\r\n                best.points = 4 * (level - (baseLine + 1));\r\n            } else {\r\n                level = best.level;\r\n                if (level < 0) {\r\n                    level = 0;\r\n                }\r\n                best.points = -level;\r\n            }\r\n        }\r\n        return best\r\n    }\r\n    static getBestDefault<T extends SkillLike<T>>\r\n        (\r\n            character: Character,\r\n            defaults: Set<SkillDefault<T>>,\r\n    ) {\r\n        if (character) {\r\n            if (defaults.size > 0) {\r\n                let best: number = Number.NEGATIVE_INFINITY;\r\n                let bestSkill: SkillDefault<T>;\r\n                defaults.forEach(skillDefault => {\r\n                    if (true) {\r\n                        if (skillDefault.isSkillBased()) {\r\n                            var skill = skillDefault.getSkillsNamedFrom(skillDefault.owner.list).highest;\r\n                            var level = SkillLike.calculateRelativeLevel(skill.points, skill.getBaseRelativeLevel());\r\n                        }\r\n                        if (level > best) {\r\n                            best = level;\r\n                            bestSkill = skillDefault;\r\n                            bestSkill.level = level\r\n                        }\r\n                    }\r\n                })\r\n                return bestSkill\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    canSwapDefaults(skill: SkillLike<T>, defaults: Set<SkillDefault<T>>) {\r\n        let result = false;\r\n        if (this.defaultedFrom !== null && this.points > 0) {\r\n            if (skill !== null && skill.hasDefaultTo(this, defaults)) {\r\n                result = true;\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    hasDefaultTo(skill: SkillLike<T>, defaults: Set<SkillDefault<T>>) {\r\n        let result = false;\r\n        defaults.forEach(skillDefault => {\r\n            let skillBased = skillDefault.isSkillBased();\r\n            let nameMatches = skillDefault.name === skill.name;\r\n            let specializationMatches = skillDefault.specialization === skill.specialization;\r\n            if (skillBased && nameMatches && specializationMatches) {\r\n                result = true;\r\n            }\r\n        });\r\n        return result\r\n    }\r\n    swapDefault(skill: SkillLike<T>, defaults: Set<SkillDefault<T>>) {\r\n        let extraPointsSpent = 0;\r\n        let baseSkill = this.defaultedFrom.getSkillsNamedFrom(this.list);\r\n        if (baseSkill !== null) {\r\n            this.defaultedFrom = SkillLike.getBestDefaultWithPoints<T>(\r\n                this.list.character,\r\n                skill.findSelf(),\r\n                defaults\r\n            );\r\n        }\r\n        return extraPointsSpent\r\n    }\r\n}\r\n\r\nexport class Skill extends SkillLike<Skill> {\r\n    static keys = [\"signature\", \"techLevel\", \"defaults\", \"defaultedFrom\", \"encumbrancePenaltyMultiple\"]\r\n    version = 1\r\n    tag = \"skill\"\r\n    type: \"skill\" | \"skill_container\"\r\n\r\n    signature: Signature\r\n    techLevel: string\r\n    defaults: Set<SkillDefault<SkillLike<any>>> = new Set()\r\n    defaultedFrom: SkillDefault<SkillLike<any>>\r\n    encumbrancePenaltyMultiple: number = 0\r\n\r\n    isTechnique: boolean = false\r\n\r\n    constructor(list: List<Skill>, keys: string[] = [], isTechnique = false) {\r\n        super(list, [...keys, ...Skill.keys]);\r\n        this.isTechnique = false;\r\n    }\r\n    isActive() { return true }\r\n    childrenPoints() {\r\n        return this.iterChildren().reduce((prev, cur) => {\r\n            if (cur.canContainChildren) {\r\n                prev += cur.findSelf().childrenPoints();\r\n            } else {\r\n                prev += cur.findSelf().points;\r\n            }\r\n            return prev\r\n        }, 0)\r\n    }\r\n\r\n    getBonus(): any {\r\n        return this.list.character.featureList.getFeaturesByType(gcs.FeatureType.skillBonus).reduce(\r\n            (prev, cur) => {\r\n                if (cur instanceof SkillBonus && cur.type === gcs.FeatureType.skillBonus && cur.isApplicableTo(this) && cur.ownerIsActive()) {\r\n                    prev += cur.getBonus();\r\n                }\r\n                return prev\r\n            }, 0)\r\n    }\r\n\r\n    toString() {\r\n        let string = \"\";\r\n        string += this.name;\r\n        if (!this.isContainer()) {\r\n            if (Boolean(this.techLevel)) {\r\n                string += \"/TL\"\r\n                string += this.techLevel;\r\n            }\r\n            if (Boolean(this.specialization)) {\r\n                string += ` (${this.specialization})`;\r\n            }\r\n        }\r\n        return string\r\n    }\r\n    addDefault(): SkillDefault<Skill> {\r\n        const newDefault = new SkillDefault(this);\r\n        return newDefault\r\n    }\r\n    toR20() {\r\n        return {\r\n            key: \"repeating_skills\",\r\n            row_id: this.r20rowID,\r\n            data: {\r\n                name: this.toString(),\r\n                base: (() => {\r\n                    switch (this.signature) {\r\n                        case Signature.ST: return \"@{strength}\"\r\n                        case Signature.DX: return \"@{dexterity}\"\r\n                        case Signature.IQ: return \"@{intelligence}\"\r\n                        case Signature.HT: return \"@{health}\"\r\n                        case Signature.Per: return \"@{perception}\"\r\n                        case Signature.Will: return \"@{willpower}\"\r\n                        case Signature.Base: return 10\r\n                    }\r\n                })(),\r\n                difficulty: (() => {\r\n                    switch (this.difficulty) {\r\n                        case Difficulty.easy: return -1\r\n                        case Difficulty.average: return -2\r\n                        case Difficulty.hard: return -3\r\n                        case Difficulty.very_hard: return -4\r\n                        case Difficulty.wildcard: return \"-5 + 1\"\r\n                    }\r\n                })(),\r\n                bonus: this.getBonus(),\r\n                points: this.points,\r\n                wildcard_skill_points: this.points / 3,\r\n                use_wildcard_points: this.difficulty === Difficulty.wildcard ? 1 : 0,\r\n                use_normal_points: this.difficulty !== Difficulty.wildcard ? 0 : 1,\r\n                skill_points: this.points,\r\n                ref: this.reference,\r\n                notes: this.notes\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class SkillDefault<T extends SkillLike<any>> extends Default<T> {\r\n    static keys = [\"level\", \"adjustedLevel\", \"points\"]\r\n    tag = \"default\"\r\n    level: number\r\n    adjustedLevel: number\r\n    points: number\r\n\r\n    constructor(skill: T, keys: string[] = []) {\r\n        super(skill, [...keys, ...SkillDefault.keys]);\r\n        this.owner.defaults.add(this);\r\n    }\r\n\r\n    isSkillBased() {\r\n        return this.type === Signature.Base.toString()\r\n    }\r\n    getSkillsNamedFrom(list: List<T>) {\r\n        const skills = list.iter().filter(skill => {\r\n            return this.name === skill.name && this.specialization === skill.specialization\r\n        });\r\n        const highest = skills.reduce((prev, cur) => {\r\n            if (SkillLike.calculateRelativeLevel(prev.points, 10) > SkillLike.calculateRelativeLevel(cur.points, 10)) {\r\n                return prev\r\n            } else {\r\n                return cur\r\n            }\r\n        });\r\n        return {\r\n            skills,\r\n            highest\r\n        }\r\n    }\r\n    save() { return this.getSerializer().transformers.get(this.constructor as Constructor).save(this) }\r\n    load(data: any) { return this.getSerializer().transformers.get(this.constructor as Constructor).load(this, data) }\r\n}\r\n\r\nexport enum Difficulty {\r\n    easy = \"E\",\r\n    average = \"A\",\r\n    hard = \"H\",\r\n    very_hard = \"VH\",\r\n    wildcard = \"W\"\r\n}","import { SkillLike, SkillDefault, Difficulty } from \"./skill/skill\";\r\nimport { List } from \"./misc/list\";\r\nimport { Character, Signature } from \"./character\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\n\r\nexport class SpellList extends List<Spell> {\r\n    constructor(character: Character) {\r\n        super(character);\r\n    }\r\n\r\n    populator(data: any) {\r\n        return new Spell(this)\r\n    }\r\n\r\n    sumSpells() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            return prev + cur.points\r\n        }, 0);\r\n    }\r\n}\r\n\r\nexport class Spell extends SkillLike<Spell> {\r\n    static keys = [\r\n        \"college\",\r\n        \"class\",\r\n        \"resist\",\r\n        \"powerSource\",\r\n        \"spellClass\",\r\n        \"castingCost\",\r\n        \"maintenanceCost\",\r\n        \"castingTime\",\r\n        \"duration\",\r\n        \"difficulty\",\r\n        \"signature\",\r\n        \"defaults\",\r\n        \"defaultedFrom\",\r\n        \"encumbrancePenaltyMultiple\"]\r\n    version = 1\r\n    tag = \"spell\"\r\n    type: \"spell\" | \"spell_container\"\r\n\r\n    college: string\r\n    class: string\r\n    resist: string\r\n    powerSource: string\r\n    spellClass: string\r\n    castingCost: string\r\n    maintenanceCost: string\r\n    castingTime: string\r\n    duration: string\r\n\r\n    difficulty: Difficulty = Difficulty.hard\r\n\r\n    signature: Signature = Signature.IQ\r\n    defaults: Set<SkillDefault<SkillLike<any>>>\r\n    defaultedFrom: SkillDefault<SkillLike<any>> = null\r\n    encumbrancePenaltyMultiple: number = null;\r\n\r\n    constructor(list: List<Spell>, keys: string[] = []) {\r\n        super(list, [...keys, ...Spell.keys])\r\n    }\r\n\r\n    isActive() { return true }\r\n    getBonus() {\r\n        return 0\r\n    }\r\n}","import { Skill, SkillDefault, Difficulty, SkillLike } from \"./skill/skill\";\r\nimport { Signature } from \"./character\";\r\nimport { List } from \"./misc/list\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\nexport type TehchniqueDifficulty = Difficulty.average | Difficulty.hard\r\nexport class Technique extends Skill {\r\n    static keys = [\"limit\", \"default\"]\r\n    tag = \"technique\"\r\n\r\n    limit: number\r\n    difficulty: TehchniqueDifficulty = Difficulty.average\r\n\r\n    defaults: Set<SkillDefault<SkillLike<any>>> = null\r\n\r\n    default: SkillDefault<Skill>\r\n    defaultedFrom: SkillDefault<SkillLike<any>> = null\r\n\r\n    isTechnique: boolean = true\r\n\r\n    constructor(list: List<Skill>, keys: string[] = []) {\r\n        super(list, [...keys, ...Technique.keys]);\r\n    }\r\n\r\n    get signature(): Signature { return null }\r\n\r\n    getBonus() {\r\n        return 0\r\n    }\r\n\r\n    calculateLevel(): number {\r\n        const techniqueDefault = this.default;\r\n        const character = this.list.character;\r\n        let relativeLevel = 0;\r\n        let points = this.points;\r\n        let level = Number.NEGATIVE_INFINITY;\r\n        if (character != null) {\r\n            level = this.getBaseLevel(techniqueDefault, null);\r\n            if (level !== Number.NEGATIVE_INFINITY) {\r\n                let baseLevel = level;\r\n                level += techniqueDefault.modifier;\r\n                if (this.difficulty === Difficulty.hard) {\r\n                    points--;\r\n                }\r\n                if (points > 0) {\r\n                    relativeLevel = points;\r\n                }\r\n                if (level !== Number.NEGATIVE_INFINITY) {\r\n\r\n                    level += relativeLevel;\r\n                }\r\n                if (Boolean(this.limit)) {\r\n                    let max = baseLevel + this.limit;\r\n                    if (level > max) {\r\n                        relativeLevel -= level - max;\r\n                        level = max;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return level\r\n    }\r\n    getBaseLevel(def: SkillDefault<Skill>, requirePoints: boolean) {\r\n        const character = this.list.character;\r\n        if (def.type === \"Skill\") {\r\n            let skill = def.getSkillsNamedFrom(this.list).highest;\r\n            return skill !== null ? skill.calculateLevel() : Number.NEGATIVE_INFINITY\r\n        }\r\n    }\r\n    getRelativeLevel() {\r\n        const relativeTo = this.default.getSkillsNamedFrom(this.list).highest;\r\n        console.log(this.name, relativeTo.name, relativeTo.calculateLevel());\r\n        return this.calculateLevel() - relativeTo.calculateLevel()\r\n    }\r\n    toR20(): any {\r\n        const link = this.default.isSkillBased() ? this.default.getSkillsNamedFrom(this.list).highest : null\r\n        return {\r\n            key: \"repeating_techniquesrevised\",\r\n            row_id: this.r20rowID,\r\n            data: {\r\n                name: this.name,\r\n                parent: this.default.name,\r\n                default: this.default.modifier,\r\n                skill_modifier: 0,\r\n                points: this.points,\r\n                ref: this.reference,\r\n                notes: this.notes,\r\n                technique_row_type: link ? \"Skill\" : \"10\",\r\n                technique_skill_row_id: link ? link.uuid : \"\",\r\n            }\r\n        }\r\n    }\r\n}","import { Modifier } from \"./misc/modifier\";\r\nimport { List, ListItem } from \"./misc/list\";\r\nimport { Character } from \"./character\";\r\nimport { json, objectify } from \"@utils/json_utils\";\r\nimport { Feature } from \"./misc/feature\";\r\nimport * as gcs from \"@gcs/gcs\";\r\n\r\n\r\nexport class TraitList extends List<Trait> {\r\n    constructor(character: Character) {\r\n        super(character);\r\n    }\r\n\r\n    populator(data: any) {\r\n        return new Trait(this)\r\n    }\r\n\r\n    sumRacials() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n    sumAdvantages() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) return prev\r\n            if (cur.categories.has(\"Advantage\") || cur.categories.has(\"Perk\") || cur.adjustedPoints() >= 1) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n    sumDisadvantages() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) return prev\r\n            if (cur.categories.has(\"Disadvantage\") || cur.adjustedPoints() < -1) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n    sumQuirks() {\r\n        return this.iter().reduce((prev, cur) => {\r\n            if (cur.isRacial()) return prev\r\n            if (cur.categories.has(\"Quirk\") || cur.adjustedPoints() === -1) {\r\n                return prev + cur.adjustedPoints();\r\n            } else {\r\n                return prev\r\n            }\r\n        }, 0)\r\n    }\r\n}\r\n\r\nenum ContainerType {\r\n    group = \"\",\r\n    metaTrait = \"meta trait\",\r\n    race = \"race\",\r\n    alternativeAbilities = \"alternative abilities\"\r\n}\r\n\r\nexport class Trait extends ListItem<Trait> {\r\n    static keys = [\"name\", \"basePoints\", \"levels\", \"allowHalfLevels\", \"hasHalfLevel\", \"roundDown\", \"controlRating\", \"types\", \"\"]\r\n    version = 1\r\n    tag = \"trait\"\r\n\r\n    hasLevels: boolean\r\n\r\n    name: string\r\n    basePoints: number\r\n    levels: number\r\n    allowHalfLevels: boolean\r\n    hasHalfLevel: boolean\r\n    roundDown: boolean\r\n    controlRating: ControlRollMultiplier\r\n    types: Set<TraitType> = new Set()\r\n    pointsPerLevel: number\r\n    disabled: boolean = false\r\n    containerType: ContainerType\r\n\r\n    modifiers: Set<TraitModifier> = new Set()\r\n\r\n    constructor(list: List<Trait>, keys: string[] = []) {\r\n        super(list, [...keys, ...Trait.keys]);\r\n    }\r\n\r\n    isActive() { return !this.disabled }\r\n    getLevel() { return this.levels }\r\n\r\n    isRacial(): Boolean {\r\n        if (!this.containedBy) {\r\n            return false\r\n        }\r\n        if (this.containedBy.containerType === ContainerType.race) {\r\n            return true\r\n        } else {\r\n            return this.containedBy.isRacial();\r\n        }\r\n    }\r\n\r\n    childrenPoints(): number {\r\n        return this.iterChildren().reduce((prev, cur) => {\r\n            if (cur.canContainChildren) {\r\n                prev += cur.findSelf().childrenPoints();\r\n            } else {\r\n                prev += cur.findSelf().adjustedPoints();\r\n            }\r\n            return prev\r\n        }, 0)\r\n    }\r\n\r\n    static getCRMultipland(cr: ControlRollMultiplier) {\r\n        switch (cr) {\r\n            case ControlRollMultiplier.cannotResist: return 2.5\r\n            case ControlRollMultiplier.resistRarely: return 2\r\n            case ControlRollMultiplier.resistFairlyOften: return 1.5\r\n            case ControlRollMultiplier.resistQuiteOften: return 1\r\n            case ControlRollMultiplier.resistAlmostAlway: return 0.5\r\n            default: return 1\r\n        }\r\n    }\r\n\r\n    adjustedPoints() {\r\n        if (this.isContainer()) {\r\n            return 0\r\n        } else {\r\n            return Trait.getAdjustedPoints(this.modifiers, this)\r\n        }\r\n    }\r\n\r\n    disable() { this.disabled = true; }\r\n    enable() { this.disabled = false; }\r\n\r\n    static getAdjustedPoints(modifiers: Set<TraitModifier>, trait: Trait): number {\r\n        let basePoints = trait.basePoints || 0;\r\n        let pointsPerLevel = trait.pointsPerLevel || 0;\r\n        let levels = trait.levels || 0;\r\n\r\n        let baseEnh = 0;\r\n        let levelEnh = 0;\r\n        let baseLim = 0;\r\n        let levelLim = 0;\r\n        let multiplier = 1;\r\n\r\n        modifiers?.forEach(modifier => {\r\n            if (modifier.enabled) {\r\n                let mod = modifier.costModifier();\r\n                console.log(mod);\r\n                switch (modifier.type) {\r\n                    case TraitModifierType.percentage:\r\n                    default:\r\n                        switch (modifier.affects) {\r\n                            case TraitModifierAffects.total:\r\n                            default:\r\n                                if (mod < 0) {\r\n                                    baseLim += mod;\r\n                                    levelLim += mod;\r\n                                } else {\r\n                                    baseEnh += mod;\r\n                                    levelEnh += mod;\r\n                                }\r\n                                break\r\n                            case TraitModifierAffects.base:\r\n                                if (mod < 0) {\r\n                                    baseLim += mod;\r\n                                } else {\r\n                                    baseEnh += mod;\r\n                                }\r\n                                break\r\n                            case TraitModifierAffects.levels:\r\n                                if (mod < 0) {\r\n                                    levelLim += mod;\r\n                                } else {\r\n                                    levelEnh += mod;\r\n                                }\r\n                                break\r\n                        }\r\n                        break\r\n                    case TraitModifierType.points:\r\n                        switch (modifier.affects) {\r\n                            case TraitModifierAffects.total:\r\n                            case TraitModifierAffects.base:\r\n                            default:\r\n                                basePoints += mod;\r\n                                break\r\n                            case TraitModifierAffects.levels:\r\n                                pointsPerLevel += mod;\r\n                                break\r\n                        }\r\n                        break\r\n                    case TraitModifierType.multiplier:\r\n                        multiplier *= mod;\r\n                        break\r\n                }\r\n            }\r\n        });\r\n\r\n        let modifiedBasePoints = basePoints;\r\n\r\n        let leveledPoints = pointsPerLevel * (levels + (trait.hasHalfLevel ? .5 : 0)) || 0;\r\n        if (baseEnh !== 0 || baseLim !== 0 || levelEnh !== 0 || levelLim !== 0) {\r\n            if (false) {\r\n                //TODO multiplicative modifiers\r\n            } else {\r\n                let baseMod = Math.max(baseEnh + baseLim, -80);\r\n                let levelMod = Math.max(levelEnh + levelLim, -80);\r\n\r\n                modifiedBasePoints = baseMod === levelMod ?\r\n                    TraitModifier.modifyPoints((modifiedBasePoints + leveledPoints), baseMod) :\r\n                    TraitModifier.modifyPoints(modifiedBasePoints, baseMod) + TraitModifier.modifyPoints(leveledPoints, levelMod);\r\n            }\r\n\r\n        } else {\r\n            modifiedBasePoints += (leveledPoints);\r\n        }\r\n        return TraitModifier.applyRounding((modifiedBasePoints * multiplier), Boolean(trait.roundDown))\r\n    }\r\n    addModifier(): TraitModifier {\r\n        const modifier = new TraitModifier(this);\r\n        this.modifiers.add(modifier);\r\n        return modifier\r\n    }\r\n\r\n    toString() {\r\n        return this.name\r\n            + this.hasLevels ? ` (${this.levels}${this.hasHalfLevel ? '.5' : ''})` : \"\"\r\n    }\r\n\r\n    toR20() {\r\n        let key;\r\n        const traitTemplate = {\r\n            name: this.name,\r\n            points: this.adjustedPoints(),\r\n            ref: this.reference,\r\n            notes: this.notes\r\n        }\r\n        const categories = this.categories;\r\n        const activeModifiers = Array.from(this.modifiers);\r\n        const perkFlag = categories.has(\"Perk\") || this.adjustedPoints() === 1;\r\n        const quirkFlag = categories.has(\"Quirk\") || this.adjustedPoints() === -1;\r\n        const advantageFlag = categories.has(\"Advantage\") || this.adjustedPoints() >= 0;\r\n        const disadvantageFlag = categories.has(\"Disadvantage\") || this.adjustedPoints() < 0;\r\n        const languageFlag = categories.has(\"Language\");\r\n        const nativeLanguageFlag = categories.has(\"Language\") && activeModifiers.some(modifier => modifier.name === \"Native\");\r\n        const racialFlag = this.isRacial();\r\n        const cultureFlag = this.name.includes(\"Cultural Familiarity\");\r\n        if (nativeLanguageFlag) {\r\n\r\n        } else if (languageFlag) {\r\n\r\n        }\r\n        else if (cultureFlag) {\r\n\r\n        } else if (racialFlag) {\r\n            key = \"repeating_racial\";\r\n            Object.assign(traitTemplate, {\r\n                cr: this.controlRating\r\n            });\r\n        } else if (quirkFlag) {\r\n            key = \"repeating_quirks\";\r\n            Object.assign(traitTemplate, {\r\n                cr: this.controlRating\r\n            });\r\n        } else if (disadvantageFlag) {\r\n            key = \"repeating_disadvantages\";\r\n            Object.assign(traitTemplate, {\r\n                cr: this.controlRating\r\n            });\r\n        } else if (perkFlag) {\r\n            key = \"repeating_perk\";\r\n            Object.assign(traitTemplate, {\r\n                foa: this.controlRating\r\n            });\r\n        } else if (advantageFlag) {\r\n            key = \"repeating_traits\";\r\n            Object.assign(traitTemplate, {\r\n                foa: this.controlRating\r\n            });\r\n        }\r\n        return {\r\n            key,\r\n            row_id: this.r20rowID,\r\n            data: traitTemplate\r\n        }\r\n    }\r\n}\r\n\r\nexport class TraitModifier extends Modifier<Trait> {\r\n    static keys = [\"cost\", \"type\", \"levels\", \"affects\"]\r\n    tag: string = \"modifier\"\r\n    version: number = 1\r\n\r\n    cost: number\r\n    type: TraitModifierType\r\n    levels: number\r\n    affects: TraitModifierAffects\r\n\r\n    hasLevels: boolean = false\r\n\r\n    constructor(owner: Trait, keys = []) {\r\n        super(owner, [...keys, ...TraitModifier.keys])\r\n    }\r\n\r\n    costModifier() {\r\n        return this.levels > 0 ? this.cost * this.levels : this.cost\r\n    }\r\n\r\n    static modifyPoints(points: number, modifier: number) {\r\n        return points + TraitModifier.calculateModifierPoints(points, modifier);\r\n    }\r\n    static calculateModifierPoints(points: number, modifier: number) {\r\n        return points * (modifier / 100)\r\n    }\r\n    static applyRounding(value: number, roundCostDown: boolean) {\r\n        return roundCostDown ? Math.floor(value) : Math.ceil(value)\r\n    }\r\n}\r\n\r\nenum TraitModifierType {\r\n    percentage = \"percentage\",\r\n    points = \"points\",\r\n    multiplier = \"multiplier\",\r\n}\r\n\r\nenum TraitModifierAffects {\r\n    base = \"base_only\",\r\n    levels = \"levels_only\",\r\n    total = \"total\"\r\n}\r\n\r\nexport enum TraitType {\r\n    mental = \"Mental\",\r\n    physical = \"Physical\",\r\n    social = \"Social\",\r\n    exotic = \"Exotic\",\r\n}\r\n\r\nenum ControlRollMultiplier {\r\n    cannotResist = \"0\",\r\n    resistRarely = \"6\",\r\n    resistFairlyOften = \"9\",\r\n    resistQuiteOften = \"12\",\r\n    resistAlmostAlway = \"15\",\r\n    noneRequired = \"\"\r\n}","import { Featurable, Signature } from \"./character\";\r\nimport { objectify, json } from \"@utils/json_utils\";\r\nimport { ListItem } from \"./misc/list\";\r\nimport { Default } from \"./misc/default\";\r\nimport { CharacterElement } from \"./misc/element\";\r\nimport { WeaponDefault } from \"@gcs/gcs\";\r\n\r\nexport abstract class Weapon<T extends Featurable> extends CharacterElement<T> {\r\n    static keys = [\"type\", \"damageType\", \"damageBase\", \"damageMod\", \"perDieMod\", \"armorDivisor\", \"strength\", \"requiresTwoHands\", \"usage\", \"defaults\"]\r\n    tag: string = \"weapon\"\r\n    static type: string\r\n    owner: T\r\n\r\n    //temp damage property\r\n    damage: string\r\n\r\n    damageType: DamageType\r\n    damageBase: BaseDamage\r\n    damageMod: number\r\n    perDieMod: number\r\n\r\n    armorDivisor: number\r\n\r\n    strength: number = 10\r\n    requiresTwoHands: boolean = false\r\n\r\n    usage: string\r\n    defaults: Set<WeaponDefault>\r\n\r\n    constructor(owner: T, keys: string[]) {\r\n        super(owner.getCharacter(), [...keys, ...Weapon.keys]);\r\n        this.owner = owner;\r\n        this.owner.weapons.add(this);\r\n        this.owner.getCharacter().featureList.registerWeapon(this);\r\n    }\r\n\r\n    getType() {\r\n        //@ts-ignore\r\n        return this.constructor.type\r\n    }\r\n\r\n    load(data: any) { this.getSerializer().transformers.get(this.tag).load(this, data) }\r\n    save() { this.character.serializer.transformers.get(this.tag).save(this) }\r\n\r\n    onDestroy() {\r\n        this.owner.getCharacter().featureList.removeWeapon(this.uuid);\r\n    }\r\n\r\n    calculateWeaponUsePenalty(): number {\r\n        const userStrength = this.owner.getCharacter().getAttribute(Signature.ST).calculateLevel();\r\n        const weaponRequirement = this.strength;\r\n        const penalty = userStrength - weaponRequirement;\r\n        if (penalty < 0) {\r\n            return penalty\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n}\r\n\r\nexport class MeleeWeapon<T extends Featurable> extends Weapon<T> {\r\n    static keys = [\"reach\", \"parry\", \"block\", \"unbalanced\", \"unwieldy\"]\r\n    static type = \"melee_weapon\"\r\n\r\n    reach: string\r\n    parry: number\r\n    block: number | false\r\n    unbalanced: boolean = false\r\n    unwieldy: boolean = false\r\n\r\n    constructor(owner: T, keys: string[] = []) {\r\n        super(owner, [...keys, ...MeleeWeapon.keys]);\r\n    }\r\n}\r\n\r\nexport class RangedWeapon<T extends Featurable> extends Weapon<T> {\r\n    static keys = [\"accuracy\", \"range\", \"rateOfFire\", \"shots\", \"bulk\"]\r\n    static type = \"ranged_weapon\"\r\n\r\n    accuracy: string = \"\"\r\n    range: string = \"\"\r\n    rateOfFire: string = \"\"\r\n    shots: string = \"\"\r\n    bulk: string = \"\"\r\n\r\n    constructor(owner: T, keys: string[] = []) {\r\n        super(owner, [...keys, ...RangedWeapon.keys]);\r\n    }\r\n}\r\n\r\nenum BaseDamage {\r\n    swing = \"sw\",\r\n    thrust = \"thr\"\r\n}\r\n\r\nenum DamageType {\r\n    impaling = \"imp\",\r\n    crushing = \"cr\",\r\n    cutting = \"cut\",\r\n    fatigue = \"fat\",\r\n    toxic = \"tox\",\r\n}","export module gcs {\r\n}\r\nexport interface Profile {\r\n    size_modifier: string\r\n    tech_level: string\r\n    birthday: string\r\n    name: string\r\n    eyes: string\r\n    skin: string\r\n    hair: string\r\n    handedness: string\r\n    weight: string\r\n    height: string\r\n    gender: string\r\n    race: string\r\n    body_type: string\r\n    age: string\r\n    portrait: string\r\n}\r\n\r\nexport enum FeatureType {\r\n    attributeBonus = \"attribute_bonus\",\r\n    damageResistanceBonus = \"dr_bonus\",\r\n    skillBonus = \"skill_bonus\",\r\n    weaponDamageBonus = \"weapon_bonus\",\r\n    reactionBonus = \"reaction_bonus\",\r\n    spellBonus = \"spell_bonus\",\r\n    containedWeightReduction = \"contained_weight_reduction\",\r\n    costReduction = \"cost_reduction\"\r\n}\r\n\r\nexport type LooseList<T> = T[] | Set<T>;\r\n\r\nexport interface Prerequisite<T> {\r\n\r\n}\r\n\r\nexport interface Validitable<T> {\r\n    prereqs: LooseList<Prerequisite<T>>\r\n}\r\n\r\nexport interface Notable {\r\n    reference: string\r\n    notes: string\r\n}\r\n\r\nexport interface Categorized {\r\n    categories: LooseList<string>\r\n}\r\n\r\nexport interface Feature {\r\n    type: FeatureType\r\n    amount: number\r\n}\r\n\r\nexport interface Modifier extends Notable {\r\n    version: number\r\n    disabled: boolean\r\n    name: string\r\n}\r\n\r\nexport interface Modifiable<T extends Modifier> {\r\n    modifiers: LooseList<T>\r\n}\r\n\r\nexport interface Weaponized {\r\n    weapons: LooseList<Weapon>\r\n}\r\n\r\nexport interface Featurable {\r\n    features: LooseList<Feature>\r\n}\r\n\r\nexport interface Default {\r\n    type: string\r\n    modifier: number\r\n}\r\n\r\nexport interface Weapon {\r\n    type: string\r\n    damage: {\r\n        type: string\r\n        base: string\r\n    }\r\n    strength: string\r\n    defaults: LooseList<WeaponDefault>\r\n}\r\n\r\nexport interface MeleeWeapon extends Weapon {\r\n    usage: string\r\n    reach: string\r\n    parry: string\r\n    block: string\r\n}\r\n\r\nexport interface RangedWeapon extends Weapon {\r\n    accuracy: string\r\n    range: string\r\n    rate_of_fire: string\r\n    shots: string\r\n    bulk: string\r\n    recoil: string\r\n}\r\n\r\nexport interface WeaponDefault extends Default {\r\n\r\n}\r\n\r\nexport interface ListItem<T extends ListItem<T>> {\r\n    type?: string\r\n    tag: string\r\n    version: number\r\n    open: boolean\r\n    children: LooseList<ListItem<T>>\r\n}\r\n\r\nexport interface SkillLike extends ListItem<SkillLike>, Weaponized, Featurable, Categorized, Notable {\r\n    name: string\r\n    difficulty: string\r\n    points: number\r\n}\r\n\r\nexport interface SkillDefault extends Default {\r\n    name?: string\r\n    specialization?: string\r\n\r\n}\r\n\r\nexport interface DefaultedFrom extends SkillDefault {\r\n\r\n}\r\n\r\nexport interface Skill extends SkillLike {\r\n    tech_level?: string\r\n    specialization?: string\r\n    defaulted_from?: DefaultedFrom\r\n    encumbrance_penalty_multiplier?: number\r\n    defaults?: LooseList<SkillDefault>\r\n}\r\n\r\nexport interface Technique extends SkillLike {\r\n    type: \"technique\"\r\n    limit: number\r\n    default: SkillDefault\r\n}\r\n\r\nexport interface ItemModifier extends Modifier {\r\n\r\n}\r\n\r\nexport interface Equipment extends ListItem<Equipment>, Weaponized, Featurable, Notable, Categorized, Modifiable<ItemModifier> {\r\n    type: \"equipment\" | \"equipment_container\"\r\n    quantity: number\r\n    equipped: boolean\r\n    weight: string\r\n    value: string\r\n    description: string\r\n    tech_level: string\r\n    legality_class: string\r\n}\r\n\r\nexport interface TraitModifier extends Modifier {\r\n    affects: string\r\n    cost_type: string\r\n    cost: number\r\n}\r\n\r\nexport interface Trait extends ListItem<Trait>, Weaponized, Featurable, Modifiable<TraitModifier> {\r\n    type: \"advantage\" | \"advantage_container\"\r\n    name: string\r\n    enabled: boolean\r\n    physical: boolean\r\n    exotic: boolean\r\n    mental: boolean\r\n    supernatural: boolean\r\n    social: boolean\r\n    base_points: number\r\n    round_down: number\r\n    cr: number\r\n    levels: number\r\n    allow_half_levels: boolean\r\n\r\n    points_per_level: number\r\n}\r\n\r\nexport interface Spell extends ListItem<Spell>, SkillLike {\r\n    type: \"spell\" | \"spell_container\"\r\n    college: string\r\n    power_source: string\r\n    spell_class: string\r\n    casting_cost: string\r\n    maintenance_cost: string\r\n    casting_time: string\r\n    duration: string\r\n}\r\n\r\nexport interface Note extends ListItem<Note>, Notable, Featurable {\r\n    type: \"note\" | \"note_container\"\r\n    text: string\r\n}","import { Character, Signature, Featurable } from \"./character/character\";\r\nimport { Skill, Difficulty, SkillDefault, SkillLike, SkillList } from \"./character/skill/skill\";\r\nimport { Trait, TraitType, TraitList, TraitModifier } from \"./character/trait\";\r\nimport { Spell, SpellList } from \"./character/spell\";\r\nimport { Technique, TehchniqueDifficulty } from \"./character/technique\";\r\nimport { Equipment, EquipmentList, EquipmentModifier } from \"./character/equipment\";\r\n\r\nimport { Serializer } from \"./character/serialization/serializer\";\r\nimport { isArray, json } from \"@utils/json_utils\";\r\nimport { Feature, SkillBonus, DRBonus } from \"@character/misc/feature\";\r\nimport { MeleeWeapon, RangedWeapon, Weapon } from \"@character/weapon\";\r\nimport { List, ListItem } from \"@character/misc/list\";\r\nimport { AttributeBonus, Attribute } from \"@character/attribute\";\r\nimport { FeatureType } from \"@gcs/gcs\";\r\n\r\nexport {\r\n    Attribute,\r\n    AttributeBonus,\r\n    Weapon,\r\n    MeleeWeapon,\r\n    RangedWeapon,\r\n    Character,\r\n    Signature,\r\n    Skill,\r\n    Difficulty,\r\n    SkillDefault,\r\n    SkillLike,\r\n    SkillList,\r\n    SkillBonus,\r\n    Trait,\r\n    TraitType,\r\n    TraitList,\r\n    TraitModifier,\r\n    Spell,\r\n    SpellList,\r\n    Technique,\r\n    TehchniqueDifficulty,\r\n    Equipment,\r\n    DRBonus,\r\n    EquipmentList,\r\n    EquipmentModifier,\r\n    Serializer,\r\n    isArray,\r\n    json,\r\n    Feature,\r\n    FeatureType,\r\n    Featurable,\r\n    List,\r\n    ListItem,\r\n}","import { Character, Signature } from \"../character/character\";\r\n\r\nconst base = {\r\n    \"schema_version\": 2,\r\n    \"oldId\": \"-M2EO3g9sXH6Q8lSFxpT\",\r\n    \"name\": \"\",\r\n    \"avatar\": \"\",\r\n    \"bio\": \"\",\r\n    \"gmnotes\": \"\",\r\n    \"defaulttoken\": \"\",\r\n    \"tags\": \"[]\",\r\n    \"controlledby\": \"\",\r\n    \"inplayerjournals\": \"\",\r\n    \"attribs\": [\r\n        {\r\n            name: \"show_new_techniques\",\r\n            current: \"1\",\r\n            max: \"\",\r\n            id: generateUUID()\r\n        },\r\n        {\r\n            name: \"show_old_techniques\",\r\n            current: \"0\",\r\n            max: \"\",\r\n            id: generateUUID()\r\n        },\r\n        {\r\n            \"name\": \"point_summary_layout\",\r\n            \"current\": \"2\",\r\n            \"max\": \"\",\r\n            \"id\": generateUUID()\r\n        }\r\n    ],\r\n    // @ts-ignore\r\n    \"abilities\": []\r\n}\r\n\r\nexport function exportR20(character: Character) {\r\n    const profile = character.profile;\r\n    const pointTotals = character.pointTotals();\r\n    const native_language = character.traitList.iter().find(trait => {\r\n        if (\r\n            trait.categories.has(\"Language\") &&\r\n            Array.from(trait.modifiers.values()).some(modifier => {\r\n                if (modifier.enabled && modifier.name.includes(\"Native\")) return true\r\n            })\r\n        ) {\r\n            return true\r\n        }\r\n    });\r\n    const static_fields = {\r\n        strength_mod: character.getAttribute(Signature.ST).getMod(),\r\n        strength_points: character.getAttribute(Signature.ST).pointsSpent(),\r\n        dexterity_mod: character.getAttribute(Signature.DX).getMod(),\r\n        dexterity_points: character.getAttribute(Signature.DX).pointsSpent(),\r\n        intelligence_mod: character.getAttribute(Signature.IQ).getMod(),\r\n        intelligence_points: character.getAttribute(Signature.IQ).pointsSpent(),\r\n        health_mod: character.getAttribute(Signature.HT).getMod(),\r\n        health_points: character.getAttribute(Signature.HT).pointsSpent(),\r\n        perception_mod: character.getAttribute(Signature.Per).getMod(),\r\n        perception_points: character.getAttribute(Signature.Per).pointsSpent(),\r\n        willpower_mod: character.getAttribute(Signature.Will).getMod(),\r\n        willpower_points: character.getAttribute(Signature.Will).pointsSpent(),\r\n        basic_speed_mod: character.getAttribute(Signature.Speed).getMod(),\r\n        basic_speed_points: character.getAttribute(Signature.Speed).pointsSpent(),\r\n        basic_move_mod: character.getAttribute(Signature.Move).getMod(),\r\n        basic_move_points: character.getAttribute(Signature.Move).pointsSpent(),\r\n        hit_points_max_mod: character.getAttribute(Signature.HP).getMod(),\r\n        hit_points_max_points: character.getAttribute(Signature.HP).pointsSpent(),\r\n        fatigue_points_mod: character.getAttribute(Signature.FP).getMod(),\r\n        fatigue_points_points: character.getAttribute(Signature.FP).pointsSpent(),\r\n\r\n        name_native_language: native_language ? native_language.name : \"\",\r\n        native_language_spoken: 0,\r\n        native_language_written: 0,\r\n\r\n        tl: profile.techLevel,\r\n        fullname: profile.name,\r\n        race: profile.race,\r\n        gender: profile.gender,\r\n        size: profile.sizeModifier,\r\n        hand: profile.handedness,\r\n        birth_date: profile.birthday,\r\n        age: profile.age,\r\n        height: profile.height,\r\n        weight: profile.weight,\r\n        eyes: profile.eyes,\r\n        hair: profile.hair,\r\n\r\n        total_points: pointTotals.total,\r\n        skills_points: pointTotals.skills\r\n    }\r\n    var output = base;\r\n    output.name = profile.name;\r\n    output.avatar = 'data:image/png;base64,' + profile.portrait;\r\n    output.attribs = output.attribs.concat(\r\n        writeObjects(character.traitList.iter().map(trait => trait.toR20())),\r\n        writeObjects(character.skillList.iter().map(skill => skill.toR20())),\r\n        writeObjects(character.allItems().map(item => item.toR20())),\r\n        writeObjects(static_fields, true)\r\n    )\r\n    var json = JSON.stringify(output);\r\n    var blob = new Blob([json], { type: \"application/json\" });\r\n    var url = URL.createObjectURL(blob);\r\n    return url\r\n}\r\n\r\nfunction writeObjects(objects: any, single = false) {\r\n    //if you put in a list of things with a similar scheme\r\n    if (!single) {\r\n        console.log(objects);\r\n        return [].concat.apply([], objects.map((object: any) => {\r\n            const row_id = object.row_id;\r\n            var x = Object.entries(object.data).map(key => {\r\n                return {\r\n                    name: `${object.key}_${row_id}_${key[0]}`,\r\n                    current: key[1] ? key[1] : \"\",\r\n                    max: \"\",\r\n                    id: generateUUID()\r\n                }\r\n            });\r\n            //console.log(x);\r\n            return x\r\n        }))\r\n    } else if (single) {\r\n        //if you put in a single object without a scheme\r\n        var x = [].concat.apply([], Object.entries(objects).map(object => {\r\n            const row_id = generateRowID();\r\n            return {\r\n                name: `${object[0]}`,\r\n                current: object[1] ? object[1] : \"\",\r\n                max: \"\",\r\n                id: generateUUID()\r\n            }\r\n        }));\r\n        //console.log(x);\r\n        return x\r\n    } else {\r\n        console.log(\"nothing is happening\");\r\n    }\r\n}\r\n\r\n\r\nexport function generateUUID() {\r\n    var a = 0, b = [];\r\n    return function () {\r\n        var c = (new Date()).getTime() + 0, d = c === a;\r\n        a = c;\r\n        for (var e = new Array(8), f = 7; 0 <= f; f--) {\r\n            e[f] = \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\".charAt(c % 64);\r\n            c = Math.floor(c / 64);\r\n        }\r\n        // @ts-ignore\r\n        c = e.join(\"\");\r\n        if (d) {\r\n            for (f = 11; 0 <= f && 63 === b[f]; f--) {\r\n                b[f] = 0;\r\n            }\r\n            b[f]++;\r\n        } else {\r\n            for (f = 0; 12 > f; f++) {\r\n                b[f] = Math.floor(64 * Math.random());\r\n            }\r\n        }\r\n        for (f = 0; 12 > f; f++) {\r\n            // @ts-ignore\r\n            c += \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\".charAt(b[f]);\r\n        }\r\n        return c;\r\n    }();\r\n}\r\n\r\nexport function generateRowID() {\r\n    // @ts-ignore\r\n    return generateUUID().replace(/_/g, \"Z\");\r\n}\r\n","export type json = { [key: string]: any }\r\nexport function objectify<T>(object: string | json, reviver?: (this: any, key: string, value: any) => T): T {\r\n    if (typeof object === \"string\") object = JSON.parse(object, reviver);\r\n    return object as T\r\n}\r\n\r\nexport function isArray(potentialArray: any): (any | any[])[] {\r\n    return Array.isArray(potentialArray) ? potentialArray : []\r\n}","export enum StringCompare {\r\n    isAnything = \"is_anything\",\r\n    is = \"is\",\r\n    isNot = \"is_not\",\r\n    contains = \"contains\",\r\n    doesNotContain = \"does_not_contain\",\r\n    startsWith = \"starts_with\",\r\n    doesNotStartWith = \"does_not_start_with\",\r\n    endsWith = \"ends_with\",\r\n    doesNotEndWith = \"does_not_end_with\",\r\n}\r\n\r\nfunction iterableCompare(compare: string, compareTo: string | string[] | Set<string>) {\r\n\r\n}\r\n\r\nexport function stringCompare(defaultQuery: string, skillQuery: string | string[] | Set<string>, type: StringCompare): boolean {\r\n    defaultQuery = defaultQuery?.toLowerCase();\r\n    skillQuery = skillQuery?.toString()?.toLowerCase();\r\n\r\n    //if (defaultQuery === \"fast-draw\") console.log(skillQuery, type, defaultQuery);\r\n\r\n    switch (type) {\r\n        case StringCompare.isAnything: return true\r\n        case StringCompare.is: return skillQuery === defaultQuery\r\n        case StringCompare.isNot: return skillQuery !== defaultQuery\r\n        case StringCompare.contains: return skillQuery.includes(defaultQuery)\r\n        case StringCompare.doesNotContain: return !skillQuery.includes(defaultQuery)\r\n        case StringCompare.startsWith: return skillQuery.startsWith(defaultQuery)\r\n        case StringCompare.doesNotStartWith: return !skillQuery.startsWith(defaultQuery)\r\n        case StringCompare.endsWith: return skillQuery.endsWith(defaultQuery)\r\n        case StringCompare.doesNotEndWith: return !skillQuery.endsWith(defaultQuery)\r\n        default: return false\r\n    }\r\n}"],"sourceRoot":""}